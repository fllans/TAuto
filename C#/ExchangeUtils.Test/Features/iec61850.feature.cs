// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ExchangeUtils.Tests.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("iec61850")]
    public partial class Iec61850Feature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "iec61850.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "iec61850", null, ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("GwEx2ex.iec61850TimeStamp")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicTimeStamp")]
        [NUnit.Framework.CategoryAttribute("StoryGwEx2ex")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_GwEx2ex")]
        [NUnit.Framework.CategoryAttribute("suiteTimeStamp")]
        public void GwEx2Ex_Iec61850TimeStamp()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicTimeStamp",
                    "StoryGwEx2ex",
                    "parentSuite2_ExchUtils_GwEx2ex",
                    "suiteTimeStamp"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GwEx2ex.iec61850TimeStamp", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 6
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 7
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 8
    testRunner.Given("Архив \'ArcWork\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 9
 testRunner.Given("Связь с 1 устройством \'RzaTecon300\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 10
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 11
    testRunner.Given("Архив \'ArcReciv\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 12
 testRunner.Given("Связь с 2 устройством \'GwEx2_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 13
 testRunner.When("Чтение исходных архивных данных \'Var_BOOL01\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 14
    testRunner.Then("Сравнение архивных данных \'iec61850_BOOL\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 15
    testRunner.When("Чтение исходных архивных данных \'VarBuff_BOOL01\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 16
    testRunner.Then("Сравнение архивных данных \'iec61850_BOOL_buff\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 17
    testRunner.When("Чтение исходных архивных данных \'Var_DINT01\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 18
    testRunner.Then("Сравнение архивных данных \'iec61850_DINT\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 19
    testRunner.When("Чтение исходных архивных данных \'VarBuff_DINT01\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 20
    testRunner.Then("Сравнение архивных данных \'iec61850_DINT_buff\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 21
    testRunner.When("Чтение исходных архивных данных \'Var_REAL01\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 22
    testRunner.Then("Сравнение архивных данных \'iec61850_REAL\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 23
    testRunner.When("Чтение исходных архивных данных \'VarBuff_REAL01\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 24
    testRunner.Then("Сравнение архивных данных \'iec61850_REAL_buff\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("GwEx2ex.iec61850GoodQual")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("StoryGwEx2ex")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_GwEx2ex")]
        [NUnit.Framework.CategoryAttribute("suiteПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void GwEx2Ex_Iec61850GoodQual()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicПроверка_Quality",
                    "StoryGwEx2ex",
                    "parentSuite2_ExchUtils_GwEx2ex",
                    "suiteПроверка_Quality",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GwEx2ex.iec61850GoodQual", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 30
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 31
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 32
 testRunner.Given("Связь с устройством \'RzaTecon300\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 33
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 34
 testRunner.Given("Связь с устройством \'GwEx2_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 35
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iec61850_BOOL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 36
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iec61850_DINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 37
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iec61850_REAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("GwEx2ex.iec61850ReadWrite")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("StoryGwEx2ex")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_GwEx2ex")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteРазрешенные_переменные")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void GwEx2Ex_Iec61850ReadWrite()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "StoryGwEx2ex",
                    "parentSuite2_ExchUtils_GwEx2ex",
                    "suiteЧтение_Запись",
                    "subSuiteРазрешенные_переменные",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GwEx2ex.iec61850ReadWrite", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 43
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 44
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 45
 testRunner.Given("Связь с устройством \'RzaTecon300\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 46
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 47
 testRunner.Given("Связь с устройством \'GwEx2_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 48
 testRunner.When("Записываю Runtime значение \'True\' в \'iec61850_ExBOOL_true\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 49
 testRunner.Then("Проверяю значение переменной тех объекта \'iec61850_BOOL_external\'.\'Значение\' = \'T" +
                        "rue\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 50
 testRunner.When("Записываю Runtime значение \'True\' в \'iec61850_ExBOOL_false\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 51
 testRunner.Then("Проверяю значение переменной тех объекта \'iec61850_BOOL_external\'.\'Значение\' = \'F" +
                        "alse\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("GwEx2ex.iec61850WhiteList")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("StoryGwEx2ex")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_GwEx2ex")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteЗапись_запрещена")]
        public void GwEx2Ex_Iec61850WhiteList()
        {
            string[] tagsOfScenario = new string[] {
                    "ignore",
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "StoryGwEx2ex",
                    "parentSuite2_ExchUtils_GwEx2ex",
                    "suiteЧтение_Запись",
                    "subSuiteЗапись_запрещена"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GwEx2ex.iec61850WhiteList", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 57
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 58
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 59
 testRunner.Given("Связь с устройством \'RzaTecon300\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 60
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 61
 testRunner.Given("Связь с устройством \'GwEx2_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 62
 testRunner.Then("Проверка записи \'iec61850BOOL_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 63
 testRunner.Then("Проверка записи \'iec61850BYTE_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 64
 testRunner.Then("Проверка записи \'iec61850WORD_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("GwEx1ex.iec61850TimeStamp")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicTimeStamp")]
        [NUnit.Framework.CategoryAttribute("StoryGwEx1ex")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_GwEx1ex")]
        [NUnit.Framework.CategoryAttribute("suiteTimeStamp")]
        public void GwEx1Ex_Iec61850TimeStamp()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicTimeStamp",
                    "StoryGwEx1ex",
                    "parentSuite2_ExchUtils_GwEx1ex",
                    "suiteTimeStamp"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GwEx1ex.iec61850TimeStamp", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 70
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 71
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 72
    testRunner.Given("Архив \'ArcWork\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 73
 testRunner.Given("Связь с 1 устройством \'RzaTecon300\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 74
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 75
    testRunner.Given("Архив \'ArcReciv\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 76
 testRunner.Given("Связь с 2 устройством \'GwEx_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 77
 testRunner.When("Чтение исходных архивных данных \'Var_BOOL01\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 78
    testRunner.Then("Сравнение архивных данных \'iec61850_BOOL\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 79
    testRunner.When("Чтение исходных архивных данных \'VarBuff_BOOL01\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 80
    testRunner.Then("Сравнение архивных данных \'iec61850_BOOL_buff\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 81
    testRunner.When("Чтение исходных архивных данных \'Var_DINT01\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 82
    testRunner.Then("Сравнение архивных данных \'iec61850_DINT\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 83
    testRunner.When("Чтение исходных архивных данных \'VarBuff_DINT01\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 84
    testRunner.Then("Сравнение архивных данных \'iec61850_DINT_buff\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 85
    testRunner.When("Чтение исходных архивных данных \'Var_REAL01\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 86
    testRunner.Then("Сравнение архивных данных \'iec61850_REAL\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 87
    testRunner.When("Чтение исходных архивных данных \'VarBuff_REAL01\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 88
    testRunner.Then("Сравнение архивных данных \'iec61850_REAL_buff\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("GwEx1ex.iec61850GoodQual")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("StoryGwEx1ex")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_GwEx1ex")]
        [NUnit.Framework.CategoryAttribute("suiteПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void GwEx1Ex_Iec61850GoodQual()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicПроверка_Quality",
                    "StoryGwEx1ex",
                    "parentSuite2_ExchUtils_GwEx1ex",
                    "suiteПроверка_Quality",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GwEx1ex.iec61850GoodQual", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 94
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 95
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 96
 testRunner.Given("Связь с устройством \'RzaTecon300\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 97
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 98
 testRunner.Given("Связь с устройством \'GwEx_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 99
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iec61850_BOOL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 100
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iec61850_DINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 101
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iec61850_REAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("GwEx1ex.iec61850ReadWrite")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("StoryGwEx1ex")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_GwEx1ex")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteРазрешенные_переменные")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void GwEx1Ex_Iec61850ReadWrite()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "StoryGwEx1ex",
                    "parentSuite2_ExchUtils_GwEx1ex",
                    "suiteЧтение_Запись",
                    "subSuiteРазрешенные_переменные",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GwEx1ex.iec61850ReadWrite", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 108
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 109
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 110
 testRunner.Given("Связь с устройством \'RzaTecon300\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 111
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 112
 testRunner.Given("Связь с устройством \'GwEx_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 113
 testRunner.When("Записываю Runtime значение \'True\' в \'iec61850_ExBOOL_true\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 114
 testRunner.Then("Проверяю значение переменной тех объекта \'iec61850_BOOL_external\'.\'Значение\' = \'T" +
                        "rue\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 115
 testRunner.When("Записываю Runtime значение \'True\' в \'iec61850_ExBOOL_false\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 116
 testRunner.Then("Проверяю значение переменной тех объекта \'iec61850_BOOL_external\'.\'Значение\' = \'F" +
                        "alse\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("GwEx1ex.iec61850WhiteList")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("StoryGwEx1ex")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_GwEx1ex")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteЗапись_запрещена")]
        public void GwEx1Ex_Iec61850WhiteList()
        {
            string[] tagsOfScenario = new string[] {
                    "ignore",
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "StoryGwEx1ex",
                    "parentSuite2_ExchUtils_GwEx1ex",
                    "suiteЧтение_Запись",
                    "subSuiteЗапись_запрещена"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GwEx1ex.iec61850WhiteList", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 123
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 124
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 125
 testRunner.Given("Связь с устройством \'RzaTecon300\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 126
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 127
 testRunner.Given("Связь с устройством \'GwEx_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 128
 testRunner.Then("Проверка записи \'iec61850BOOL_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 129
 testRunner.Then("Проверка записи \'iec61850BYTE_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 130
 testRunner.Then("Проверка записи \'iec61850WORD_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("MbTcpSlave.iec61850GoodQual")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("StoryModbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_Modbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void MbTcpSlave_Iec61850GoodQual()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicПроверка_Quality",
                    "StoryModbus_TCP_Slave",
                    "parentSuite2_ExchUtils_Modbus_TCP_Slave",
                    "suiteПроверка_Quality",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("MbTcpSlave.iec61850GoodQual", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 136
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 137
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 138
 testRunner.Given("Связь с устройством \'RzaTecon300\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 139
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 140
 testRunner.Given("Связь с устройством \'ModbusTcp_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 141
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iec61850_BOOL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 142
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iec61850_DINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 143
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iec61850_REAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("MbTcpSlave.iec61850ReadWrite")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("StoryModbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_Modbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteРазрешенные_переменные")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void MbTcpSlave_Iec61850ReadWrite()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "StoryModbus_TCP_Slave",
                    "parentSuite2_ExchUtils_Modbus_TCP_Slave",
                    "suiteЧтение_Запись",
                    "subSuiteРазрешенные_переменные",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("MbTcpSlave.iec61850ReadWrite", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 149
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 150
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 151
 testRunner.Given("Связь с устройством \'RzaTecon300\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 152
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 153
 testRunner.Given("Связь с устройством \'ModbusTcp_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 154
 testRunner.When("Записываю Runtime значение \'True\' в \'iec61850_ExBOOL_true\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 155
 testRunner.Then("Проверяю значение переменной тех объекта \'iec61850_BOOL_external\'.\'Значение\' = \'T" +
                        "rue\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 156
 testRunner.When("Записываю Runtime значение \'True\' в \'iec61850_ExBOOL_false\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 157
 testRunner.Then("Проверяю значение переменной тех объекта \'iec61850_BOOL_external\'.\'Значение\' = \'F" +
                        "alse\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("MbTcpSlave.iec61850WhiteList")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("StoryModbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_Modbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteЗапись_запрещена")]
        public void MbTcpSlave_Iec61850WhiteList()
        {
            string[] tagsOfScenario = new string[] {
                    "ignore",
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "StoryModbus_TCP_Slave",
                    "parentSuite2_ExchUtils_Modbus_TCP_Slave",
                    "suiteЧтение_Запись",
                    "subSuiteЗапись_запрещена"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("MbTcpSlave.iec61850WhiteList", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 163
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 164
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 165
 testRunner.Given("Связь с устройством \'RzaTecon300\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 166
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 167
 testRunner.Given("Связь с устройством \'ModbusTcp_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 168
 testRunner.Then("Проверка записи \'iec61850BOOL_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 169
 testRunner.Then("Проверка записи \'iec61850BYTE_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 170
 testRunner.Then("Проверка записи \'iec61850WORD_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Slave104.iec61850TimeStamp")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicTimeStamp")]
        [NUnit.Framework.CategoryAttribute("Storyiec104_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_iec104_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteTimeStamp")]
        public void Slave104_Iec61850TimeStamp()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicTimeStamp",
                    "Storyiec104_Slave",
                    "parentSuite2_ExchUtils_iec104_Slave",
                    "suiteTimeStamp"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Slave104.iec61850TimeStamp", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 175
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 176
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 177
    testRunner.Given("Архив \'ArcWork\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 178
 testRunner.Given("Связь с 1 устройством \'RzaTecon300\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 179
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 180
    testRunner.Given("Архив \'ArcReciv\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 181
 testRunner.Given("Связь с 2 устройством \'Iec104_Sp\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 182
 testRunner.When("Чтение исходных архивных данных \'Var_BOOL01\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 183
    testRunner.Then("Сравнение архивных данных \'iec61850_BOOL\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 184
    testRunner.When("Чтение исходных архивных данных \'VarBuff_BOOL01\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 185
    testRunner.Then("Сравнение архивных данных \'iec61850_BOOL_buff\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 186
    testRunner.When("Чтение исходных архивных данных \'Var_DINT01\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 187
    testRunner.Then("Сравнение архивных данных \'iec61850_DINT\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 188
    testRunner.When("Чтение исходных архивных данных \'VarBuff_DINT01\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 189
    testRunner.Then("Сравнение архивных данных \'iec61850_DINT_buff\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 190
    testRunner.When("Чтение исходных архивных данных \'Var_REAL01\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 191
    testRunner.Then("Сравнение архивных данных \'iec61850_REAL\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 192
    testRunner.When("Чтение исходных архивных данных \'VarBuff_REAL01\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 193
    testRunner.Then("Сравнение архивных данных \'iec61850_REAL_buff\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Slave104.iec61850GoodQual")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("Storyiec104_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_iec104_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void Slave104_Iec61850GoodQual()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicПроверка_Quality",
                    "Storyiec104_Slave",
                    "parentSuite2_ExchUtils_iec104_Slave",
                    "suiteПроверка_Quality",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Slave104.iec61850GoodQual", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 199
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 200
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 201
 testRunner.Given("Связь с устройством \'RzaTecon300\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 202
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 203
 testRunner.Given("Связь с устройством \'Iec104_Sp\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 204
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iec61850_BOOL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 205
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iec61850_DINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 206
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iec61850_REAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Slave104.iec61850ReadWrite")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("Storyiec104_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_iec104_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteРазрешенные_переменные")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void Slave104_Iec61850ReadWrite()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "Storyiec104_Slave",
                    "parentSuite2_ExchUtils_iec104_Slave",
                    "suiteЧтение_Запись",
                    "subSuiteРазрешенные_переменные",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Slave104.iec61850ReadWrite", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 212
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 213
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 214
 testRunner.Given("Связь с устройством \'RzaTecon300\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 215
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 216
 testRunner.Given("Связь с устройством \'Iec104_Sp\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 217
 testRunner.When("Записываю Runtime значение \'True\' в \'iec61850_ExBOOL_true\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 218
 testRunner.Then("Проверяю значение переменной тех объекта \'iec61850_BOOL_external\'.\'Значение\' = \'T" +
                        "rue\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 219
 testRunner.When("Записываю Runtime значение \'True\' в \'iec61850_ExBOOL_false\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 220
 testRunner.Then("Проверяю значение переменной тех объекта \'iec61850_BOOL_external\'.\'Значение\' = \'F" +
                        "alse\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("GwEx1Proxy.iec61850GoodQual")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("StoryGwEx1Proxy")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_GwEx1Proxy")]
        [NUnit.Framework.CategoryAttribute("suiteПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void GwEx1Proxy_Iec61850GoodQual()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicПроверка_Quality",
                    "StoryGwEx1Proxy",
                    "parentSuite2_ExchUtils_GwEx1Proxy",
                    "suiteПроверка_Quality",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GwEx1Proxy.iec61850GoodQual", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 226
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 227
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 228
 testRunner.Given("Связь с устройством \'VerProxyGwEx25_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 229
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iec61850_BOOL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 230
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iec61850_DINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 231
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iec61850_REAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("GwEx1Proxy.iec61850ReadWrite")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("StoryGwEx1Proxy")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_GwEx1Proxy")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteРазрешенные_переменные")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void GwEx1Proxy_Iec61850ReadWrite()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "StoryGwEx1Proxy",
                    "parentSuite2_ExchUtils_GwEx1Proxy",
                    "suiteЧтение_Запись",
                    "subSuiteРазрешенные_переменные",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GwEx1Proxy.iec61850ReadWrite", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 237
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 238
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 239
 testRunner.Given("Связь с устройством \'VerProxyGwEx25_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 240
 testRunner.When("Записываю Runtime значение \'True\' в \'iec61850_ExBOOL_true\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 241
 testRunner.Then("Проверяю значение переменной тех объекта \'iec61850_BOOL_external\'.\'Значение\' = \'T" +
                        "rue\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 242
 testRunner.When("Записываю Runtime значение \'True\' в \'iec61850_ExBOOL_false\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 243
 testRunner.Then("Проверяю значение переменной тех объекта \'iec61850_BOOL_external\'.\'Значение\' = \'F" +
                        "alse\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("GwEx1Proxy.iec61850WhiteList")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("StoryGwEx1Proxy")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_GwEx1Proxy")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteЗапись_запрещена")]
        public void GwEx1Proxy_Iec61850WhiteList()
        {
            string[] tagsOfScenario = new string[] {
                    "ignore",
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "StoryGwEx1Proxy",
                    "parentSuite2_ExchUtils_GwEx1Proxy",
                    "suiteЧтение_Запись",
                    "subSuiteЗапись_запрещена"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GwEx1Proxy.iec61850WhiteList", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 249
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 250
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 251
 testRunner.Given("Связь с устройством \'VerProxyGwEx25_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 252
 testRunner.Then("Проверка записи \'iec61850BOOL_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 253
 testRunner.Then("Проверка записи \'iec61850BYTE_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("GwEx2Proxy.iec61850GoodQual")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("StoryGwEx2Proxy")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_GwEx2Proxy")]
        [NUnit.Framework.CategoryAttribute("suiteПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void GwEx2Proxy_Iec61850GoodQual()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicПроверка_Quality",
                    "StoryGwEx2Proxy",
                    "parentSuite2_ExchUtils_GwEx2Proxy",
                    "suiteПроверка_Quality",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GwEx2Proxy.iec61850GoodQual", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 260
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 261
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 262
 testRunner.Given("Связь с устройством \'VerProxy2GwEx25_2\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 263
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iec61850_BOOL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 264
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iec61850_DINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 265
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iec61850_REAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("GwEx2Proxy.iec61850ReadWrite")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("StoryGwEx2Proxy")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_GwEx2Proxy")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteРазрешенные_переменные")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void GwEx2Proxy_Iec61850ReadWrite()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "StoryGwEx2Proxy",
                    "parentSuite2_ExchUtils_GwEx2Proxy",
                    "suiteЧтение_Запись",
                    "subSuiteРазрешенные_переменные",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GwEx2Proxy.iec61850ReadWrite", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 271
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 272
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 273
 testRunner.Given("Связь с устройством \'VerProxy2GwEx25_2\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 274
 testRunner.When("Записываю Runtime значение \'True\' в \'iec61850_ExBOOL_true\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 275
 testRunner.Then("Проверяю значение переменной тех объекта \'iec61850_BOOL_external\'.\'Значение\' = \'T" +
                        "rue\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 276
 testRunner.When("Записываю Runtime значение \'True\' в \'iec61850_ExBOOL_false\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 277
 testRunner.Then("Проверяю значение переменной тех объекта \'iec61850_BOOL_external\'.\'Значение\' = \'F" +
                        "alse\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("GwEx2Proxy.iec61850WhiteList")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("StoryGwEx2Proxy")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_GwEx2Proxy")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteЗапись_запрещена")]
        public void GwEx2Proxy_Iec61850WhiteList()
        {
            string[] tagsOfScenario = new string[] {
                    "ignore",
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "StoryGwEx2Proxy",
                    "parentSuite2_ExchUtils_GwEx2Proxy",
                    "suiteЧтение_Запись",
                    "subSuiteЗапись_запрещена"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GwEx2Proxy.iec61850WhiteList", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 283
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 284
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 285
 testRunner.Given("Связь с устройством \'VerProxy2GwEx25_2\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 286
 testRunner.Then("Проверка записи \'iec61850BOOL_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 287
 testRunner.Then("Проверка записи \'iec61850BYTE_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 288
 testRunner.Then("Проверка записи \'iec61850WORD_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("OpcUAServer.iec61850TimeStamp")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicTimeStamp")]
        [NUnit.Framework.CategoryAttribute("StoryOpcUAServer")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_OpcUAServer")]
        [NUnit.Framework.CategoryAttribute("suiteTimeStamp")]
        public void OpcUAServer_Iec61850TimeStamp()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicTimeStamp",
                    "StoryOpcUAServer",
                    "parentSuite2_ExchUtils_OpcUAServer",
                    "suiteTimeStamp"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("OpcUAServer.iec61850TimeStamp", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 293
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 294
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 295
    testRunner.Given("Архив \'ArcWork\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 296
 testRunner.Given("Связь с 1 устройством \'RzaTecon300\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 297
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 298
    testRunner.Given("Архив \'ArcReciv\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 299
 testRunner.Given("Связь с 2 устройством \'OPC_UA_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 300
 testRunner.When("Чтение исходных архивных данных \'Var_BOOL01\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 301
    testRunner.Then("Сравнение архивных данных \'iec61850_BOOL\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 302
    testRunner.When("Чтение исходных архивных данных \'VarBuff_BOOL01\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 303
    testRunner.Then("Сравнение архивных данных \'iec61850_BOOL_buff\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 304
    testRunner.When("Чтение исходных архивных данных \'Var_DINT01\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 305
    testRunner.Then("Сравнение архивных данных \'iec61850_DINT\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 306
    testRunner.When("Чтение исходных архивных данных \'VarBuff_DINT01\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 307
    testRunner.Then("Сравнение архивных данных \'iec61850_DINT_buff\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 308
    testRunner.When("Чтение исходных архивных данных \'Var_REAL01\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 309
    testRunner.Then("Сравнение архивных данных \'iec61850_REAL\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 310
    testRunner.When("Чтение исходных архивных данных \'VarBuff_REAL01\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 311
    testRunner.Then("Сравнение архивных данных \'iec61850_REAL_buff\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("OpcUAServer.iec61850GoodQual")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("StoryOpcUAServer")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_OpcUAServer")]
        [NUnit.Framework.CategoryAttribute("suiteПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void OpcUAServer_Iec61850GoodQual()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicПроверка_Quality",
                    "StoryOpcUAServer",
                    "parentSuite2_ExchUtils_OpcUAServer",
                    "suiteПроверка_Quality",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("OpcUAServer.iec61850GoodQual", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 317
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 318
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 319
 testRunner.Given("Связь с устройством \'RzaTecon300\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 320
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 321
 testRunner.Given("Связь с устройством \'OPC_UA_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 322
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iec61850_BOOL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 323
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iec61850_DINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 324
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iec61850_REAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("OpcUAServer.iec61850ReadWrite")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("StoryOpcUAServer")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_OpcUAServer")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteРазрешенные_переменные")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void OpcUAServer_Iec61850ReadWrite()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "StoryOpcUAServer",
                    "parentSuite2_ExchUtils_OpcUAServer",
                    "suiteЧтение_Запись",
                    "subSuiteРазрешенные_переменные",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("OpcUAServer.iec61850ReadWrite", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 330
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 331
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 332
 testRunner.Given("Связь с устройством \'RzaTecon300\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 333
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 334
 testRunner.Given("Связь с устройством \'OPC_UA_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 335
 testRunner.When("Записываю Runtime значение \'True\' в \'iec61850_ExBOOL_true\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 336
 testRunner.Then("Проверяю значение переменной тех объекта \'iec61850_BOOL_external\'.\'Значение\' = \'T" +
                        "rue\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 337
 testRunner.When("Записываю Runtime значение \'True\' в \'iec61850_ExBOOL_false\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 338
 testRunner.Then("Проверяю значение переменной тех объекта \'iec61850_BOOL_external\'.\'Значение\' = \'F" +
                        "alse\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("OpcUAServer.iec61850WhiteList")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("StoryOpcUAServer")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_OpcUAServer")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteЗапись_запрещена")]
        public void OpcUAServer_Iec61850WhiteList()
        {
            string[] tagsOfScenario = new string[] {
                    "ignore",
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "StoryOpcUAServer",
                    "parentSuite2_ExchUtils_OpcUAServer",
                    "suiteЧтение_Запись",
                    "subSuiteЗапись_запрещена"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("OpcUAServer.iec61850WhiteList", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 344
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 345
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 346
 testRunner.Given("Связь с устройством \'RzaTecon300\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 347
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 348
 testRunner.Given("Связь с устройством \'OPC_UA_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 349
 testRunner.Then("Проверка записи \'iec61850BOOL_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 350
 testRunner.Then("Проверка записи \'iec61850BYTE_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 351
 testRunner.Then("Проверка записи \'iec61850WORD_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
