// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ExchangeUtils.Tests.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Iec104Slave_Runtime")]
    [NUnit.Framework.IgnoreAttribute("Ignored feature")]
    public partial class Iec104Slave_RuntimeFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = new string[] {
                "ignore"};
        
#line 1 "old_Iec104Slave_Runtime.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "Iec104Slave_Runtime", null, ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Slave104.iCore2_GoodQual")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("Storyiec104_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_iec104_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void Slave104_ICore2_GoodQual()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicПроверка_Quality",
                    "Storyiec104_Slave",
                    "parentSuite2_ExchUtils_iec104_Slave",
                    "suiteПроверка_Quality",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Slave104.iCore2_GoodQual", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 8
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 9
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 10
 testRunner.Given("Связь с устройством \'ICORE2\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 11
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 12
 testRunner.Given("Связь с устройством \'Iec104_Sp\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 13
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iCore2_BOOL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 14
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iCore2_BYTE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 15
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iCore2_WORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 16
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iCore2_DWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 17
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iCore2_LWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 18
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iCore2_SINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 19
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iCore2_INT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 20
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iCore2_DINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 21
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iCore2_LINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 22
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iCore2_USINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 23
 testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iCore2_UINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 24
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iCore2_UDINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 25
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iCore2_ULINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 26
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iCore2_REAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 27
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iCore2_LREAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 28
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iCore2_TIME_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 29
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iCore2_DATE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Slave104.iCore2_ReadWrite")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("Storyiec104_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_iec104_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteРазрешенные_переменные")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void Slave104_ICore2_ReadWrite()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "Storyiec104_Slave",
                    "parentSuite2_ExchUtils_iec104_Slave",
                    "suiteЧтение_Запись",
                    "subSuiteРазрешенные_переменные",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Slave104.iCore2_ReadWrite", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 35
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 36
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 37
 testRunner.Given("Связь с устройством \'ICORE2\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 38
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 39
 testRunner.Given("Связь с устройством \'Iec104_Sp\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 40
 testRunner.Then("Проверка запись значений \'1; FALSE\' в \'iCore2_BOOL_ext_wr\'.\'Значение\' Чтение из \'" +
                        "iCore2_BOOL_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 41
 testRunner.Then("Проверка запись значений \'BYTE AnyValues\' в \'iCore2_BYTE_ext_wr\'.\'Значение\' Чтени" +
                        "е из \'iCore2_BYTE_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 42
 testRunner.Then("Проверка запись значений \'1; 0x7F00; 0x7FFF\' в \'iCore2_WORD_ext_wr\'.\'Значение\' Чт" +
                        "ение из \'iCore2_WORD_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 43
 testRunner.Then("Проверка запись значений \'FLOAT Like UINT\' в \'iCore2_DWORD_ext_wr\'.\'Значение\' Чте" +
                        "ние из \'iCore2_DWORD_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 45
 testRunner.Then("Проверка запись значений \'SINT AnyValues\' в \'iCore2_SINT_ext_wr\'.\'Значение\' Чтени" +
                        "е из \'iCore2_SINT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 46
 testRunner.Then("Проверка запись значений \'INT AnyValues\' в \'iCore2_INT_ext_wr\'.\'Значение\' Чтение " +
                        "из \'iCore2_INT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 47
 testRunner.Then("Проверка запись значений \'FLOAT Like INT\' в \'iCore2_DINT_ext_wr\'.\'Значение\' Чтени" +
                        "е из \'iCore2_DINT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 49
 testRunner.Then("Проверка запись значений \'USINT AnyValues\' в \'iCore2_USINT_ext_wr\'.\'Значение\' Чте" +
                        "ние из \'iCore2_USINT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 50
 testRunner.Then("Проверка запись значений \'UINT AnyValues\' в \'iCore2_UINT_ext_wr\'.\'Значение\' Чтени" +
                        "е из \'iCore2_UINT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 51
 testRunner.Then("Проверка запись значений \'FLOAT Like UINT\' в \'iCore2_UDINT_ext_wr\'.\'Значение\' Чте" +
                        "ние из \'iCore2_UDINT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 53
 testRunner.Then("Проверка запись значений \'REAL AnyValues\' в \'iCore2_REAL_ext_wr\'.\'Значение\' Чтени" +
                        "е из \'iCore2_REAL_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 54
 testRunner.Then("Проверка запись значений \'REAL AnyValues\' в \'iCore2_LREAL_ext_wr\'.\'Значение\' Чтен" +
                        "ие из \'iCore2_LREAL_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 55
 testRunner.Then("Проверка запись значений \'FLOAT Like UINT\' в \'iCore2_TIME_ext_wr\'.\'Значение\' Чтен" +
                        "ие из \'iCore2_TIME_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 56
 testRunner.Then("Проверка запись значений \'FLOAT Like UINT\' в \'iCore2_DATE_ext_wr\'.\'Значение\' Чтен" +
                        "ие из \'iCore2_DATE_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Slave104.cpu715_Red_GoodQual")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("Storyiec104_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_iec104_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void Slave104_Cpu715_Red_GoodQual()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicПроверка_Quality",
                    "Storyiec104_Slave",
                    "parentSuite2_ExchUtils_iec104_Slave",
                    "suiteПроверка_Quality",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Slave104.cpu715_Red_GoodQual", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 62
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 63
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 64
 testRunner.Given("Связь с устройством \'cpu715_Red\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 65
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 66
 testRunner.Given("Связь с устройством \'Iec104_Sp\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 67
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Red_BOOL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 68
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Red_BYTE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 69
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Red_WORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 70
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Red_DWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 71
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Red_LWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 72
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Red_SINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 73
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Red_INT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 74
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Red_DINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 75
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Red_LINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 76
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Red_USINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 77
 testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Red_UINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 78
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Red_UDINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 79
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Red_ULINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 80
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Red_REAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 81
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Red_LREAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 82
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Red_TIME_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 83
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Red_DATE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Slave104.cpu715_Red_ReadWrite")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("Storyiec104_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_iec104_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteРазрешенные_переменные")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void Slave104_Cpu715_Red_ReadWrite()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "Storyiec104_Slave",
                    "parentSuite2_ExchUtils_iec104_Slave",
                    "suiteЧтение_Запись",
                    "subSuiteРазрешенные_переменные",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Slave104.cpu715_Red_ReadWrite", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 89
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 90
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 91
 testRunner.Given("Связь с устройством \'cpu715_Red\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 92
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 93
 testRunner.Given("Связь с устройством \'Iec104_Sp\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 94
 testRunner.Then("Проверка запись значений \'1; FALSE\' в \'cpu715_Red_BOOL_ext_wr\'.\'Значение\' Чтение " +
                        "из \'cpu715_Red_BOOL_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 95
 testRunner.Then("Проверка запись значений \'BYTE AnyValues\' в \'cpu715_Red_BYTE_ext_wr\'.\'Значение\' Ч" +
                        "тение из \'cpu715_Red_BYTE_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 96
 testRunner.Then("Проверка запись значений \'1; 0x7F00; 0x7FFF\' в \'cpu715_Red_WORD_ext_wr\'.\'Значение" +
                        "\' Чтение из \'cpu715_Red_WORD_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 97
 testRunner.Then("Проверка запись значений \'FLOAT Like UINT\' в \'cpu715_Red_DWORD_ext_wr\'.\'Значение\'" +
                        " Чтение из \'cpu715_Red_DWORD_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 99
 testRunner.Then("Проверка запись значений \'SINT AnyValues\' в \'cpu715_Red_SINT_ext_wr\'.\'Значение\' Ч" +
                        "тение из \'cpu715_Red_SINT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 100
 testRunner.Then("Проверка запись значений \'INT AnyValues\' в \'cpu715_Red_INT_ext_wr\'.\'Значение\' Чте" +
                        "ние из \'cpu715_Red_INT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 101
 testRunner.Then("Проверка запись значений \'FLOAT Like INT\' в \'cpu715_Red_DINT_ext_wr\'.\'Значение\' Ч" +
                        "тение из \'cpu715_Red_DINT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 103
 testRunner.Then("Проверка запись значений \'USINT AnyValues\' в \'cpu715_Red_USINT_ext_wr\'.\'Значение\'" +
                        " Чтение из \'cpu715_Red_USINT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 104
 testRunner.Then("Проверка запись значений \'UINT AnyValues\' в \'cpu715_Red_UINT_ext_wr\'.\'Значение\' Ч" +
                        "тение из \'cpu715_Red_UINT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 105
 testRunner.Then("Проверка запись значений \'FLOAT Like UINT\' в \'cpu715_Red_UDINT_ext_wr\'.\'Значение\'" +
                        " Чтение из \'cpu715_Red_UDINT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 107
 testRunner.Then("Проверка запись значений \'REAL AnyValues\' в \'cpu715_Red_REAL_ext_wr\'.\'Значение\' Ч" +
                        "тение из \'cpu715_Red_REAL_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 108
 testRunner.Then("Проверка запись значений \'REAL AnyValues\' в \'cpu715_Red_LREAL_ext_wr\'.\'Значение\' " +
                        "Чтение из \'cpu715_Red_LREAL_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 109
 testRunner.Then("Проверка запись значений \'FLOAT Like UINT\' в \'cpu715_Red_TIME_ext_wr\'.\'Значение\' " +
                        "Чтение из \'cpu715_Red_TIME_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 110
 testRunner.Then("Проверка запись значений \'FLOAT Like UINT\' в \'cpu715_Red_DATE_ext_wr\'.\'Значение\' " +
                        "Чтение из \'cpu715_Red_DATE_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Slave104.cpu715_Clust_GoodQual")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("Storyiec104_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_iec104_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void Slave104_Cpu715_Clust_GoodQual()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicПроверка_Quality",
                    "Storyiec104_Slave",
                    "parentSuite2_ExchUtils_iec104_Slave",
                    "suiteПроверка_Quality",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Slave104.cpu715_Clust_GoodQual", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 116
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 117
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 118
 testRunner.Given("Связь с устройством \'cpu715_Cluster\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 119
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 120
 testRunner.Given("Связь с устройством \'Iec104_Sp\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 121
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Cluster_BOOL_const\'.\'Значение" +
                        "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 122
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Cluster_BYTE_const\'.\'Значение" +
                        "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 123
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Cluster_WORD_const\'.\'Значение" +
                        "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 124
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Cluster_DWORD_const\'.\'Значени" +
                        "е\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 125
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Cluster_LWORD_const\'.\'Значени" +
                        "е\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 126
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Cluster_SINT_const\'.\'Значение" +
                        "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 127
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Cluster_INT_const\'.\'Значение\'" +
                        "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 128
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Cluster_DINT_const\'.\'Значение" +
                        "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 129
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Cluster_LINT_const\'.\'Значение" +
                        "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 130
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Cluster_USINT_const\'.\'Значени" +
                        "е\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 131
 testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Cluster_UINT_const\'.\'Значение" +
                        "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 132
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Cluster_UDINT_const\'.\'Значени" +
                        "е\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 133
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Cluster_ULINT_const\'.\'Значени" +
                        "е\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 134
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Cluster_REAL_const\'.\'Значение" +
                        "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 135
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Cluster_LREAL_const\'.\'Значени" +
                        "е\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 136
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Cluster_TIME_const\'.\'Значение" +
                        "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 137
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Cluster_DATE_const\'.\'Значение" +
                        "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Slave104.cpu715_Clust_ReadWrite")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("Storyiec104_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_iec104_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteРазрешенные_переменные")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void Slave104_Cpu715_Clust_ReadWrite()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "Storyiec104_Slave",
                    "parentSuite2_ExchUtils_iec104_Slave",
                    "suiteЧтение_Запись",
                    "subSuiteРазрешенные_переменные",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Slave104.cpu715_Clust_ReadWrite", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 143
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 144
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 145
 testRunner.Given("Связь с устройством \'cpu715_Cluster\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 146
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 147
 testRunner.Given("Связь с устройством \'Iec104_Sp\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 148
 testRunner.Then("Проверка запись значений \'1; FALSE\' в \'cpu715_Cluster_BOOL_ext_wr\'.\'Значение\' Чте" +
                        "ние из \'cpu715_Cluster_BOOL_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 149
 testRunner.Then("Проверка запись значений \'BYTE AnyValues\' в \'cpu715_Cluster_BYTE_ext_wr\'.\'Значени" +
                        "е\' Чтение из \'cpu715_Cluster_BYTE_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 150
 testRunner.Then("Проверка запись значений \'1; 0x7F00; 0x7FFF\' в \'cpu715_Cluster_WORD_ext_wr\'.\'Знач" +
                        "ение\' Чтение из \'cpu715_Cluster_WORD_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 151
 testRunner.Then("Проверка запись значений \'FLOAT Like UINT\' в \'cpu715_Cluster_DWORD_ext_wr\'.\'Значе" +
                        "ние\' Чтение из \'cpu715_Cluster_DWORD_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 153
 testRunner.Then("Проверка запись значений \'SINT AnyValues\' в \'cpu715_Cluster_SINT_ext_wr\'.\'Значени" +
                        "е\' Чтение из \'cpu715_Cluster_SINT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 154
 testRunner.Then("Проверка запись значений \'INT AnyValues\' в \'cpu715_Cluster_INT_ext_wr\'.\'Значение\'" +
                        " Чтение из \'cpu715_Cluster_INT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 155
 testRunner.Then("Проверка запись значений \'FLOAT Like INT\' в \'cpu715_Cluster_DINT_ext_wr\'.\'Значени" +
                        "е\' Чтение из \'cpu715_Cluster_DINT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 157
 testRunner.Then("Проверка запись значений \'USINT AnyValues\' в \'cpu715_Cluster_USINT_ext_wr\'.\'Значе" +
                        "ние\' Чтение из \'cpu715_Cluster_USINT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 158
 testRunner.Then("Проверка запись значений \'UINT AnyValues\' в \'cpu715_Cluster_UINT_ext_wr\'.\'Значени" +
                        "е\' Чтение из \'cpu715_Cluster_UINT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 159
 testRunner.Then("Проверка запись значений \'FLOAT Like UINT\' в \'cpu715_Cluster_UDINT_ext_wr\'.\'Значе" +
                        "ние\' Чтение из \'cpu715_Cluster_UDINT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 161
 testRunner.Then("Проверка запись значений \'REAL AnyValues\' в \'cpu715_Cluster_REAL_ext_wr\'.\'Значени" +
                        "е\' Чтение из \'cpu715_Cluster_REAL_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 162
 testRunner.Then("Проверка запись значений \'REAL AnyValues\' в \'cpu715_Cluster_LREAL_ext_wr\'.\'Значен" +
                        "ие\' Чтение из \'cpu715_Cluster_LREAL_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 163
 testRunner.Then("Проверка запись значений \'FLOAT Like UINT\' в \'cpu715_Cluster_TIME_ext_wr\'.\'Значен" +
                        "ие\' Чтение из \'cpu715_Cluster_TIME_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 164
 testRunner.Then("Проверка запись значений \'FLOAT Like UINT\' в \'cpu715_Cluster_DATE_ext_wr\'.\'Значен" +
                        "ие\' Чтение из \'cpu715_Cluster_DATE_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Slave104.cpu850_Red_GoodQual")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("Storyiec104_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_iec104_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void Slave104_Cpu850_Red_GoodQual()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicПроверка_Quality",
                    "Storyiec104_Slave",
                    "parentSuite2_ExchUtils_iec104_Slave",
                    "suiteПроверка_Quality",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Slave104.cpu850_Red_GoodQual", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 170
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 171
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 172
 testRunner.Given("Связь с устройством \'CPU850_RED\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 173
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 174
 testRunner.Given("Связь с устройством \'Iec104_Sp\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 175
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu850_Red_BOOL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 176
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu850_Red_BYTE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 177
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu850_Red_WORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 178
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu850_Red_DWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 179
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu850_Red_LWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 180
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu850_Red_SINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 181
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu850_Red_INT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 182
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu850_Red_DINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 183
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu850_Red_LINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 184
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu850_Red_USINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 185
 testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu850_Red_UINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 186
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu850_Red_UDINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 187
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu850_Red_ULINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 188
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu850_Red_REAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 189
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu850_Red_LREAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 190
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu850_Red_TIME_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 191
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu850_Red_DATE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Slave104.cpu850_Red_ReadWrite")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("Storyiec104_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_iec104_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteРазрешенные_переменные")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void Slave104_Cpu850_Red_ReadWrite()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "Storyiec104_Slave",
                    "parentSuite2_ExchUtils_iec104_Slave",
                    "suiteЧтение_Запись",
                    "subSuiteРазрешенные_переменные",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Slave104.cpu850_Red_ReadWrite", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 197
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 198
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 199
 testRunner.Given("Связь с устройством \'CPU850_RED\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 200
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 201
 testRunner.Given("Связь с устройством \'Iec104_Sp\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 202
 testRunner.Then("Проверка запись значений \'1; FALSE\' в \'cpu850_Red_BOOL_ext_wr\'.\'Значение\' Чтение " +
                        "из \'cpu850_Red_BOOL_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 203
 testRunner.Then("Проверка запись значений \'BYTE AnyValues\' в \'cpu850_Red_BYTE_ext_wr\'.\'Значение\' Ч" +
                        "тение из \'cpu850_Red_BYTE_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 204
 testRunner.Then("Проверка запись значений \'1; 0x7F00; 0x7FFF\' в \'cpu850_Red_WORD_ext_wr\'.\'Значение" +
                        "\' Чтение из \'cpu850_Red_WORD_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 205
 testRunner.Then("Проверка запись значений \'FLOAT Like UINT\' в \'cpu850_Red_DWORD_ext_wr\'.\'Значение\'" +
                        " Чтение из \'cpu850_Red_DWORD_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 207
 testRunner.Then("Проверка запись значений \'SINT AnyValues\' в \'cpu850_Red_SINT_ext_wr\'.\'Значение\' Ч" +
                        "тение из \'cpu850_Red_SINT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 208
 testRunner.Then("Проверка запись значений \'INT AnyValues\' в \'cpu850_Red_INT_ext_wr\'.\'Значение\' Чте" +
                        "ние из \'cpu850_Red_INT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 209
 testRunner.Then("Проверка запись значений \'FLOAT Like INT\' в \'cpu850_Red_DINT_ext_wr\'.\'Значение\' Ч" +
                        "тение из \'cpu850_Red_DINT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 211
 testRunner.Then("Проверка запись значений \'USINT AnyValues\' в \'cpu850_Red_USINT_ext_wr\'.\'Значение\'" +
                        " Чтение из \'cpu850_Red_USINT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 212
 testRunner.Then("Проверка запись значений \'UINT AnyValues\' в \'cpu850_Red_UINT_ext_wr\'.\'Значение\' Ч" +
                        "тение из \'cpu850_Red_UINT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 213
 testRunner.Then("Проверка запись значений \'FLOAT Like UINT\' в \'cpu850_Red_UDINT_ext_wr\'.\'Значение\'" +
                        " Чтение из \'cpu850_Red_UDINT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 215
 testRunner.Then("Проверка запись значений \'REAL AnyValues\' в \'cpu850_Red_REAL_ext_wr\'.\'Значение\' Ч" +
                        "тение из \'cpu850_Red_REAL_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 216
 testRunner.Then("Проверка запись значений \'REAL AnyValues\' в \'cpu850_Red_LREAL_ext_wr\'.\'Значение\' " +
                        "Чтение из \'cpu850_Red_LREAL_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 217
 testRunner.Then("Проверка запись значений \'FLOAT Like UINT\' в \'cpu850_Red_TIME_ext_wr\'.\'Значение\' " +
                        "Чтение из \'cpu850_Red_TIME_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 218
 testRunner.Then("Проверка запись значений \'FLOAT Like UINT\' в \'cpu850_Red_DATE_ext_wr\'.\'Значение\' " +
                        "Чтение из \'cpu850_Red_DATE_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Slave104.GwEx_GoodQual")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("Storyiec104_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_iec104_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void Slave104_GwEx_GoodQual()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicПроверка_Quality",
                    "Storyiec104_Slave",
                    "parentSuite2_ExchUtils_iec104_Slave",
                    "suiteПроверка_Quality",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Slave104.GwEx_GoodQual", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 225
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 226
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 227
 testRunner.Given("Связь с устройством \'GwExch_v1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 228
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 229
 testRunner.Given("Связь с устройством \'Iec104_Sp\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 230
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE_BOOL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 231
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE_BYTE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 232
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE_WORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 233
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE_DWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 234
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE_LWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 235
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE_SINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 236
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE_INT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 237
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE_DINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 238
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE_LINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 239
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE_USINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 240
 testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE_UINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 241
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE_UDINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 242
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE_ULINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 243
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE_REAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 244
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE_LREAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 245
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE_TIME_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 246
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE_DATE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Slave104.GwEx_ReadWrite")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("Storyiec104_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_iec104_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteРазрешенные_переменные")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void Slave104_GwEx_ReadWrite()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "Storyiec104_Slave",
                    "parentSuite2_ExchUtils_iec104_Slave",
                    "suiteЧтение_Запись",
                    "subSuiteРазрешенные_переменные",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Slave104.GwEx_ReadWrite", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 252
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 253
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 254
 testRunner.Given("Связь с устройством \'GwExch_v1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 255
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 256
 testRunner.Given("Связь с устройством \'Iec104_Sp\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 257
 testRunner.Then("Проверка запись значений \'1; FALSE\' в \'GwE_BOOL_ext_wr\'.\'Значение\' Чтение из \'GwE" +
                        "_BOOL_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 258
 testRunner.Then("Проверка запись значений \'BYTE AnyValues\' в \'GwE_BYTE_ext_wr\'.\'Значение\' Чтение и" +
                        "з \'GwE_BYTE_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 259
 testRunner.Then("Проверка запись значений \'1; 0x7F00; 0x7FFF\' в \'GwE_WORD_ext_wr\'.\'Значение\' Чтени" +
                        "е из \'GwE_WORD_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 260
 testRunner.Then("Проверка запись значений \'FLOAT Like UINT\' в \'GwE_DWORD_ext_wr\'.\'Значение\' Чтение" +
                        " из \'GwE_DWORD_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 262
 testRunner.Then("Проверка запись значений \'SINT AnyValues\' в \'GwE_SINT_ext_wr\'.\'Значение\' Чтение и" +
                        "з \'GwE_SINT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 263
 testRunner.Then("Проверка запись значений \'INT AnyValues\' в \'GwE_INT_ext_wr\'.\'Значение\' Чтение из " +
                        "\'GwE_INT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 264
 testRunner.Then("Проверка запись значений \'FLOAT Like INT\' в \'GwE_DINT_ext_wr\'.\'Значение\' Чтение и" +
                        "з \'GwE_DINT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 266
 testRunner.Then("Проверка запись значений \'USINT AnyValues\' в \'GwE_USINT_ext_wr\'.\'Значение\' Чтение" +
                        " из \'GwE_USINT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 267
 testRunner.Then("Проверка запись значений \'UINT AnyValues\' в \'GwE_UINT_ext_wr\'.\'Значение\' Чтение и" +
                        "з \'GwE_UINT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 268
 testRunner.Then("Проверка запись значений \'FLOAT Like UINT\' в \'GwE_UDINT_ext_wr\'.\'Значение\' Чтение" +
                        " из \'GwE_UDINT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 270
 testRunner.Then("Проверка запись значений \'REAL AnyValues\' в \'GwE_REAL_ext_wr\'.\'Значение\' Чтение и" +
                        "з \'GwE_REAL_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 271
 testRunner.Then("Проверка запись значений \'REAL AnyValues\' в \'GwE_LREAL_ext_wr\'.\'Значение\' Чтение " +
                        "из \'GwE_LREAL_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 272
 testRunner.Then("Проверка запись значений \'FLOAT Like UINT\' в \'GwE_TIME_ext_wr\'.\'Значение\' Чтение " +
                        "из \'GwE_TIME_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 273
 testRunner.Then("Проверка запись значений \'FLOAT Like UINT\' в \'GwE_DATE_ext_wr\'.\'Значение\' Чтение " +
                        "из \'GwE_DATE_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Slave104.GwEx2_GoodQual")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("Storyiec104_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_iec104_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void Slave104_GwEx2_GoodQual()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicПроверка_Quality",
                    "Storyiec104_Slave",
                    "parentSuite2_ExchUtils_iec104_Slave",
                    "suiteПроверка_Quality",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Slave104.GwEx2_GoodQual", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 279
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 280
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 281
 testRunner.Given("Связь с устройством \'GwExch_2_v1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 282
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 283
 testRunner.Given("Связь с устройством \'Iec104_Sp\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 284
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_BOOL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 285
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_BYTE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 286
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_WORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 287
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_DWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 288
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_LWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 289
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_SINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 290
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_INT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 291
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_DINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 292
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_LINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 293
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_USINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 294
 testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_UINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 295
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_UDINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 296
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_ULINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 297
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_REAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 298
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_LREAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 299
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_TIME_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 300
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_DATE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Slave104.GwEx2_ReadWrite")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("Redmine_7528")]
        [NUnit.Framework.CategoryAttribute("package_Known_Bugs_GwEx2_TransmitArcVals")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("Storyiec104_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_iec104_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteРазрешенные_переменные")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void Slave104_GwEx2_ReadWrite()
        {
            string[] tagsOfScenario = new string[] {
                    "ignore",
                    "Redmine_7528",
                    "package_Known_Bugs_GwEx2_TransmitArcVals",
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "Storyiec104_Slave",
                    "parentSuite2_ExchUtils_iec104_Slave",
                    "suiteЧтение_Запись",
                    "subSuiteРазрешенные_переменные",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Slave104.GwEx2_ReadWrite", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 308
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 309
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 310
 testRunner.Given("Связь с устройством \'GwExch_2_v1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 311
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 312
 testRunner.Given("Связь с устройством \'Iec104_Sp\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 313
 testRunner.Then("Проверка запись значений \'1; FALSE\' в \'GwE2_BOOL_ext_wr\'.\'Значение\' Чтение из \'Gw" +
                        "E2_BOOL_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 314
 testRunner.Then("Проверка запись значений \'BYTE AnyValues\' в \'GwE2_BYTE_ext_wr\'.\'Значение\' Чтение " +
                        "из \'GwE2_BYTE_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 315
 testRunner.Then("Проверка запись значений \'1; 0x7F00; 0x7FFF\' в \'GwE2_WORD_ext_wr\'.\'Значение\' Чтен" +
                        "ие из \'GwE2_WORD_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 316
 testRunner.Then("Проверка запись значений \'FLOAT Like UINT\' в \'GwE2_DWORD_ext_wr\'.\'Значение\' Чтени" +
                        "е из \'GwE2_DWORD_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 318
 testRunner.Then("Проверка запись значений \'SINT AnyValues\' в \'GwE2_SINT_ext_wr\'.\'Значение\' Чтение " +
                        "из \'GwE2_SINT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 319
 testRunner.Then("Проверка запись значений \'INT AnyValues\' в \'GwE2_INT_ext_wr\'.\'Значение\' Чтение из" +
                        " \'GwE2_INT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 320
 testRunner.Then("Проверка запись значений \'FLOAT Like INT\' в \'GwE2_DINT_ext_wr\'.\'Значение\' Чтение " +
                        "из \'GwE2_DINT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 322
 testRunner.Then("Проверка запись значений \'USINT AnyValues\' в \'GwE2_USINT_ext_wr\'.\'Значение\' Чтени" +
                        "е из \'GwE2_USINT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 323
 testRunner.Then("Проверка запись значений \'UINT AnyValues\' в \'GwE2_UINT_ext_wr\'.\'Значение\' Чтение " +
                        "из \'GwE2_UINT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 324
 testRunner.Then("Проверка запись значений \'FLOAT Like UINT\' в \'GwE2_UDINT_ext_wr\'.\'Значение\' Чтени" +
                        "е из \'GwE2_UDINT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 326
 testRunner.Then("Проверка запись значений \'REAL AnyValues\' в \'GwE2_REAL_ext_wr\'.\'Значение\' Чтение " +
                        "из \'GwE2_REAL_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 327
 testRunner.Then("Проверка запись значений \'REAL AnyValues\' в \'GwE2_LREAL_ext_wr\'.\'Значение\' Чтение" +
                        " из \'GwE2_LREAL_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 328
 testRunner.Then("Проверка запись значений \'FLOAT Like UINT\' в \'GwE2_TIME_ext_wr\'.\'Значение\' Чтение" +
                        " из \'GwE2_TIME_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 329
 testRunner.Then("Проверка запись значений \'FLOAT Like UINT\' в \'GwE2_DATE_ext_wr\'.\'Значение\' Чтение" +
                        " из \'GwE2_DATE_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Slave104.OpcDa_GoodQual")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("Storyiec104_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_iec104_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void Slave104_OpcDa_GoodQual()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicПроверка_Quality",
                    "Storyiec104_Slave",
                    "parentSuite2_ExchUtils_iec104_Slave",
                    "suiteПроверка_Quality",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Slave104.OpcDa_GoodQual", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 335
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 336
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 337
 testRunner.Given("Связь с устройством \'OpcDa_Subs\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 338
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 339
 testRunner.Given("Связь с устройством \'Iec104_Sp\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 340
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcDa_BOOL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 341
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcDa_BYTE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 342
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcDa_WORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 343
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcDa_DWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 344
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcDa_LWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 345
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcDa_SINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 346
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcDa_INT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 347
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcDa_DINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 348
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcDa_LINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 349
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcDa_USINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 350
 testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcDa_UINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 351
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcDa_UDINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 352
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcDa_ULINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 353
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcDa_REAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 354
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcDa_LREAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 355
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcDa_TIME_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 356
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcDa_DATE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Slave104.OpcDa_ReadWrite")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("Storyiec104_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_iec104_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteРазрешенные_переменные")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void Slave104_OpcDa_ReadWrite()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "Storyiec104_Slave",
                    "parentSuite2_ExchUtils_iec104_Slave",
                    "suiteЧтение_Запись",
                    "subSuiteРазрешенные_переменные",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Slave104.OpcDa_ReadWrite", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 362
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 363
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 364
 testRunner.Given("Связь с устройством \'OpcDa_Subs\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 365
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 366
 testRunner.Given("Связь с устройством \'Iec104_Sp\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 367
 testRunner.Then("Проверка запись значений \'1; FALSE\' в \'OpcDa_BOOL_ext_wr\'.\'Значение\' Чтение из \'O" +
                        "pcDa_BOOL_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 368
 testRunner.Then("Проверка запись значений \'BYTE AnyValues\' в \'OpcDa_BYTE_ext_wr\'.\'Значение\' Чтение" +
                        " из \'OpcDa_BYTE_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 369
 testRunner.Then("Проверка запись значений \'1; 0x7F00; 0x7FFF\' в \'OpcDa_WORD_ext_wr\'.\'Значение\' Чте" +
                        "ние из \'OpcDa_WORD_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 370
 testRunner.Then("Проверка запись значений \'FLOAT Like UINT\' в \'OpcDa_DWORD_ext_wr\'.\'Значение\' Чтен" +
                        "ие из \'OpcDa_DWORD_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 372
 testRunner.Then("Проверка запись значений \'SINT AnyValues\' в \'OpcDa_SINT_ext_wr\'.\'Значение\' Чтение" +
                        " из \'OpcDa_SINT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 373
 testRunner.Then("Проверка запись значений \'INT AnyValues\' в \'OpcDa_INT_ext_wr\'.\'Значение\' Чтение и" +
                        "з \'OpcDa_INT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 374
 testRunner.Then("Проверка запись значений \'FLOAT Like INT\' в \'OpcDa_DINT_ext_wr\'.\'Значение\' Чтение" +
                        " из \'OpcDa_DINT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 376
 testRunner.Then("Проверка запись значений \'USINT AnyValues\' в \'OpcDa_USINT_ext_wr\'.\'Значение\' Чтен" +
                        "ие из \'OpcDa_USINT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 377
 testRunner.Then("Проверка запись значений \'UINT AnyValues\' в \'OpcDa_UINT_ext_wr\'.\'Значение\' Чтение" +
                        " из \'OpcDa_UINT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 378
 testRunner.Then("Проверка запись значений \'FLOAT Like UINT\' в \'OpcDa_UDINT_ext_wr\'.\'Значение\' Чтен" +
                        "ие из \'OpcDa_UDINT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 380
 testRunner.Then("Проверка запись значений \'REAL AnyValues\' в \'OpcDa_REAL_ext_wr\'.\'Значение\' Чтение" +
                        " из \'OpcDa_REAL_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 381
 testRunner.Then("Проверка запись значений \'REAL AnyValues\' в \'OpcDa_LREAL_ext_wr\'.\'Значение\' Чтени" +
                        "е из \'OpcDa_LREAL_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 382
 testRunner.Then("Проверка запись значений \'FLOAT Like UINT\' в \'OpcDa_TIME_ext_wr\'.\'Значение\' Чтени" +
                        "е из \'OpcDa_TIME_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 383
 testRunner.Then("Проверка запись значений \'FLOAT Like UINT\' в \'OpcDa_DATE_ext_wr\'.\'Значение\' Чтени" +
                        "е из \'OpcDa_DATE_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Slave104.OpcProxy_GoodQual")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("Storyiec104_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_iec104_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void Slave104_OpcProxy_GoodQual()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicПроверка_Quality",
                    "Storyiec104_Slave",
                    "parentSuite2_ExchUtils_iec104_Slave",
                    "suiteПроверка_Quality",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Slave104.OpcProxy_GoodQual", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 389
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 390
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 391
 testRunner.Given("Связь с устройством \'OpcDaProxy_Subs\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 392
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 393
 testRunner.Given("Связь с устройством \'Iec104_Sp\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 394
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcProxy_BOOL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 395
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcProxy_BYTE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 396
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcProxy_WORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 397
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcProxy_DWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 398
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcProxy_LWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 399
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcProxy_SINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 400
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcProxy_INT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 401
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcProxy_DINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 402
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcProxy_LINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 403
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcProxy_USINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 404
 testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcProxy_UINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 405
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcProxy_UDINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 406
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcProxy_ULINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 407
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcProxy_REAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 408
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcProxy_LREAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 409
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcProxy_TIME_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 410
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcProxy_DATE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Slave104.OpcProxy_ReadWrite")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("Storyiec104_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_iec104_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteРазрешенные_переменные")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void Slave104_OpcProxy_ReadWrite()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "Storyiec104_Slave",
                    "parentSuite2_ExchUtils_iec104_Slave",
                    "suiteЧтение_Запись",
                    "subSuiteРазрешенные_переменные",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Slave104.OpcProxy_ReadWrite", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 416
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 417
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 418
 testRunner.Given("Связь с устройством \'OpcDaProxy_Subs\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 419
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 420
 testRunner.Given("Связь с устройством \'Iec104_Sp\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 421
 testRunner.Then("Проверка запись значений \'1; FALSE\' в \'OpcProxy_BOOL_ext_wr\'.\'Значение\' Чтение из" +
                        " \'OpcProxy_BOOL_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 422
 testRunner.Then("Проверка запись значений \'BYTE AnyValues\' в \'OpcProxy_BYTE_ext_wr\'.\'Значение\' Чте" +
                        "ние из \'OpcProxy_BYTE_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 423
 testRunner.Then("Проверка запись значений \'1; 0x7F00; 0x7FFF\' в \'OpcProxy_WORD_ext_wr\'.\'Значение\' " +
                        "Чтение из \'OpcProxy_WORD_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 424
 testRunner.Then("Проверка запись значений \'FLOAT Like UINT\' в \'OpcProxy_DWORD_ext_wr\'.\'Значение\' Ч" +
                        "тение из \'OpcProxy_DWORD_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 426
 testRunner.Then("Проверка запись значений \'SINT AnyValues\' в \'OpcProxy_SINT_ext_wr\'.\'Значение\' Чте" +
                        "ние из \'OpcProxy_SINT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 427
 testRunner.Then("Проверка запись значений \'INT AnyValues\' в \'OpcProxy_INT_ext_wr\'.\'Значение\' Чтени" +
                        "е из \'OpcProxy_INT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 428
 testRunner.Then("Проверка запись значений \'FLOAT Like INT\' в \'OpcProxy_DINT_ext_wr\'.\'Значение\' Чте" +
                        "ние из \'OpcProxy_DINT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 430
 testRunner.Then("Проверка запись значений \'USINT AnyValues\' в \'OpcProxy_USINT_ext_wr\'.\'Значение\' Ч" +
                        "тение из \'OpcProxy_USINT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 431
 testRunner.Then("Проверка запись значений \'UINT AnyValues\' в \'OpcProxy_UINT_ext_wr\'.\'Значение\' Чте" +
                        "ние из \'OpcProxy_UINT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 432
 testRunner.Then("Проверка запись значений \'FLOAT Like UINT\' в \'OpcProxy_UDINT_ext_wr\'.\'Значение\' Ч" +
                        "тение из \'OpcProxy_UDINT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 434
 testRunner.Then("Проверка запись значений \'REAL AnyValues\' в \'OpcProxy_REAL_ext_wr\'.\'Значение\' Чте" +
                        "ние из \'OpcProxy_REAL_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 435
 testRunner.Then("Проверка запись значений \'REAL AnyValues\' в \'OpcProxy_LREAL_ext_wr\'.\'Значение\' Чт" +
                        "ение из \'OpcProxy_LREAL_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 436
 testRunner.Then("Проверка запись значений \'FLOAT Like UINT\' в \'OpcProxy_TIME_ext_wr\'.\'Значение\' Чт" +
                        "ение из \'OpcProxy_TIME_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 437
 testRunner.Then("Проверка запись значений \'FLOAT Like UINT\' в \'OpcProxy_DATE_ext_wr\'.\'Значение\' Чт" +
                        "ение из \'OpcProxy_DATE_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Slave104.OpcUA_Params_GoodQual")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("Storyiec104_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_iec104_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void Slave104_OpcUA_Params_GoodQual()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicПроверка_Quality",
                    "Storyiec104_Slave",
                    "parentSuite2_ExchUtils_iec104_Slave",
                    "suiteПроверка_Quality",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Slave104.OpcUA_Params_GoodQual", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 443
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 444
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 445
 testRunner.Given("Связь с устройством \'OpcUa_ASt5000_Lin\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 446
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 447
 testRunner.Given("Связь с устройством \'Iec104_Sp\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 448
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcUa_PARAM_BOOL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 449
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcUa_PARAM_BYTE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 450
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcUa_PARAM_WORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 451
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcUa_PARAM_DWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 452
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcUa_PARAM_LWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 453
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcUa_PARAM_SINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 454
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcUa_PARAM_INT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 455
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcUa_PARAM_DINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 456
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcUa_PARAM_LINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 457
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcUa_PARAM_USINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 458
 testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcUa_PARAM_UINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 459
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcUa_PARAM_UDINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 460
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcUa_PARAM_ULINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 461
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcUa_PARAM_REAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 462
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcUa_PARAM_LREAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 463
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcUa_PARAM_TIME_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Slave104.OpcUA_Params_ReadWrite")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("Storyiec104_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_iec104_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteРазрешенные_переменные")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void Slave104_OpcUA_Params_ReadWrite()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "Storyiec104_Slave",
                    "parentSuite2_ExchUtils_iec104_Slave",
                    "suiteЧтение_Запись",
                    "subSuiteРазрешенные_переменные",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Slave104.OpcUA_Params_ReadWrite", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 470
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 471
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 472
 testRunner.Given("Связь с устройством \'OpcUa_ASt5000_Lin\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 473
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 474
 testRunner.Given("Связь с устройством \'Iec104_Sp\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 475
 testRunner.Then("Проверка запись значений \'1; FALSE\' в \'OpcUa_PARAM_BOOL_ext_wr\'.\'Значение\' Чтение" +
                        " из \'OpcUa_PARAM_BOOL_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 476
 testRunner.Then("Проверка запись значений \'BYTE AnyValues\' в \'OpcUa_PARAM_BYTE_ext_wr\'.\'Значение\' " +
                        "Чтение из \'OpcUa_PARAM_BYTE_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 477
 testRunner.Then("Проверка запись значений \'1; 0x7F00; 0x7FFF\' в \'OpcUa_PARAM_WORD_ext_wr\'.\'Значени" +
                        "е\' Чтение из \'OpcUa_PARAM_WORD_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 478
 testRunner.Then("Проверка запись значений \'FLOAT Like UINT\' в \'OpcUa_PARAM_DWORD_ext_wr\'.\'Значение" +
                        "\' Чтение из \'OpcUa_PARAM_DWORD_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 480
 testRunner.Then("Проверка запись значений \'SINT AnyValues\' в \'OpcUa_PARAM_SINT_ext_wr\'.\'Значение\' " +
                        "Чтение из \'OpcUa_PARAM_SINT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 481
 testRunner.Then("Проверка запись значений \'INT AnyValues\' в \'OpcUa_PARAM_INT_ext_wr\'.\'Значение\' Чт" +
                        "ение из \'OpcUa_PARAM_INT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 482
 testRunner.Then("Проверка запись значений \'FLOAT Like INT\' в \'OpcUa_PARAM_DINT_ext_wr\'.\'Значение\' " +
                        "Чтение из \'OpcUa_PARAM_DINT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 484
 testRunner.Then("Проверка запись значений \'USINT AnyValues\' в \'OpcUa_PARAM_USINT_ext_wr\'.\'Значение" +
                        "\' Чтение из \'OpcUa_PARAM_USINT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 485
 testRunner.Then("Проверка запись значений \'UINT AnyValues\' в \'OpcUa_PARAM_UINT_ext_wr\'.\'Значение\' " +
                        "Чтение из \'OpcUa_PARAM_UINT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 486
 testRunner.Then("Проверка запись значений \'FLOAT Like UINT\' в \'OpcUa_PARAM_UDINT_ext_wr\'.\'Значение" +
                        "\' Чтение из \'OpcUa_PARAM_UDINT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 488
 testRunner.Then("Проверка запись значений \'REAL AnyValues\' в \'OpcUa_PARAM_REAL_ext_wr\'.\'Значение\' " +
                        "Чтение из \'OpcUa_PARAM_REAL_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 489
 testRunner.Then("Проверка запись значений \'REAL AnyValues\' в \'OpcUa_PARAM_LREAL_ext_wr\'.\'Значение\'" +
                        " Чтение из \'OpcUa_PARAM_LREAL_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 490
 testRunner.Then("Проверка запись значений \'FLOAT Like UINT\' в \'OpcUa_PARAM_TIME_ext_wr\'.\'Значение\'" +
                        " Чтение из \'OpcUa_PARAM_TIME_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Slave104.Snmp_GoodQual")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("Storyiec104_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_iec104_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void Slave104_Snmp_GoodQual()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicПроверка_Quality",
                    "Storyiec104_Slave",
                    "parentSuite2_ExchUtils_iec104_Slave",
                    "suiteПроверка_Quality",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Slave104.Snmp_GoodQual", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 497
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 498
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 499
 testRunner.Given("Связь с устройством \'Snmp_v2_NetSw28\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 500
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 501
 testRunner.Given("Связь с устройством \'Iec104_Sp\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 502
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'SnmpV2_UpTime\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 503
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'SnmpV2_Speed_09\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 504
 testRunner.Then("Проверка Runtime качества \'Good\' переменной \'SnmpV2_InOctets_09\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 505
 testRunner.Then("Проверка Runtime качества \'Good\' переменной \'SnmpV2_OutOctets_09\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 506
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'SnmpV2_OpStat_09\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 507
 testRunner.Then("Проверка Runtime качества \'Good\' переменной \'SnmpV2_Speed_10\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 508
 testRunner.Then("Проверка Runtime качества \'Good\' переменной \'SnmpV2_InOctets_10\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 509
 testRunner.Then("Проверка Runtime качества \'Good\' переменной \'SnmpV2_OutOctets_10\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 510
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'SnmpV2_OpStat_10\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
