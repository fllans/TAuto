// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ExchangeUtils.Tests.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("DataMirrorRead")]
    [NUnit.Framework.IgnoreAttribute("Ignored feature")]
    public partial class DataMirrorReadFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = new string[] {
                "ignore"};
        
#line 1 "old_MirrorRead.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "DataMirrorRead", null, ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("iCore2_ReadRT")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_RunTime")]
        [NUnit.Framework.CategoryAttribute("StoryЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_ЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_RunTime")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void ICore2_ReadRT()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "EpicЧтение_RunTime",
                    "StoryЗеркалоДанных",
                    "parentSuite2_ExchUtils_ЗеркалоДанных",
                    "suiteЧтение_RunTime",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("iCore2_ReadRT", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 8
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 9
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 10
 testRunner.Given("Зеркало Шлюза \'MirrorWork\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 11
 testRunner.Given("Связь с устройством \'MirrorWork\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 12
    testRunner.Given("Связь с устройством \'ICORE2\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 13
    testRunner.Then("Чтение Runtime значения \'resVar_BOOL\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 14
    testRunner.Then("Чтение Runtime значения \'resVar_BYTE\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 15
    testRunner.Then("Чтение Runtime значения \'resVar_WORD\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 16
    testRunner.Then("Чтение Runtime значения \'resVar_DWORD\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 17
    testRunner.Then("Чтение Runtime значения \'resVar_LWORD\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 18
    testRunner.Then("Чтение Runtime значения \'resVar_SINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 19
    testRunner.Then("Чтение Runtime значения \'resVar_INT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 20
    testRunner.Then("Чтение Runtime значения \'resVar_DINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 21
    testRunner.Then("Чтение Runtime значения \'resVar_LINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 22
    testRunner.Then("Чтение Runtime значения \'resVar_USINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 23
 testRunner.Then("Чтение Runtime значения \'resVar_UINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 24
    testRunner.Then("Чтение Runtime значения \'resVar_UDINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 25
    testRunner.Then("Чтение Runtime значения \'resVar_ULINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 26
    testRunner.Then("Чтение Runtime значения \'resVar_REAL\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 27
    testRunner.Then("Чтение Runtime значения \'resVar_LREAL\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 28
    testRunner.Then("Чтение Runtime значения \'resVar_TIME\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 29
    testRunner.Then("Чтение Runtime значения \'resVar_DATE\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("iCore2_Const_Quality")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("EpicПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("StoryЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_ЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("suiteПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void ICore2_Const_Quality()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "EpicПроверка_Quality",
                    "StoryЗеркалоДанных",
                    "parentSuite2_ExchUtils_ЗеркалоДанных",
                    "suiteПроверка_Quality",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("iCore2_Const_Quality", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 35
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 36
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 37
 testRunner.Given("Зеркало Шлюза \'MirrorWork\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 38
 testRunner.Given("Связь с устройством \'MirrorWork\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 39
    testRunner.Given("Связь с устройством \'ICORE2\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 40
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_BOOL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 41
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_BYTE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 42
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_WORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 43
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_DWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 44
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_LWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 45
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_SINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 46
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_INT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 47
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_DINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 48
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_LINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 49
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_USINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 50
 testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_UINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 51
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_UDINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 52
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_ULINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 53
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_REAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 54
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_LREAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 55
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_TIME_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 56
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_DATE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("iCore2_TechEvents")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("EpicСобытия")]
        [NUnit.Framework.CategoryAttribute("StoryЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_ЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("suiteТехСобытия")]
        public void ICore2_TechEvents()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "EpicСобытия",
                    "StoryЗеркалоДанных",
                    "parentSuite2_ExchUtils_ЗеркалоДанных",
                    "suiteТехСобытия"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("iCore2_TechEvents", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 61
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 62
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 63
 testRunner.Given("Зеркало Шлюза \'MirrorWork\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 64
 testRunner.Given("Связь с устройством \'MirrorWork\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 65
    testRunner.Given("Связь с устройством \'ICORE2\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 66
 testRunner.When("Очистка группы событий Events", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 67
 testRunner.Then("Запись Runtime значений \'TRUE\' в \'CheckEvents_BitMask_Manual\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 68
    testRunner.Given("Sleep 3", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 69
 testRunner.Then("Получаю события группы \'Events\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 70
 testRunner.Then("Проверка 2 событий по параметру \'Var_Events_BitMask\'.\'_TYPE_BOOL1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 71
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_BitMask\'.\'_TYPE_BYTE1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 72
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_BitMask\'.\'_TYPE_WORD1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 73
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_BitMask\'.\'_TYPE_DWORD1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 74
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_BitMask\'.\'_TYPE_LWORD1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 75
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_BitMask\'.\'_TYPE_SINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 76
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_BitMask\'.\'_TYPE_INT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 77
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_BitMask\'.\'_TYPE_DINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 78
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_BitMask\'.\'_TYPE_LINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 79
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_BitMask\'.\'_TYPE_USINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 80
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_BitMask\'.\'_TYPE_UINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 81
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_BitMask\'.\'_TYPE_UDINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 82
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_BitMask\'.\'_TYPE_ULINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 83
 testRunner.Then("Проверка 2 событий по параметру \'Var_Events_BitMask\'.\'_INST_BOOL1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 84
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_BitMask\'.\'_INST_BYTE1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 85
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_BitMask\'.\'_INST_WORD1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 86
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_BitMask\'.\'_INST_DWORD1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 87
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_BitMask\'.\'_INST_LWORD1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 88
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_BitMask\'.\'_INST_SINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 89
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_BitMask\'.\'_INST_INT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 90
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_BitMask\'.\'_INST_DINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 91
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_BitMask\'.\'_INST_LINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 92
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_BitMask\'.\'_INST_USINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 93
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_BitMask\'.\'_INST_UINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 94
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_BitMask\'.\'_INST_UDINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 95
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_BitMask\'.\'_INST_ULINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 96
    testRunner.Then("Запись Runtime значений \'TRUE\' в \'CheckEvents_ApertVal_Manual\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 97
    testRunner.Given("Sleep 3", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 98
 testRunner.Then("Получаю события группы \'Events\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 99
 testRunner.Then("Проверка 2 событий по параметру \'Var_Events_ApertVal\'.\'_TYPE_BOOL1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 100
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_TYPE_BYTE1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 101
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_TYPE_WORD1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 102
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_TYPE_DWORD1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 103
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_TYPE_LWORD1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 104
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_TYPE_SINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 105
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_TYPE_INT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 106
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_TYPE_DINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 107
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_TYPE_LINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 108
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_TYPE_USINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 109
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_TYPE_UINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 110
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_TYPE_UDINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 111
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_TYPE_ULINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 112
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_TYPE_REAL1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 113
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_TYPE_LREAL1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 114
 testRunner.Then("Проверка 2 событий по параметру \'Var_Events_ApertVal\'.\'_INST_BOOL1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 115
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_INST_BYTE1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 116
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_INST_WORD1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 117
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_INST_DWORD1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 118
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_INST_LWORD1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 119
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_INST_SINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 120
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_INST_INT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 121
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_INST_DINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 122
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_INST_LINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 123
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_INST_USINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 124
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_INST_UINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 125
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_INST_UDINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 126
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_INST_ULINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 127
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_INST_REAL1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 128
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_INST_LREAL1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 129
 testRunner.Then("Запись Runtime значений \'TRUE\' в \'CheckEvents_ChangeVal_Manual\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 130
 testRunner.Given("Sleep 3", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 131
 testRunner.Then("Получаю события группы \'Events\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 132
 testRunner.Then("Проверка 2 событий по параметру \'Var_Events_ChangeVal\'.\'_TYPE_BOOL1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 133
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_ChangeVal\'.\'_TYPE_BYTE1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 134
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_ChangeVal\'.\'_TYPE_WORD1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 135
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_ChangeVal\'.\'_TYPE_DWORD1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 136
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_ChangeVal\'.\'_TYPE_LWORD1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 137
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_ChangeVal\'.\'_TYPE_SINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 138
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_ChangeVal\'.\'_TYPE_INT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 139
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_ChangeVal\'.\'_TYPE_DINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 140
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_ChangeVal\'.\'_TYPE_LINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 141
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_ChangeVal\'.\'_TYPE_USINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 142
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_ChangeVal\'.\'_TYPE_UINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 143
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_ChangeVal\'.\'_TYPE_UDINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 144
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_ChangeVal\'.\'_TYPE_ULINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 145
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_ChangeVal\'.\'_TYPE_REAL1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 146
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_ChangeVal\'.\'_TYPE_LREAL1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 147
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_ChangeVal\'.\'_TYPE_TIME1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 148
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_ChangeVal\'.\'_TYPE_DATE\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Cpu715_Red_ReadRT")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_RunTime")]
        [NUnit.Framework.CategoryAttribute("StoryЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_ЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_RunTime")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void Cpu715_Red_ReadRT()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "EpicЧтение_RunTime",
                    "StoryЗеркалоДанных",
                    "parentSuite2_ExchUtils_ЗеркалоДанных",
                    "suiteЧтение_RunTime",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cpu715_Red_ReadRT", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 154
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 155
    testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 156
 testRunner.Given("Зеркало Шлюза \'MirrorWork\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 157
 testRunner.Given("Связь с устройством \'MirrorWork\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 158
    testRunner.Given("Связь с устройством \'cpu715_Red\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 159
    testRunner.Then("Чтение Runtime значения \'resVar_BOOL\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 160
    testRunner.Then("Чтение Runtime значения \'resVar_BYTE\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 161
    testRunner.Then("Чтение Runtime значения \'resVar_WORD\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 162
    testRunner.Then("Чтение Runtime значения \'resVar_DWORD\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 163
    testRunner.Then("Чтение Runtime значения \'resVar_LWORD\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 164
    testRunner.Then("Чтение Runtime значения \'resVar_SINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 165
    testRunner.Then("Чтение Runtime значения \'resVar_INT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 166
    testRunner.Then("Чтение Runtime значения \'resVar_DINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 167
    testRunner.Then("Чтение Runtime значения \'resVar_LINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 168
    testRunner.Then("Чтение Runtime значения \'resVar_USINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 169
  testRunner.Then("Чтение Runtime значения \'resVar_UINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 170
    testRunner.Then("Чтение Runtime значения \'resVar_UDINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 171
    testRunner.Then("Чтение Runtime значения \'resVar_ULINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 172
    testRunner.Then("Чтение Runtime значения \'resVar_REAL\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 173
    testRunner.Then("Чтение Runtime значения \'resVar_LREAL\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 174
    testRunner.Then("Чтение Runtime значения \'resVar_TIME\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 175
 testRunner.Then("Чтение Runtime значения \'resVar_DATE\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Cpu715_Red_Const_Quality")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("EpicПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("StoryЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_ЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("suiteПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void Cpu715_Red_Const_Quality()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "EpicПроверка_Quality",
                    "StoryЗеркалоДанных",
                    "parentSuite2_ExchUtils_ЗеркалоДанных",
                    "suiteПроверка_Quality",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cpu715_Red_Const_Quality", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 181
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 182
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 183
 testRunner.Given("Зеркало Шлюза \'MirrorWork\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 184
 testRunner.Given("Связь с устройством \'MirrorWork\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 185
    testRunner.Given("Связь с устройством \'cpu715_Red\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 186
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_BOOL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 187
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_BYTE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 188
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_WORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 189
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_DWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 190
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_LWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 191
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_SINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 192
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_INT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 193
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_DINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 194
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_LINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 195
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_USINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 196
 testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_UINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 197
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_UDINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 198
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_ULINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 199
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_REAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 200
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_LREAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 201
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_TIME_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 202
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_DATE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Cpu715_Clust_ReadRT")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_RunTime")]
        [NUnit.Framework.CategoryAttribute("StoryЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_ЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_RunTime")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void Cpu715_Clust_ReadRT()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "EpicЧтение_RunTime",
                    "StoryЗеркалоДанных",
                    "parentSuite2_ExchUtils_ЗеркалоДанных",
                    "suiteЧтение_RunTime",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cpu715_Clust_ReadRT", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 208
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 209
    testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 210
 testRunner.Given("Зеркало Шлюза \'MirrorWork\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 211
 testRunner.Given("Связь с устройством \'MirrorWork\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 212
    testRunner.Given("Связь с устройством \'cpu715_Cluster\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 213
    testRunner.Then("Чтение из Кластера 1 Runtime значения \'resVar_ALL_TYPES\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 214
 testRunner.Then("Чтение из Кластера 2 Runtime значения \'resVar_ALL_TYPES\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Cpu715_Clust_Const_Quality")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("EpicПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("StoryЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_ЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("suiteПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void Cpu715_Clust_Const_Quality()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "EpicПроверка_Quality",
                    "StoryЗеркалоДанных",
                    "parentSuite2_ExchUtils_ЗеркалоДанных",
                    "suiteПроверка_Quality",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cpu715_Clust_Const_Quality", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 220
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 221
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 222
 testRunner.Given("Зеркало Шлюза \'MirrorWork\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 223
 testRunner.Given("Связь с устройством \'MirrorWork\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 224
    testRunner.Given("Связь с устройством \'cpu715_Cluster\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 225
    testRunner.Then("Проверка Runtime качества \'Good\' переменной 1 Кластера \'resVar_ALL_TYPES_const\'.\'" +
                        "Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 226
    testRunner.Then("Проверка Runtime качества \'Good\' переменной 2 Кластера \'resVar_ALL_TYPES_const\'.\'" +
                        "Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Cpu715_Mono_TechEvents")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("EpicСобытия")]
        [NUnit.Framework.CategoryAttribute("StoryЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_ЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("suiteТехСобытия")]
        public void Cpu715_Mono_TechEvents()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "EpicСобытия",
                    "StoryЗеркалоДанных",
                    "parentSuite2_ExchUtils_ЗеркалоДанных",
                    "suiteТехСобытия"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cpu715_Mono_TechEvents", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 231
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 232
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 233
 testRunner.Given("Зеркало Шлюза \'MirrorWork\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 234
 testRunner.Given("Связь с устройством \'MirrorWork\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 235
    testRunner.Given("Связь с устройством \'cpu715_Mono\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 236
 testRunner.When("Очистка группы событий Events", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 237
 testRunner.Then("Запись Runtime значений \'TRUE\' в \'CheckEvents_BitMask_Manual\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 238
    testRunner.Given("Sleep 3", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 239
 testRunner.Then("Получаю события группы \'EventsPLC\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 241
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_BitMask\'.\'_TYPE_BYTE1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 242
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_BitMask\'.\'_TYPE_WORD1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 243
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_BitMask\'.\'_TYPE_DWORD1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 244
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_BitMask\'.\'_TYPE_LWORD1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 245
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_BitMask\'.\'_TYPE_SINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 246
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_BitMask\'.\'_TYPE_INT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 247
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_BitMask\'.\'_TYPE_DINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 248
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_BitMask\'.\'_TYPE_LINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 249
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_BitMask\'.\'_TYPE_USINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 250
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_BitMask\'.\'_TYPE_UINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 251
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_BitMask\'.\'_TYPE_UDINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 252
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_BitMask\'.\'_TYPE_ULINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 254
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_BitMask\'.\'_INST_BYTE1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 255
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_BitMask\'.\'_INST_WORD1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 256
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_BitMask\'.\'_INST_DWORD1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 257
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_BitMask\'.\'_INST_LWORD1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 258
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_BitMask\'.\'_INST_SINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 259
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_BitMask\'.\'_INST_INT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 260
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_BitMask\'.\'_INST_DINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 261
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_BitMask\'.\'_INST_LINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 262
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_BitMask\'.\'_INST_USINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 263
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_BitMask\'.\'_INST_UINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 264
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_BitMask\'.\'_INST_UDINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 265
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_BitMask\'.\'_INST_ULINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 266
    testRunner.Then("Запись Runtime значений \'TRUE\' в \'CheckEvents_ApertVal_Manual\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 267
    testRunner.Given("Sleep 3", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 268
 testRunner.Then("Получаю события группы \'EventsPLC\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 269
 testRunner.Then("Проверка 2 событий по параметру \'Var_Events_ApertVal\'.\'_TYPE_BOOL1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 270
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_TYPE_BYTE1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 271
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_TYPE_WORD1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 272
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_TYPE_DWORD1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 273
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_TYPE_LWORD1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 274
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_TYPE_SINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 275
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_TYPE_INT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 276
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_TYPE_DINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 277
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_TYPE_LINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 278
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_TYPE_USINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 279
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_TYPE_UINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 280
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_TYPE_UDINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 281
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_TYPE_ULINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 282
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_TYPE_REAL1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 283
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_TYPE_LREAL1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 284
 testRunner.Then("Проверка 2 событий по параметру \'Var_Events_ApertVal\'.\'_INST_BOOL1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 285
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_INST_BYTE1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 286
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_INST_WORD1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 287
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_INST_DWORD1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 288
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_INST_LWORD1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 289
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_INST_SINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 290
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_INST_INT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 291
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_INST_DINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 292
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_INST_LINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 293
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_INST_USINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 294
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_INST_UINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 295
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_INST_UDINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 296
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_INST_ULINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 297
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_INST_REAL1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 298
 testRunner.Then("Проверка 14 событий по параметру \'Var_Events_ApertVal\'.\'_INST_LREAL1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 299
    testRunner.Then("Запись Runtime значений \'TRUE\' в \'CheckEvents_ChangeVal_Manual\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 300
 testRunner.Given("Sleep 3", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 301
 testRunner.Then("Получаю события группы \'EventsPLC\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 302
 testRunner.Then("Проверка 2 событий по параметру \'Var_Events_ChangeVal\'.\'_TYPE_BOOL1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 303
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_ChangeVal\'.\'_TYPE_BYTE1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 304
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_ChangeVal\'.\'_TYPE_WORD1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 305
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_ChangeVal\'.\'_TYPE_DWORD1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 306
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_ChangeVal\'.\'_TYPE_LWORD1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 307
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_ChangeVal\'.\'_TYPE_SINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 308
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_ChangeVal\'.\'_TYPE_INT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 309
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_ChangeVal\'.\'_TYPE_DINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 310
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_ChangeVal\'.\'_TYPE_LINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 311
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_ChangeVal\'.\'_TYPE_USINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 312
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_ChangeVal\'.\'_TYPE_UINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 313
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_ChangeVal\'.\'_TYPE_UDINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 314
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_ChangeVal\'.\'_TYPE_ULINT1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 315
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_ChangeVal\'.\'_TYPE_REAL1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 316
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_ChangeVal\'.\'_TYPE_LREAL1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 317
 testRunner.Then("Проверка 9 событий по параметру \'Var_Events_ChangeVal\'.\'_TYPE_TIME1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("cpu850_Red_ReadRT")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_RunTime")]
        [NUnit.Framework.CategoryAttribute("StoryЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_ЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_RunTime")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void Cpu850_Red_ReadRT()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "EpicЧтение_RunTime",
                    "StoryЗеркалоДанных",
                    "parentSuite2_ExchUtils_ЗеркалоДанных",
                    "suiteЧтение_RunTime",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("cpu850_Red_ReadRT", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 324
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 325
    testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 326
 testRunner.Given("Зеркало Шлюза \'MirrorWork\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 327
 testRunner.Given("Связь с устройством \'MirrorWork\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 328
    testRunner.Given("Связь с устройством \'CPU850_RED\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 329
    testRunner.Then("Чтение Runtime значения \'resVar_BOOL\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 330
    testRunner.Then("Чтение Runtime значения \'resVar_BYTE\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 331
    testRunner.Then("Чтение Runtime значения \'resVar_WORD\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 332
    testRunner.Then("Чтение Runtime значения \'resVar_DWORD\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 333
    testRunner.Then("Чтение Runtime значения \'resVar_LWORD\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 334
    testRunner.Then("Чтение Runtime значения \'resVar_SINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 335
    testRunner.Then("Чтение Runtime значения \'resVar_INT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 336
    testRunner.Then("Чтение Runtime значения \'resVar_DINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 337
    testRunner.Then("Чтение Runtime значения \'resVar_LINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 338
    testRunner.Then("Чтение Runtime значения \'resVar_USINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 339
  testRunner.Then("Чтение Runtime значения \'resVar_UINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 340
    testRunner.Then("Чтение Runtime значения \'resVar_UDINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 341
    testRunner.Then("Чтение Runtime значения \'resVar_ULINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 342
    testRunner.Then("Чтение Runtime значения \'resVar_REAL\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 343
    testRunner.Then("Чтение Runtime значения \'resVar_LREAL\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 344
    testRunner.Then("Чтение Runtime значения \'resVar_TIME\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 345
 testRunner.Then("Чтение Runtime значения \'resVar_DATE\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("cpu850_Red_Const_Quality")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("EpicПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("StoryЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_ЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("suiteПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void Cpu850_Red_Const_Quality()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "EpicПроверка_Quality",
                    "StoryЗеркалоДанных",
                    "parentSuite2_ExchUtils_ЗеркалоДанных",
                    "suiteПроверка_Quality",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("cpu850_Red_Const_Quality", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 351
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 352
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 353
 testRunner.Given("Зеркало Шлюза \'MirrorWork\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 354
 testRunner.Given("Связь с устройством \'MirrorWork\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 355
    testRunner.Given("Связь с устройством \'CPU850_RED\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 356
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_BOOL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 357
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_BYTE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 358
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_WORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 359
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_DWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 360
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_LWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 361
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_SINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 362
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_INT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 363
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_DINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 364
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_LINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 365
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_USINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 366
 testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_UINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 367
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_UDINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 368
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_ULINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 369
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_REAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 370
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_LREAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 371
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_TIME_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 372
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_DATE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("GwEv1_ReadRT")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_RunTime")]
        [NUnit.Framework.CategoryAttribute("StoryЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_ЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_RunTime")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void GwEv1_ReadRT()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "EpicЧтение_RunTime",
                    "StoryЗеркалоДанных",
                    "parentSuite2_ExchUtils_ЗеркалоДанных",
                    "suiteЧтение_RunTime",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GwEv1_ReadRT", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 378
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 379
    testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 380
 testRunner.Given("Зеркало Шлюза \'MirrorWork\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 381
 testRunner.Given("Связь с устройством \'MirrorWork\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 382
    testRunner.Given("Связь с устройством \'GwExch_v1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 383
    testRunner.Then("Чтение Runtime значения \'GEv1_Var_BOOL\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 384
    testRunner.Then("Чтение Runtime значения \'GEv1_Var_BYTE\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 385
    testRunner.Then("Чтение Runtime значения \'GEv1_Var_WORD\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 386
    testRunner.Then("Чтение Runtime значения \'GEv1_Var_DWORD\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 387
    testRunner.Then("Чтение Runtime значения \'GEv1_Var_LWORD\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 388
    testRunner.Then("Чтение Runtime значения \'GEv1_Var_SINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 389
    testRunner.Then("Чтение Runtime значения \'GEv1_Var_INT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 390
    testRunner.Then("Чтение Runtime значения \'GEv1_Var_DINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 391
    testRunner.Then("Чтение Runtime значения \'GEv1_Var_LINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 392
    testRunner.Then("Чтение Runtime значения \'GEv1_Var_USINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 393
    testRunner.Then("Чтение Runtime значения \'GEv1_Var_UINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 394
    testRunner.Then("Чтение Runtime значения \'GEv1_Var_UDINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 395
    testRunner.Then("Чтение Runtime значения \'GEv1_Var_ULINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 396
    testRunner.Then("Чтение Runtime значения \'GEv1_Var_REAL\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 397
    testRunner.Then("Чтение Runtime значения \'GEv1_Var_LREAL\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 398
    testRunner.Then("Чтение Runtime значения \'GEv1_Var_TIME\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 399
    testRunner.Then("Чтение Runtime значения \'GEv1_Var_DATE\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("GwEv1_Const_Quality")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("EpicПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("StoryЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_ЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("suiteПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void GwEv1_Const_Quality()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "EpicПроверка_Quality",
                    "StoryЗеркалоДанных",
                    "parentSuite2_ExchUtils_ЗеркалоДанных",
                    "suiteПроверка_Quality",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GwEv1_Const_Quality", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 405
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 406
    testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 407
 testRunner.Given("Зеркало Шлюза \'MirrorWork\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 408
 testRunner.Given("Связь с устройством \'MirrorWork\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 409
    testRunner.Given("Связь с устройством \'GwExch_v1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 410
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GEv1_Var_BOOL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 411
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GEv1_Var_BYTE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 412
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GEv1_Var_WORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 413
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GEv1_Var_DWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 414
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GEv1_Var_LWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 415
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GEv1_Var_SINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 416
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GEv1_Var_INT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 417
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GEv1_Var_DINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 418
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GEv1_Var_LINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 419
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GEv1_Var_USINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 420
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GEv1_Var_UINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 421
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GEv1_Var_UDINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 422
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GEv1_Var_ULINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 423
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GEv1_Var_REAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 424
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GEv1_Var_LREAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 425
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GEv1_Var_TIME_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 426
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GEv1_Var_DATE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("GwE2v1_ReadRT")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_RunTime")]
        [NUnit.Framework.CategoryAttribute("StoryЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_ЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_RunTime")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void GwE2V1_ReadRT()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "EpicЧтение_RunTime",
                    "StoryЗеркалоДанных",
                    "parentSuite2_ExchUtils_ЗеркалоДанных",
                    "suiteЧтение_RunTime",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GwE2v1_ReadRT", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 432
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 433
    testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 434
 testRunner.Given("Зеркало Шлюза \'MirrorWork\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 435
 testRunner.Given("Связь с устройством \'MirrorWork\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 436
    testRunner.Given("Связь с устройством \'GwExch_2_v1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 437
    testRunner.Then("Чтение Runtime значения \'GwE2v1_Var_BOOL\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 438
    testRunner.Then("Чтение Runtime значения \'GwE2v1_Var_BYTE\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 439
    testRunner.Then("Чтение Runtime значения \'GwE2v1_Var_WORD\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 440
    testRunner.Then("Чтение Runtime значения \'GwE2v1_Var_DWORD\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 441
    testRunner.Then("Чтение Runtime значения \'GwE2v1_Var_LWORD\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 442
    testRunner.Then("Чтение Runtime значения \'GwE2v1_Var_SINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 443
    testRunner.Then("Чтение Runtime значения \'GwE2v1_Var_INT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 444
    testRunner.Then("Чтение Runtime значения \'GwE2v1_Var_DINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 445
    testRunner.Then("Чтение Runtime значения \'GwE2v1_Var_LINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 446
    testRunner.Then("Чтение Runtime значения \'GwE2v1_Var_USINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 447
    testRunner.Then("Чтение Runtime значения \'GwE2v1_Var_UINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 448
    testRunner.Then("Чтение Runtime значения \'GwE2v1_Var_UDINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 449
    testRunner.Then("Чтение Runtime значения \'GwE2v1_Var_ULINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 450
    testRunner.Then("Чтение Runtime значения \'GwE2v1_Var_REAL\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 451
    testRunner.Then("Чтение Runtime значения \'GwE2v1_Var_LREAL\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 452
    testRunner.Then("Чтение Runtime значения \'GwE2v1_Var_TIME\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 453
    testRunner.Then("Чтение Runtime значения \'GwE2v1_Var_DATE\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("GwE2v1_Const_Quality")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("EpicПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("StoryЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_ЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("suiteПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void GwE2V1_Const_Quality()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "EpicПроверка_Quality",
                    "StoryЗеркалоДанных",
                    "parentSuite2_ExchUtils_ЗеркалоДанных",
                    "suiteПроверка_Quality",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GwE2v1_Const_Quality", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 459
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 460
    testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 461
 testRunner.Given("Зеркало Шлюза \'MirrorWork\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 462
 testRunner.Given("Связь с устройством \'MirrorWork\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 463
    testRunner.Given("Связь с устройством \'GwExch_2_v1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 464
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2v1_Var_BOOL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 465
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2v1_Var_BYTE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 466
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2v1_Var_WORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 467
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2v1_Var_DWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 468
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2v1_Var_LWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 469
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2v1_Var_SINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 470
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2v1_Var_INT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 471
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2v1_Var_DINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 472
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2v1_Var_LINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 473
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2v1_Var_USINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 474
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2v1_Var_UINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 475
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2v1_Var_UDINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 476
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2v1_Var_ULINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 477
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2v1_Var_REAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 478
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2v1_Var_LREAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 479
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2v1_Var_TIME_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 480
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2v1_Var_DATE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VerProxy52_GE_v1_ReadRT")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_RunTime")]
        [NUnit.Framework.CategoryAttribute("StoryЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_ЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_RunTime")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void VerProxy52_GE_V1_ReadRT()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "EpicЧтение_RunTime",
                    "StoryЗеркалоДанных",
                    "parentSuite2_ExchUtils_ЗеркалоДанных",
                    "suiteЧтение_RunTime",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VerProxy52_GE_v1_ReadRT", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 486
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 487
    testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 488
 testRunner.Given("Зеркало Шлюза \'MirrorWork\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 489
 testRunner.Given("Связь с устройством \'MirrorWork\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 490
    testRunner.Given("Связь с устройством \'VerProxy52_GE_v1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 491
    testRunner.Then("Чтение Runtime значения \'Var_BOOL\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 492
    testRunner.Then("Чтение Runtime значения \'Var_BYTE\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 493
    testRunner.Then("Чтение Runtime значения \'Var_WORD\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 494
    testRunner.Then("Чтение Runtime значения \'Var_DWORD\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 495
    testRunner.Then("Чтение Runtime значения \'Var_LWORD\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 496
    testRunner.Then("Чтение Runtime значения \'Var_SINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 497
    testRunner.Then("Чтение Runtime значения \'Var_INT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 498
    testRunner.Then("Чтение Runtime значения \'Var_DINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 499
    testRunner.Then("Чтение Runtime значения \'Var_LINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 500
    testRunner.Then("Чтение Runtime значения \'Var_USINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 501
    testRunner.Then("Чтение Runtime значения \'Var_UINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 502
    testRunner.Then("Чтение Runtime значения \'Var_UDINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 503
    testRunner.Then("Чтение Runtime значения \'Var_ULINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 504
    testRunner.Then("Чтение Runtime значения \'Var_REAL\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 505
    testRunner.Then("Чтение Runtime значения \'Var_LREAL\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 506
    testRunner.Then("Чтение Runtime значения \'Var_TIME\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 507
    testRunner.Then("Чтение Runtime значения \'Var_DATE\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VerProxy52_GE_v1_Const_Quality")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("EpicПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("StoryЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_ЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("suiteПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void VerProxy52_GE_V1_Const_Quality()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "EpicПроверка_Quality",
                    "StoryЗеркалоДанных",
                    "parentSuite2_ExchUtils_ЗеркалоДанных",
                    "suiteПроверка_Quality",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VerProxy52_GE_v1_Const_Quality", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 513
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 514
    testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 515
 testRunner.Given("Зеркало Шлюза \'MirrorWork\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 516
 testRunner.Given("Связь с устройством \'MirrorWork\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 517
    testRunner.Given("Связь с устройством \'VerProxy52_GE_v1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 518
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'Var_BOOL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 519
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'Var_BYTE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 520
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'Var_WORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 521
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'Var_DWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 522
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'Var_LWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 523
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'Var_SINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 524
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'Var_INT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 525
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'Var_DINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 526
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'Var_LINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 527
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'Var_USINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 528
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'Var_UINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 529
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'Var_UDINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 530
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'Var_ULINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 531
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'Var_REAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 532
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'Var_LREAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 533
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'Var_TIME_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 534
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'Var_DATE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VerProxy52_GE_2_v1_ReadRT")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_RunTime")]
        [NUnit.Framework.CategoryAttribute("StoryЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_ЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_RunTime")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void VerProxy52_GE_2_V1_ReadRT()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "EpicЧтение_RunTime",
                    "StoryЗеркалоДанных",
                    "parentSuite2_ExchUtils_ЗеркалоДанных",
                    "suiteЧтение_RunTime",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VerProxy52_GE_2_v1_ReadRT", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 540
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 541
    testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 542
 testRunner.Given("Зеркало Шлюза \'MirrorWork\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 543
 testRunner.Given("Связь с устройством \'MirrorWork\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 544
    testRunner.Given("Связь с устройством \'VerProxy52_GE_2_v1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 545
    testRunner.Then("Чтение Runtime значения \'Var_BOOL\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 546
    testRunner.Then("Чтение Runtime значения \'Var_BYTE\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 547
    testRunner.Then("Чтение Runtime значения \'Var_WORD\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 548
    testRunner.Then("Чтение Runtime значения \'Var_DWORD\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 549
    testRunner.Then("Чтение Runtime значения \'Var_LWORD\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 550
    testRunner.Then("Чтение Runtime значения \'Var_SINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 551
    testRunner.Then("Чтение Runtime значения \'Var_INT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 552
    testRunner.Then("Чтение Runtime значения \'Var_DINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 553
    testRunner.Then("Чтение Runtime значения \'Var_LINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 554
    testRunner.Then("Чтение Runtime значения \'Var_USINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 555
    testRunner.Then("Чтение Runtime значения \'Var_UINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 556
    testRunner.Then("Чтение Runtime значения \'Var_UDINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 557
    testRunner.Then("Чтение Runtime значения \'Var_ULINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 558
    testRunner.Then("Чтение Runtime значения \'Var_REAL\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 559
    testRunner.Then("Чтение Runtime значения \'Var_LREAL\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 560
    testRunner.Then("Чтение Runtime значения \'Var_TIME\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 561
    testRunner.Then("Чтение Runtime значения \'Var_DATE\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VerProxy52_GE_2_v1_Const_Quality")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("EpicПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("StoryЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_ЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("suiteПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void VerProxy52_GE_2_V1_Const_Quality()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "EpicПроверка_Quality",
                    "StoryЗеркалоДанных",
                    "parentSuite2_ExchUtils_ЗеркалоДанных",
                    "suiteПроверка_Quality",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VerProxy52_GE_2_v1_Const_Quality", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 567
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 568
    testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 569
 testRunner.Given("Зеркало Шлюза \'MirrorWork\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 570
 testRunner.Given("Связь с устройством \'MirrorWork\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 571
    testRunner.Given("Связь с устройством \'VerProxy52_GE_2_v1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 572
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'Var_BOOL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 573
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'Var_BYTE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 574
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'Var_WORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 575
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'Var_DWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 576
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'Var_LWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 577
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'Var_SINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 578
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'Var_INT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 579
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'Var_DINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 580
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'Var_LINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 581
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'Var_USINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 582
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'Var_UINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 583
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'Var_UDINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 584
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'Var_ULINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 585
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'Var_REAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 586
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'Var_LREAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 587
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'Var_TIME_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 588
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'Var_DATE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("UDP_to_UDP_ReadRT")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_RunTime")]
        [NUnit.Framework.CategoryAttribute("StoryЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_ЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_RunTime")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void UDP_To_UDP_ReadRT()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "EpicЧтение_RunTime",
                    "StoryЗеркалоДанных",
                    "parentSuite2_ExchUtils_ЗеркалоДанных",
                    "suiteЧтение_RunTime",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("UDP_to_UDP_ReadRT", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 595
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 596
    testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 597
 testRunner.Given("Зеркало Шлюза \'MirrorWork\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 598
 testRunner.Given("Связь с устройством \'MirrorWork\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 599
    testRunner.Given("Связь с устройством \'UDP_receiver_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 600
    testRunner.Then("Чтение Runtime значения \'resVar_BOOL\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 601
    testRunner.Then("Чтение Runtime значения \'resVar_BYTE\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 602
    testRunner.Then("Чтение Runtime значения \'resVar_WORD\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 603
    testRunner.Then("Чтение Runtime значения \'resVar_DWORD\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 604
    testRunner.Then("Чтение Runtime значения \'resVar_LWORD\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 605
    testRunner.Then("Чтение Runtime значения \'resVar_SINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 606
    testRunner.Then("Чтение Runtime значения \'resVar_INT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 607
    testRunner.Then("Чтение Runtime значения \'resVar_DINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 608
    testRunner.Then("Чтение Runtime значения \'resVar_LINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 609
    testRunner.Then("Чтение Runtime значения \'resVar_USINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 610
    testRunner.Then("Чтение Runtime значения \'resVar_UINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 611
    testRunner.Then("Чтение Runtime значения \'resVar_UDINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 612
    testRunner.Then("Чтение Runtime значения \'resVar_ULINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 613
    testRunner.Then("Чтение Runtime значения \'resVar_REAL\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 614
    testRunner.Then("Чтение Runtime значения \'resVar_LREAL\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 615
    testRunner.Then("Чтение Runtime значения \'resVar_TIME\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 616
    testRunner.Then("Чтение Runtime значения \'resVar_DATE\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("UDP_to_UDP_Const_Quality")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("EpicПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("StoryЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_ЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("suiteПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void UDP_To_UDP_Const_Quality()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "EpicПроверка_Quality",
                    "StoryЗеркалоДанных",
                    "parentSuite2_ExchUtils_ЗеркалоДанных",
                    "suiteПроверка_Quality",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("UDP_to_UDP_Const_Quality", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 622
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 623
    testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 624
 testRunner.Given("Зеркало Шлюза \'MirrorWork\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 625
 testRunner.Given("Связь с устройством \'MirrorWork\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 626
    testRunner.Given("Связь с устройством \'UDP_receiver_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 627
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_BOOL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 628
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_BYTE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 629
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_WORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 630
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_DWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 631
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_LWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 632
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_SINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 633
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_INT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 634
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_DINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 635
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_LINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 636
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_USINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 637
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_UINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 638
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_UDINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 639
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_ULINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 640
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_REAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 641
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_LREAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 642
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_TIME_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 643
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'resVar_DATE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Iec104_SlaveSp_ReadRT")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_RunTime")]
        [NUnit.Framework.CategoryAttribute("StoryЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_ЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_RunTime")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void Iec104_SlaveSp_ReadRT()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "EpicЧтение_RunTime",
                    "StoryЗеркалоДанных",
                    "parentSuite2_ExchUtils_ЗеркалоДанных",
                    "suiteЧтение_RunTime",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Iec104_SlaveSp_ReadRT", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 649
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 650
    testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 651
 testRunner.Given("Зеркало Шлюза \'MirrorWork\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 652
 testRunner.Given("Связь с устройством \'MirrorWork\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 653
    testRunner.Given("Связь с устройством \'iec104_sporadic\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 654
    testRunner.Then("Чтение Runtime значения \'Iec104_VAR_bool\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 655
    testRunner.Then("Чтение Runtime значения \'Iec104_VAR_byte\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 656
    testRunner.Then("Чтение Runtime значения \'Iec104_VAR_word\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 657
    testRunner.Then("Чтение Runtime значения \'Iec104_VAR_dword\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 658
    testRunner.Then("Чтение Runtime значения \'Iec104_VAR_lword\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 659
    testRunner.Then("Чтение Runtime значения \'Iec104_VAR_sint\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 660
    testRunner.Then("Чтение Runtime значения \'Iec104_VAR_int\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 661
    testRunner.Then("Чтение Runtime значения \'Iec104_VAR_dint\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 662
    testRunner.Then("Чтение Runtime значения \'Iec104_VAR_lint\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 663
    testRunner.Then("Чтение Runtime значения \'Iec104_VAR_usint\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 664
    testRunner.Then("Чтение Runtime значения \'Iec104_VAR_uint\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 665
    testRunner.Then("Чтение Runtime значения \'Iec104_VAR_udint\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 666
    testRunner.Then("Чтение Runtime значения \'Iec104_VAR_ulint\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 667
    testRunner.Then("Чтение Runtime значения \'Iec104_VAR_real\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 668
    testRunner.Then("Чтение Runtime значения \'Iec104_VAR_lreal\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 669
    testRunner.Then("Чтение Runtime значения \'Iec104_VAR_time\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 670
    testRunner.Then("Чтение Runtime значения \'Iec104_VAR_date\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("OpcDa_Subs_ReadRT")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_RunTime")]
        [NUnit.Framework.CategoryAttribute("StoryЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_ЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_RunTime")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void OpcDa_Subs_ReadRT()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "EpicЧтение_RunTime",
                    "StoryЗеркалоДанных",
                    "parentSuite2_ExchUtils_ЗеркалоДанных",
                    "suiteЧтение_RunTime",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("OpcDa_Subs_ReadRT", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 676
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 677
    testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 678
 testRunner.Given("Зеркало Шлюза \'MirrorWork\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 679
 testRunner.Given("Связь с устройством \'MirrorWork\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 680
    testRunner.Given("Связь с устройством \'OpcDa_Subs\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 681
    testRunner.Then("Чтение Runtime значения \'OpcDa_Subs_VAR_bool\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 682
    testRunner.Then("Чтение Runtime значения \'OpcDa_Subs_VAR_byte\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 683
    testRunner.Then("Чтение Runtime значения \'OpcDa_Subs_VAR_word\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 684
    testRunner.Then("Чтение Runtime значения \'OpcDa_Subs_VAR_dword\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 685
    testRunner.Then("Чтение Runtime значения \'OpcDa_Subs_VAR_lword\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 686
    testRunner.Then("Чтение Runtime значения \'OpcDa_Subs_VAR_sint\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 687
    testRunner.Then("Чтение Runtime значения \'OpcDa_Subs_VAR_int\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 688
    testRunner.Then("Чтение Runtime значения \'OpcDa_Subs_VAR_dint\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 689
    testRunner.Then("Чтение Runtime значения \'OpcDa_Subs_VAR_lint\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 690
    testRunner.Then("Чтение Runtime значения \'OpcDa_Subs_VAR_usint\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 691
    testRunner.Then("Чтение Runtime значения \'OpcDa_Subs_VAR_uint\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 692
    testRunner.Then("Чтение Runtime значения \'OpcDa_Subs_VAR_udint\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 693
    testRunner.Then("Чтение Runtime значения \'OpcDa_Subs_VAR_ulint\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 694
    testRunner.Then("Чтение Runtime значения \'OpcDa_Subs_VAR_real\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 695
    testRunner.Then("Чтение Runtime значения \'OpcDa_Subs_VAR_lreal\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 696
    testRunner.Then("Чтение Runtime значения \'OpcDa_Subs_VAR_time\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 697
    testRunner.Then("Чтение Runtime значения \'OpcDa_Subs_VAR_date\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("OpcDa_Subs_Const_Quality")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("EpicПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("StoryЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_ЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("suiteПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void OpcDa_Subs_Const_Quality()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "EpicПроверка_Quality",
                    "StoryЗеркалоДанных",
                    "parentSuite2_ExchUtils_ЗеркалоДанных",
                    "suiteПроверка_Quality",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("OpcDa_Subs_Const_Quality", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 703
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 704
    testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 705
 testRunner.Given("Зеркало Шлюза \'MirrorWork\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 706
 testRunner.Given("Связь с устройством \'MirrorWork\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 707
    testRunner.Given("Связь с устройством \'OpcDa_Subs\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 708
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcDa_Subs_VAR_bool_const\'.\'Значение" +
                        "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 709
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcDa_Subs_VAR_byte_const\'.\'Значение" +
                        "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 710
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcDa_Subs_VAR_word_const\'.\'Значение" +
                        "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 711
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcDa_Subs_VAR_dword_const\'.\'Значени" +
                        "е\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 712
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcDa_Subs_VAR_lword_const\'.\'Значени" +
                        "е\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 713
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcDa_Subs_VAR_sint_const\'.\'Значение" +
                        "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 714
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcDa_Subs_VAR_int_const\'.\'Значение\'" +
                        "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 715
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcDa_Subs_VAR_dint_const\'.\'Значение" +
                        "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 716
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcDa_Subs_VAR_lint_const\'.\'Значение" +
                        "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 717
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcDa_Subs_VAR_usint_const\'.\'Значени" +
                        "е\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 718
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcDa_Subs_VAR_uint_const\'.\'Значение" +
                        "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 719
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcDa_Subs_VAR_udint_const\'.\'Значени" +
                        "е\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 720
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcDa_Subs_VAR_ulint_const\'.\'Значени" +
                        "е\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 721
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcDa_Subs_VAR_real_const\'.\'Значение" +
                        "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 722
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcDa_Subs_VAR_lreal_const\'.\'Значени" +
                        "е\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 723
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcDa_Subs_VAR_time_const\'.\'Значение" +
                        "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 724
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcDa_Subs_VAR_date_const\'.\'Значение" +
                        "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("OpcDaProxy_Subs_ReadRT")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_RunTime")]
        [NUnit.Framework.CategoryAttribute("StoryЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_ЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_RunTime")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void OpcDaProxy_Subs_ReadRT()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "EpicЧтение_RunTime",
                    "StoryЗеркалоДанных",
                    "parentSuite2_ExchUtils_ЗеркалоДанных",
                    "suiteЧтение_RunTime",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("OpcDaProxy_Subs_ReadRT", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 730
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 731
    testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 732
 testRunner.Given("Зеркало Шлюза \'MirrorWork\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 733
 testRunner.Given("Связь с устройством \'MirrorWork\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 734
    testRunner.Given("Связь с устройством \'OpcDaProxy_Subs\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 735
    testRunner.Then("Чтение Runtime значения \'OpcProxy_Subs_VAR_bool\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 736
    testRunner.Then("Чтение Runtime значения \'OpcProxy_Subs_VAR_byte\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 737
    testRunner.Then("Чтение Runtime значения \'OpcProxy_Subs_VAR_word\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 738
    testRunner.Then("Чтение Runtime значения \'OpcProxy_Subs_VAR_dword\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 739
    testRunner.Then("Чтение Runtime значения \'OpcProxy_Subs_VAR_lword\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 740
    testRunner.Then("Чтение Runtime значения \'OpcProxy_Subs_VAR_sint\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 741
    testRunner.Then("Чтение Runtime значения \'OpcProxy_Subs_VAR_int\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 742
    testRunner.Then("Чтение Runtime значения \'OpcProxy_Subs_VAR_dint\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 743
    testRunner.Then("Чтение Runtime значения \'OpcProxy_Subs_VAR_lint\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 744
    testRunner.Then("Чтение Runtime значения \'OpcProxy_Subs_VAR_usint\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 745
    testRunner.Then("Чтение Runtime значения \'OpcProxy_Subs_VAR_uint\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 746
    testRunner.Then("Чтение Runtime значения \'OpcProxy_Subs_VAR_udint\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 747
    testRunner.Then("Чтение Runtime значения \'OpcProxy_Subs_VAR_ulint\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 748
    testRunner.Then("Чтение Runtime значения \'OpcProxy_Subs_VAR_real\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 749
    testRunner.Then("Чтение Runtime значения \'OpcProxy_Subs_VAR_lreal\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 750
    testRunner.Then("Чтение Runtime значения \'OpcProxy_Subs_VAR_time\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 751
    testRunner.Then("Чтение Runtime значения \'OpcProxy_Subs_VAR_date\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("OpcDaProxy_Subs_Const_Quality")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("EpicПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("StoryЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_ЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("suiteПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void OpcDaProxy_Subs_Const_Quality()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "EpicПроверка_Quality",
                    "StoryЗеркалоДанных",
                    "parentSuite2_ExchUtils_ЗеркалоДанных",
                    "suiteПроверка_Quality",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("OpcDaProxy_Subs_Const_Quality", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 757
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 758
    testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 759
 testRunner.Given("Зеркало Шлюза \'MirrorWork\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 760
 testRunner.Given("Связь с устройством \'MirrorWork\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 761
    testRunner.Given("Связь с устройством \'OpcDaProxy_Subs\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 762
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcProxy_Subs_VAR_bool_const\'.\'Значе" +
                        "ние\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 763
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcProxy_Subs_VAR_byte_const\'.\'Значе" +
                        "ние\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 764
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcProxy_Subs_VAR_word_const\'.\'Значе" +
                        "ние\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 765
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcProxy_Subs_VAR_dword_const\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 766
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcProxy_Subs_VAR_lword_const\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 767
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcProxy_Subs_VAR_sint_const\'.\'Значе" +
                        "ние\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 768
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcProxy_Subs_VAR_int_const\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 769
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcProxy_Subs_VAR_dint_const\'.\'Значе" +
                        "ние\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 770
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcProxy_Subs_VAR_lint_const\'.\'Значе" +
                        "ние\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 771
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcProxy_Subs_VAR_usint_const\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 772
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcProxy_Subs_VAR_uint_const\'.\'Значе" +
                        "ние\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 773
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcProxy_Subs_VAR_udint_const\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 774
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcProxy_Subs_VAR_ulint_const\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 775
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcProxy_Subs_VAR_real_const\'.\'Значе" +
                        "ние\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 776
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcProxy_Subs_VAR_lreal_const\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 777
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcProxy_Subs_VAR_time_const\'.\'Значе" +
                        "ние\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 778
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcProxy_Subs_VAR_date_const\'.\'Значе" +
                        "ние\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Modbus_TCP_502_ReadTR")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_RunTime")]
        [NUnit.Framework.CategoryAttribute("StoryЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_ЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_RunTime")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void Modbus_TCP_502_ReadTR()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "EpicЧтение_RunTime",
                    "StoryЗеркалоДанных",
                    "parentSuite2_ExchUtils_ЗеркалоДанных",
                    "suiteЧтение_RunTime",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Modbus_TCP_502_ReadTR", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 784
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 785
    testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 786
 testRunner.Given("Зеркало Шлюза \'MirrorWork\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 787
 testRunner.Given("Связь с устройством \'MirrorWork\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 788
    testRunner.Given("Связь с устройством \'Mb_Tcp502_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 789
 testRunner.Then("Чтение Runtime значения \'F01_Ch00\'.\'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 790
 testRunner.Then("Чтение Runtime значения \'F01_Ch01\'.\'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 791
 testRunner.Then("Чтение Runtime значения \'F02_Ch00\'.\'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 792
 testRunner.Then("Чтение Runtime значения \'F02_Ch01\'.\'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 793
 testRunner.Then("Чтение Runtime значения \'F03_0_INT\'.\'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 794
 testRunner.Then("Чтение Runtime значения \'F03_1_UINT\'.\'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 795
 testRunner.Then("Чтение Runtime значения \'F03_2_WORD\'.\'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 796
 testRunner.Then("Чтение Runtime значения \'F03_3_INT\'.\'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 797
 testRunner.Then("Чтение Runtime значения \'F03_20_DINT\'.\'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 798
 testRunner.Then("Чтение Runtime значения \'F03_100_REAL\'.\'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 799
 testRunner.Then("Чтение Runtime значения \'F03_102_REAL\'.\'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 800
 testRunner.Then("Чтение Runtime значения \'F03_120_LREAL\'.\'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 801
 testRunner.Then("Чтение Runtime значения \'F04_0_INT\'.\'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 802
 testRunner.Then("Чтение Runtime значения \'F04_1_UINT\'.\'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 803
 testRunner.Then("Чтение Runtime значения \'F04_2_WORD\'.\'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 804
 testRunner.Then("Чтение Runtime значения \'F04_3_INT\'.\'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 805
    testRunner.Then("Чтение Runtime значения \'MbTcp502_1_01_06_bool\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 806
    testRunner.Then("Чтение Runtime значения \'MbTcp502_1_01_07_bool\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 807
    testRunner.Then("Чтение Runtime значения \'MbTcp502_1_02_06_bool\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 808
    testRunner.Then("Чтение Runtime значения \'MbTcp502_1_02_07_bool\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 809
    testRunner.Then("Чтение Runtime значения \'MbTcp502_1_03_06_UINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 810
    testRunner.Then("Чтение Runtime значения \'MbTcp502_1_03_07_WORD\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 811
    testRunner.Then("Чтение Runtime значения \'MbTcp502_1_03_08_INT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 812
    testRunner.Then("Чтение Runtime значения \'MbTcp502_1_03_28_DINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 813
    testRunner.Then("Чтение Runtime значения \'MbTcp502_1_03_30_DWORD\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 814
    testRunner.Then("Чтение Runtime значения \'MbTcp502_1_03_108_REAL\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 815
    testRunner.Then("Чтение Runtime значения \'MbTcp502_1_03_110_REAL\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 816
    testRunner.Then("Чтение Runtime значения \'MbTcp502_1_03_132_LREAL\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 817
    testRunner.Then("Чтение Runtime значения \'MbTcp502_1_04_06_UINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 818
    testRunner.Then("Чтение Runtime значения \'MbTcp502_1_04_07_WORD\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 819
    testRunner.Then("Чтение Runtime значения \'MbTcp502_1_04_08_INT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 820
    testRunner.Then("Чтение Runtime значения \'MbTcp502_1_04_09_INT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Modbus_2_TCP_522_ReadTR")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_RunTime")]
        [NUnit.Framework.CategoryAttribute("StoryЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_ЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_RunTime")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void Modbus_2_TCP_522_ReadTR()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "EpicЧтение_RunTime",
                    "StoryЗеркалоДанных",
                    "parentSuite2_ExchUtils_ЗеркалоДанных",
                    "suiteЧтение_RunTime",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Modbus_2_TCP_522_ReadTR", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 826
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 827
    testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 828
 testRunner.Given("Зеркало Шлюза \'MirrorWork\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 829
 testRunner.Given("Связь с устройством \'MirrorWork\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 830
    testRunner.Given("Связь с устройством \'Mb2_Tcp522_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 831
 testRunner.Then("Чтение Runtime значения \'F01_Ch00\'.\'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 832
 testRunner.Then("Чтение Runtime значения \'F01_Ch01\'.\'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 833
 testRunner.Then("Чтение Runtime значения \'F02_Ch00\'.\'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 834
 testRunner.Then("Чтение Runtime значения \'F02_Ch01\'.\'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 835
 testRunner.Then("Чтение Runtime значения \'F03_0_INT\'.\'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 836
 testRunner.Then("Чтение Runtime значения \'F03_1_UINT\'.\'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 837
 testRunner.Then("Чтение Runtime значения \'F03_2_WORD\'.\'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 838
 testRunner.Then("Чтение Runtime значения \'F03_3_INT\'.\'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 839
 testRunner.Then("Чтение Runtime значения \'F03_20_DINT\'.\'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 840
 testRunner.Then("Чтение Runtime значения \'F03_100_REAL\'.\'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 841
 testRunner.Then("Чтение Runtime значения \'F03_102_REAL\'.\'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 842
 testRunner.Then("Чтение Runtime значения \'F03_120_LREAL\'.\'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 843
 testRunner.Then("Чтение Runtime значения \'F04_0_INT\'.\'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 844
 testRunner.Then("Чтение Runtime значения \'F04_1_UINT\'.\'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 845
 testRunner.Then("Чтение Runtime значения \'F04_2_WORD\'.\'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 846
 testRunner.Then("Чтение Runtime значения \'F04_3_INT\'.\'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 847
    testRunner.Then("Чтение Runtime значения \'Mb2_Tcp522_1_01_06_bool\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 848
    testRunner.Then("Чтение Runtime значения \'Mb2_Tcp522_1_01_07_bool\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 849
    testRunner.Then("Чтение Runtime значения \'Mb2_Tcp522_1_02_06_bool\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 850
    testRunner.Then("Чтение Runtime значения \'Mb2_Tcp522_1_02_07_bool\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 851
    testRunner.Then("Чтение Runtime значения \'Mb2_Tcp522_1_03_06_UINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 852
    testRunner.Then("Чтение Runtime значения \'Mb2_Tcp522_1_03_07_WORD\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 853
    testRunner.Then("Чтение Runtime значения \'Mb2_Tcp522_1_03_08_INT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 854
    testRunner.Then("Чтение Runtime значения \'Mb2_Tcp522_1_03_28_DINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 855
    testRunner.Then("Чтение Runtime значения \'Mb2_Tcp522_1_03_30_DWORD\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 856
    testRunner.Then("Чтение Runtime значения \'Mb2_Tcp522_1_03_108_REAL\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 857
    testRunner.Then("Чтение Runtime значения \'Mb2_Tcp522_1_03_110_REAL\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 858
    testRunner.Then("Чтение Runtime значения \'Mb2_Tcp522_1_03_132_LREAL\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 859
    testRunner.Then("Чтение Runtime значения \'Mb2_Tcp522_1_04_06_UINT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 860
    testRunner.Then("Чтение Runtime значения \'Mb2_Tcp522_1_04_07_WORD\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 861
    testRunner.Then("Чтение Runtime значения \'Mb2_Tcp522_1_04_08_INT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 862
    testRunner.Then("Чтение Runtime значения \'Mb2_Tcp522_1_04_09_INT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("OpcUa_Gl_Var_ReadRT")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_RunTime")]
        [NUnit.Framework.CategoryAttribute("StoryЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_ЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_RunTime")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void OpcUa_Gl_Var_ReadRT()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "EpicЧтение_RunTime",
                    "StoryЗеркалоДанных",
                    "parentSuite2_ExchUtils_ЗеркалоДанных",
                    "suiteЧтение_RunTime",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("OpcUa_Gl_Var_ReadRT", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 868
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 869
    testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 870
 testRunner.Given("Зеркало Шлюза \'MirrorWork\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 871
 testRunner.Given("Связь с устройством \'MirrorWork\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 872
    testRunner.Given("Связь с устройством \'OpcUa_ASt5000_Lin\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 873
    testRunner.Then("Чтение Runtime значения \'OpcUa_Gl_VAR_bool\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 874
    testRunner.Then("Чтение Runtime значения \'OpcUa_Gl_VAR_byte\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 875
    testRunner.Then("Чтение Runtime значения \'OpcUa_Gl_VAR_word\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 876
    testRunner.Then("Чтение Runtime значения \'OpcUa_Gl_VAR_dword\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 877
    testRunner.Then("Чтение Runtime значения \'OpcUa_Gl_VAR_lword\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 878
    testRunner.Then("Чтение Runtime значения \'OpcUa_Gl_VAR_sint\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 879
    testRunner.Then("Чтение Runtime значения \'OpcUa_Gl_VAR_int\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 880
    testRunner.Then("Чтение Runtime значения \'OpcUa_Gl_VAR_dint\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 881
    testRunner.Then("Чтение Runtime значения \'OpcUa_Gl_VAR_lint\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 882
    testRunner.Then("Чтение Runtime значения \'OpcUa_Gl_VAR_usint\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 883
    testRunner.Then("Чтение Runtime значения \'OpcUa_Gl_VAR_uint\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 884
    testRunner.Then("Чтение Runtime значения \'OpcUa_Gl_VAR_udint\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 885
    testRunner.Then("Чтение Runtime значения \'OpcUa_Gl_VAR_ulint\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 886
    testRunner.Then("Чтение Runtime значения \'OpcUa_Gl_VAR_real\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 887
    testRunner.Then("Чтение Runtime значения \'OpcUa_Gl_VAR_lreal\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 888
    testRunner.Then("Чтение Runtime значения \'OpcUa_Gl_VAR_time\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 889
    testRunner.Then("Чтение Runtime значения \'OpcUa_Gl_VAR_date\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 890
    testRunner.Then("Чтение Runtime значения \'OpcUa_Gl_VAR_DT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 892
 testRunner.Then("Чтение Runtime значения \'OpcUa_Gl_Block\'.\'In_ALL_TYPES\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 893
 testRunner.Then("Чтение Runtime значения \'OpcUa_Gl_Block\'.\'Local_ALL_TYPES\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 894
 testRunner.Then("Чтение Runtime значения \'OpcUa_Gl_Block\'.\'Out_ALL_TYPES\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("OpcUa_PouParam_ReadRT")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_RunTime")]
        [NUnit.Framework.CategoryAttribute("StoryЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_ЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_RunTime")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void OpcUa_PouParam_ReadRT()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "EpicЧтение_RunTime",
                    "StoryЗеркалоДанных",
                    "parentSuite2_ExchUtils_ЗеркалоДанных",
                    "suiteЧтение_RunTime",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("OpcUa_PouParam_ReadRT", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 900
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 901
    testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 902
 testRunner.Given("Зеркало Шлюза \'MirrorWork\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 903
 testRunner.Given("Связь с устройством \'MirrorWork\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 904
    testRunner.Given("Связь с устройством \'OpcUa_ASt5000_Lin\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 905
    testRunner.Then("Чтение Runtime значения \'OpcUa_PARAM_bool\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 906
    testRunner.Then("Чтение Runtime значения \'OpcUa_PARAM_byte\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 907
    testRunner.Then("Чтение Runtime значения \'OpcUa_PARAM_word\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 908
    testRunner.Then("Чтение Runtime значения \'OpcUa_PARAM_dword\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 909
    testRunner.Then("Чтение Runtime значения \'OpcUa_PARAM_lword\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 910
    testRunner.Then("Чтение Runtime значения \'OpcUa_PARAM_sint\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 911
    testRunner.Then("Чтение Runtime значения \'OpcUa_PARAM_int\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 912
    testRunner.Then("Чтение Runtime значения \'OpcUa_PARAM_dint\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 913
    testRunner.Then("Чтение Runtime значения \'OpcUa_PARAM_lint\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 914
    testRunner.Then("Чтение Runtime значения \'OpcUa_PARAM_usint\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 915
    testRunner.Then("Чтение Runtime значения \'OpcUa_PARAM_uint\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 916
    testRunner.Then("Чтение Runtime значения \'OpcUa_PARAM_udint\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 917
    testRunner.Then("Чтение Runtime значения \'OpcUa_PARAM_ulint\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 918
    testRunner.Then("Чтение Runtime значения \'OpcUa_PARAM_real\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 919
    testRunner.Then("Чтение Runtime значения \'OpcUa_PARAM_lreal\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 920
    testRunner.Then("Чтение Runtime значения \'OpcUa_PARAM_time\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 921
    testRunner.Then("Чтение Runtime значения \'OpcUa_PARAM_date\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 922
    testRunner.Then("Чтение Runtime значения \'OpcUa_PARAM_DT\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 925
 testRunner.Then("Чтение Runtime значения \'OpcUa_PARAM_Block\'.\'Local_ALL_TYPES\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 926
 testRunner.Then("Чтение Runtime значения \'OpcUa_PARAM_Block\'.\'Out_ALL_TYPES\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("OpcUa_PouParam_Const_Quality")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("EpicПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("StoryЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_ЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("suiteПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void OpcUa_PouParam_Const_Quality()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "EpicПроверка_Quality",
                    "StoryЗеркалоДанных",
                    "parentSuite2_ExchUtils_ЗеркалоДанных",
                    "suiteПроверка_Quality",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("OpcUa_PouParam_Const_Quality", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 932
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 933
    testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 934
 testRunner.Given("Зеркало Шлюза \'MirrorWork\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 935
 testRunner.Given("Связь с устройством \'MirrorWork\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 936
    testRunner.Given("Связь с устройством \'OpcUa_ASt5000_Lin\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 937
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcUa_PARAM_bool_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 938
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcUa_PARAM_byte_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 939
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcUa_PARAM_word_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 940
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcUa_PARAM_dword_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 941
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcUa_PARAM_lword_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 942
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcUa_PARAM_sint_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 943
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcUa_PARAM_int_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 944
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcUa_PARAM_dint_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 945
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcUa_PARAM_lint_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 946
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcUa_PARAM_usint_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 947
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcUa_PARAM_uint_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 948
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcUa_PARAM_udint_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 949
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcUa_PARAM_ulint_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 950
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcUa_PARAM_real_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 951
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcUa_PARAM_lreal_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 952
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcUa_PARAM_time_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 953
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcUa_PARAM_date_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 954
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcUa_PARAM_DT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("SNMPv2_ReadRT")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_RunTime")]
        [NUnit.Framework.CategoryAttribute("StoryЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_ЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_RunTime")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void SNMPv2_ReadRT()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "EpicЧтение_RunTime",
                    "StoryЗеркалоДанных",
                    "parentSuite2_ExchUtils_ЗеркалоДанных",
                    "suiteЧтение_RunTime",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SNMPv2_ReadRT", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 960
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 961
    testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 962
 testRunner.Given("Зеркало Шлюза \'MirrorWork\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 963
 testRunner.Given("Связь с устройством \'MirrorWork\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 964
    testRunner.Given("Связь с устройством \'Snmp_v2_NetSw28\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 965
    testRunner.Then("Чтение Runtime значения \'Name\'.\'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 966
    testRunner.Then("Чтение Runtime значения \'Description\'.\'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 967
    testRunner.Then("Чтение Runtime значения \'UpTime\'.\'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 968
    testRunner.Then("Чтение Runtime значения \'MAC Адрес\'.\'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 969
    testRunner.Then("Чтение Runtime значения \'Channel 09\\Speed \'.\'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 970
    testRunner.Then("Чтение Runtime значения \'Channel 09\\InOctets \'.\'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 971
    testRunner.Then("Чтение Runtime значения \'Channel 09\\OutOctets \'.\'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 972
    testRunner.Then("Чтение Runtime значения \'Порт 9\'.\'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 973
 testRunner.Then("Чтение Runtime значения \'Channel 10\\Speed \'.\'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 974
    testRunner.Then("Чтение Runtime значения \'Channel 10\\InOctets \'.\'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 975
    testRunner.Then("Чтение Runtime значения \'Channel 10\\OutOctets \'.\'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 976
    testRunner.Then("Чтение Runtime значения \'Порт 10\'.\'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("iCore2_WR_cfg2")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_RunTime")]
        [NUnit.Framework.CategoryAttribute("StoryЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_ЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("suiteMultiConfig")]
        public void ICore2_WR_Cfg2()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "EpicЧтение_RunTime",
                    "StoryЗеркалоДанных",
                    "parentSuite2_ExchUtils_ЗеркалоДанных",
                    "suiteMultiConfig"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("iCore2_WR_cfg2", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 981
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 982
 testRunner.Given("Шлюзы \'DataSrc\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 983
 testRunner.Given("Зеркало Шлюза \'MirrorDataSrc\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 984
 testRunner.Given("Связь с устройством \'MirrorDataSrc\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 985
 testRunner.Given("Связь с устройством \'iGenerator\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 986
 testRunner.Then("Проверка записи Runtime значений \'BOOL AnyValues\' в \'resVar_BOOL_external\'.\'Значе" +
                        "ние\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 987
 testRunner.Then("Проверка записи Runtime значений \'BYTE AnyValues\' в \'resVar_BYTE_external\'.\'Значе" +
                        "ние\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 988
 testRunner.Then("Проверка записи Runtime значений \'WORD AnyValues\' в \'resVar_WORD_external\'.\'Значе" +
                        "ние\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 989
 testRunner.Then("Проверка записи Runtime значений \'DWORD AnyValues\' в \'resVar_DWORD_external\'.\'Зна" +
                        "чение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 990
 testRunner.Then("Проверка записи Runtime значений \'LWORD AnyValues\' в \'resVar_LWORD_external\'.\'Зна" +
                        "чение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 991
 testRunner.Then("Проверка записи Runtime значений \'SINT AnyValues\' в \'resVar_SINT_external\'.\'Значе" +
                        "ние\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 992
 testRunner.Then("Проверка записи Runtime значений \'INT AnyValues\' в \'resVar_INT_external\'.\'Значени" +
                        "е\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 993
 testRunner.Then("Проверка записи Runtime значений \'DINT AnyValues\' в \'resVar_DINT_external\'.\'Значе" +
                        "ние\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 994
 testRunner.Then("Проверка записи Runtime значений \'LINT AnyValues\' в \'resVar_LINT_external\'.\'Значе" +
                        "ние\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 995
 testRunner.Then("Проверка записи Runtime значений \'USINT AnyValues\' в \'resVar_USINT_external\'.\'Зна" +
                        "чение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 996
 testRunner.Then("Проверка записи Runtime значений \'UINT AnyValues\' в \'resVar_UINT_external\'.\'Значе" +
                        "ние\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 997
 testRunner.Then("Проверка записи Runtime значений \'UDINT AnyValues\' в \'resVar_UDINT_external\'.\'Зна" +
                        "чение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 998
 testRunner.Then("Проверка записи Runtime значений \'ULINT AnyValues\' в \'resVar_ULINT_external\'.\'Зна" +
                        "чение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 999
 testRunner.Then("Проверка записи Runtime значений \'REAL AnyValues\' в \'resVar_REAL_external\'.\'Значе" +
                        "ние\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1000
 testRunner.Then("Проверка записи Runtime значений \'LREAL AnyValues\' в \'resVar_LREAL_external\'.\'Зна" +
                        "чение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1001
 testRunner.Then("Проверка записи Runtime значений \'TIME AnyValues\' в \'resVar_TIME_external\'.\'Значе" +
                        "ние\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1002
 testRunner.Then("Проверка записи Runtime значений \'DATE AnyValues\' в \'resVar_DATE_external\'.\'Значе" +
                        "ние\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("iCore2_WR_cfg3")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_RunTime")]
        [NUnit.Framework.CategoryAttribute("StoryЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_ЗеркалоДанных")]
        [NUnit.Framework.CategoryAttribute("suiteMultiConfig")]
        public void ICore2_WR_Cfg3()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "EpicЧтение_RunTime",
                    "StoryЗеркалоДанных",
                    "parentSuite2_ExchUtils_ЗеркалоДанных",
                    "suiteMultiConfig"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("iCore2_WR_cfg3", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 1007
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 1008
 testRunner.Given("Шлюзы \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1009
 testRunner.Given("Зеркало Шлюза \'MirrorDataReciv\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1010
 testRunner.Given("Связь с устройством \'MirrorDataReciv\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1011
 testRunner.Given("Связь с устройством \'iCoreReceiver\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1012
 testRunner.Then("Проверка записи Runtime значений \'BOOL AnyValues\' в \'resVar_BOOL_external\'.\'Значе" +
                        "ние\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1013
 testRunner.Then("Проверка записи Runtime значений \'BYTE AnyValues\' в \'resVar_BYTE_external\'.\'Значе" +
                        "ние\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1014
 testRunner.Then("Проверка записи Runtime значений \'WORD AnyValues\' в \'resVar_WORD_external\'.\'Значе" +
                        "ние\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1015
 testRunner.Then("Проверка записи Runtime значений \'DWORD AnyValues\' в \'resVar_DWORD_external\'.\'Зна" +
                        "чение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1016
 testRunner.Then("Проверка записи Runtime значений \'LWORD AnyValues\' в \'resVar_LWORD_external\'.\'Зна" +
                        "чение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1017
 testRunner.Then("Проверка записи Runtime значений \'SINT AnyValues\' в \'resVar_SINT_external\'.\'Значе" +
                        "ние\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1018
 testRunner.Then("Проверка записи Runtime значений \'INT AnyValues\' в \'resVar_INT_external\'.\'Значени" +
                        "е\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1019
 testRunner.Then("Проверка записи Runtime значений \'DINT AnyValues\' в \'resVar_DINT_external\'.\'Значе" +
                        "ние\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1020
 testRunner.Then("Проверка записи Runtime значений \'LINT AnyValues\' в \'resVar_LINT_external\'.\'Значе" +
                        "ние\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1021
 testRunner.Then("Проверка записи Runtime значений \'USINT AnyValues\' в \'resVar_USINT_external\'.\'Зна" +
                        "чение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1022
 testRunner.Then("Проверка записи Runtime значений \'UINT AnyValues\' в \'resVar_UINT_external\'.\'Значе" +
                        "ние\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1023
 testRunner.Then("Проверка записи Runtime значений \'UDINT AnyValues\' в \'resVar_UDINT_external\'.\'Зна" +
                        "чение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1024
 testRunner.Then("Проверка записи Runtime значений \'ULINT AnyValues\' в \'resVar_ULINT_external\'.\'Зна" +
                        "чение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1025
 testRunner.Then("Проверка записи Runtime значений \'REAL AnyValues\' в \'resVar_REAL_external\'.\'Значе" +
                        "ние\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1026
 testRunner.Then("Проверка записи Runtime значений \'LREAL AnyValues\' в \'resVar_LREAL_external\'.\'Зна" +
                        "чение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1027
 testRunner.Then("Проверка записи Runtime значений \'TIME AnyValues\' в \'resVar_TIME_external\'.\'Значе" +
                        "ние\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1028
 testRunner.Then("Проверка записи Runtime значений \'DATE AnyValues\' в \'resVar_DATE_external\'.\'Значе" +
                        "ние\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
