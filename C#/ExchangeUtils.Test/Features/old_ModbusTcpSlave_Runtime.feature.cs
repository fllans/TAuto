// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ExchangeUtils.Tests.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("ModbusTcpSlave_Runtime")]
    [NUnit.Framework.IgnoreAttribute("Ignored feature")]
    public partial class ModbusTcpSlave_RuntimeFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = new string[] {
                "ignore"};
        
#line 1 "old_ModbusTcpSlave_Runtime.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "ModbusTcpSlave_Runtime", null, ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("MbTcpSlave.iCore2_GoodQual")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("StoryModbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_Modbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void MbTcpSlave_ICore2_GoodQual()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicПроверка_Quality",
                    "StoryModbus_TCP_Slave",
                    "parentSuite2_ExchUtils_Modbus_TCP_Slave",
                    "suiteПроверка_Quality",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("MbTcpSlave.iCore2_GoodQual", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 8
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 9
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 10
 testRunner.Given("Связь с устройством \'ICORE2\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 11
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 12
 testRunner.Given("Связь с устройством \'ModbusTcp_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 13
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iCore2_BOOL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 14
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iCore2_BYTE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 15
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iCore2_WORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 16
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iCore2_DWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 17
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iCore2_LWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 18
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iCore2_SINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 19
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iCore2_INT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 20
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iCore2_DINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 21
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iCore2_LINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 22
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iCore2_USINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 23
 testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iCore2_UINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 24
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iCore2_UDINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 25
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iCore2_ULINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 26
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iCore2_REAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 27
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iCore2_LREAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 28
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iCore2_TIME_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 29
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'iCore2_DATE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("MbTcpSlave.iCore2_ReadWrite")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("StoryModbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_Modbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteРазрешенные_переменные")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void MbTcpSlave_ICore2_ReadWrite()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "StoryModbus_TCP_Slave",
                    "parentSuite2_ExchUtils_Modbus_TCP_Slave",
                    "suiteЧтение_Запись",
                    "subSuiteРазрешенные_переменные",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("MbTcpSlave.iCore2_ReadWrite", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 35
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 36
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 37
 testRunner.Given("Связь с устройством \'ICORE2\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 38
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 39
 testRunner.Given("Связь с устройством \'ModbusTcp_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 40
 testRunner.Then("Проверка чтения и записи значений \'BOOL Values\' в \'iCore2_BOOL_external\'.\'Значени" +
                        "е\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 41
 testRunner.Then("Проверка чтения и записи значений \'BYTE AnyValues\' в \'iCore2_BYTE_external\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 42
 testRunner.Then("Проверка чтения и записи значений \'WORD AnyValues\' в \'iCore2_WORD_external\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 43
 testRunner.Then("Проверка чтения и записи значений \'DWORD AnyValues\' в \'iCore2_DWORD_external\'.\'Зн" +
                        "ачение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 44
 testRunner.Then("Проверка чтения и записи значений \'DWORD AnyValues\' в \'iCore2_LWORD_external\'.\'Зн" +
                        "ачение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 45
 testRunner.Then("Проверка чтения и записи значений \'SINT AnyValues\' в \'iCore2_SINT_external\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 46
 testRunner.Then("Проверка чтения и записи значений \'INT AnyValues\' в \'iCore2_INT_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 47
 testRunner.Then("Проверка чтения и записи значений \'DINT AnyValues\' в \'iCore2_DINT_external\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 48
 testRunner.Then("Проверка чтения и записи значений \'DINT AnyValues\' в \'iCore2_LINT_external\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 49
 testRunner.Then("Проверка чтения и записи значений \'USINT AnyValues\' в \'iCore2_USINT_external\'.\'Зн" +
                        "ачение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 50
 testRunner.Then("Проверка чтения и записи значений \'UINT AnyValues\' в \'iCore2_UINT_external\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 51
 testRunner.Then("Проверка чтения и записи значений \'UDINT AnyValues\' в \'iCore2_UDINT_external\'.\'Зн" +
                        "ачение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 52
 testRunner.Then("Проверка чтения и записи значений \'UDINT AnyValues\' в \'iCore2_ULINT_external\'.\'Зн" +
                        "ачение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 53
 testRunner.Then("Проверка чтения и записи значений \'REAL AnyValues\' в \'iCore2_REAL_external\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 54
 testRunner.Then("Проверка чтения и записи значений \'LREAL AnyValues\' в \'iCore2_LREAL_external\'.\'Зн" +
                        "ачение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 55
 testRunner.Then("Проверка чтения и записи значений \'TIME AnyValues\' в \'iCore2_TIME_external\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 56
 testRunner.Then("Проверка чтения и записи значений \'DATE AnyValues\' в \'iCore2_DATE_external\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("MbTcpSlave.iCore2_WiteList")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("StoryModbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_Modbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteЗапись_запрещена")]
        public void MbTcpSlave_ICore2_WiteList()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "StoryModbus_TCP_Slave",
                    "parentSuite2_ExchUtils_Modbus_TCP_Slave",
                    "suiteЧтение_Запись",
                    "subSuiteЗапись_запрещена"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("MbTcpSlave.iCore2_WiteList", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 61
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 62
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 63
 testRunner.Given("Связь с устройством \'ICORE2\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 64
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 65
 testRunner.Given("Связь с устройством \'ModbusTcp_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 66
 testRunner.Then("Проверка записи \'iCore2_BOOL_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 67
 testRunner.Then("Проверка записи \'iCore2_BYTE_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 68
 testRunner.Then("Проверка записи \'iCore2_WORD_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 69
 testRunner.Then("Проверка записи \'iCore2_DWORD_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 70
 testRunner.Then("Проверка записи \'iCore2_LWORD_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 71
 testRunner.Then("Проверка записи \'iCore2_SINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 72
 testRunner.Then("Проверка записи \'iCore2_INT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 73
 testRunner.Then("Проверка записи \'iCore2_DINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 74
 testRunner.Then("Проверка записи \'iCore2_LINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 75
 testRunner.Then("Проверка записи \'iCore2_USINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 76
 testRunner.Then("Проверка записи \'iCore2_UINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 77
 testRunner.Then("Проверка записи \'iCore2_UDINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 78
 testRunner.Then("Проверка записи \'iCore2_ULINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 79
 testRunner.Then("Проверка записи \'iCore2_REAL_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 80
 testRunner.Then("Проверка записи \'iCore2_LREAL_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 81
 testRunner.Then("Проверка записи \'iCore2_TIME_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 82
 testRunner.Then("Проверка записи \'iCore2_DATE_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("MbTcpSlave.cpu715_Red_GoodQual")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("StoryModbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_Modbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void MbTcpSlave_Cpu715_Red_GoodQual()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicПроверка_Quality",
                    "StoryModbus_TCP_Slave",
                    "parentSuite2_ExchUtils_Modbus_TCP_Slave",
                    "suiteПроверка_Quality",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("MbTcpSlave.cpu715_Red_GoodQual", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 88
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 89
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 90
 testRunner.Given("Связь с устройством \'cpu715_Red\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 91
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 92
 testRunner.Given("Связь с устройством \'ModbusTcp_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 93
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Red_BOOL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 94
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Red_BYTE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 95
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Red_WORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 96
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Red_DWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 97
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Red_LWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 98
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Red_SINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 99
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Red_INT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 100
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Red_DINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 101
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Red_LINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 102
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Red_USINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 103
 testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Red_UINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 104
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Red_UDINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 105
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Red_ULINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 106
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Red_REAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 107
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Red_LREAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 108
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Red_TIME_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 109
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Red_DATE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("MbTcpSlave.cpu715_Red_ReadWrite")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("StoryModbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_Modbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteРазрешенные_переменные")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void MbTcpSlave_Cpu715_Red_ReadWrite()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "StoryModbus_TCP_Slave",
                    "parentSuite2_ExchUtils_Modbus_TCP_Slave",
                    "suiteЧтение_Запись",
                    "subSuiteРазрешенные_переменные",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("MbTcpSlave.cpu715_Red_ReadWrite", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 115
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 116
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 117
 testRunner.Given("Связь с устройством \'cpu715_Red\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 118
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 119
 testRunner.Given("Связь с устройством \'ModbusTcp_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 120
 testRunner.Then("Проверка чтения и записи значений \'BOOL Values\' в \'cpu715_Red_BOOL_external\'.\'Зна" +
                        "чение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 121
 testRunner.Then("Проверка чтения и записи значений \'BYTE AnyValues\' в \'cpu715_Red_BYTE_external\'.\'" +
                        "Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 122
 testRunner.Then("Проверка чтения и записи значений \'WORD AnyValues\' в \'cpu715_Red_WORD_external\'.\'" +
                        "Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 123
 testRunner.Then("Проверка чтения и записи значений \'DWORD AnyValues\' в \'cpu715_Red_DWORD_external\'" +
                        ".\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 124
 testRunner.Then("Проверка чтения и записи значений \'DWORD AnyValues\' в \'cpu715_Red_LWORD_external\'" +
                        ".\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 125
 testRunner.Then("Проверка чтения и записи значений \'SINT AnyValues\' в \'cpu715_Red_SINT_external\'.\'" +
                        "Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 126
 testRunner.Then("Проверка чтения и записи значений \'INT AnyValues\' в \'cpu715_Red_INT_external\'.\'Зн" +
                        "ачение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 127
 testRunner.Then("Проверка чтения и записи значений \'DINT AnyValues\' в \'cpu715_Red_DINT_external\'.\'" +
                        "Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 128
 testRunner.Then("Проверка чтения и записи значений \'DINT AnyValues\' в \'cpu715_Red_LINT_external\'.\'" +
                        "Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 129
 testRunner.Then("Проверка чтения и записи значений \'USINT AnyValues\' в \'cpu715_Red_USINT_external\'" +
                        ".\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 130
 testRunner.Then("Проверка чтения и записи значений \'UINT AnyValues\' в \'cpu715_Red_UINT_external\'.\'" +
                        "Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 131
 testRunner.Then("Проверка чтения и записи значений \'UDINT AnyValues\' в \'cpu715_Red_UDINT_external\'" +
                        ".\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 132
 testRunner.Then("Проверка чтения и записи значений \'UDINT AnyValues\' в \'cpu715_Red_ULINT_external\'" +
                        ".\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 133
 testRunner.Then("Проверка чтения и записи значений \'REAL AnyValues\' в \'cpu715_Red_REAL_external\'.\'" +
                        "Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 134
 testRunner.Then("Проверка чтения и записи значений \'LREAL AnyValues\' в \'cpu715_Red_LREAL_external\'" +
                        ".\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 135
 testRunner.Then("Проверка чтения и записи значений \'TIME AnyValues\' в \'cpu715_Red_TIME_external\'.\'" +
                        "Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 136
 testRunner.Then("Проверка чтения и записи значений \'DATE AnyValues\' в \'cpu715_Red_DATE_external\'.\'" +
                        "Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("MbTcpSlave.cpu715_Red_WiteList")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("StoryModbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_Modbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteЗапись_запрещена")]
        public void MbTcpSlave_Cpu715_Red_WiteList()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "StoryModbus_TCP_Slave",
                    "parentSuite2_ExchUtils_Modbus_TCP_Slave",
                    "suiteЧтение_Запись",
                    "subSuiteЗапись_запрещена"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("MbTcpSlave.cpu715_Red_WiteList", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 141
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 142
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 143
 testRunner.Given("Связь с устройством \'cpu715_Red\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 144
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 145
 testRunner.Given("Связь с устройством \'ModbusTcp_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 146
 testRunner.Then("Проверка записи \'cpu715_Red_BOOL_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 147
 testRunner.Then("Проверка записи \'cpu715_Red_BYTE_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 148
 testRunner.Then("Проверка записи \'cpu715_Red_WORD_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 149
 testRunner.Then("Проверка записи \'cpu715_Red_DWORD_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 150
 testRunner.Then("Проверка записи \'cpu715_Red_LWORD_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 151
 testRunner.Then("Проверка записи \'cpu715_Red_SINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 152
 testRunner.Then("Проверка записи \'cpu715_Red_INT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 153
 testRunner.Then("Проверка записи \'cpu715_Red_DINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 154
 testRunner.Then("Проверка записи \'cpu715_Red_LINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 155
 testRunner.Then("Проверка записи \'cpu715_Red_USINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 156
 testRunner.Then("Проверка записи \'cpu715_Red_UINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 157
 testRunner.Then("Проверка записи \'cpu715_Red_UDINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 158
 testRunner.Then("Проверка записи \'cpu715_Red_ULINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 159
 testRunner.Then("Проверка записи \'cpu715_Red_REAL_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 160
 testRunner.Then("Проверка записи \'cpu715_Red_LREAL_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 161
 testRunner.Then("Проверка записи \'cpu715_Red_TIME_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 162
 testRunner.Then("Проверка записи \'cpu715_Red_DATE_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("MbTcpSlave.cpu715_Clust_GoodQual")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("StoryModbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_Modbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void MbTcpSlave_Cpu715_Clust_GoodQual()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicПроверка_Quality",
                    "StoryModbus_TCP_Slave",
                    "parentSuite2_ExchUtils_Modbus_TCP_Slave",
                    "suiteПроверка_Quality",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("MbTcpSlave.cpu715_Clust_GoodQual", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 168
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 169
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 170
 testRunner.Given("Связь с устройством \'cpu715_Cluster\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 171
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 172
 testRunner.Given("Связь с устройством \'ModbusTcp_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 173
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Cluster_BOOL_const\'.\'Значение" +
                        "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 174
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Cluster_BYTE_const\'.\'Значение" +
                        "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 175
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Cluster_WORD_const\'.\'Значение" +
                        "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 176
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Cluster_DWORD_const\'.\'Значени" +
                        "е\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 177
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Cluster_LWORD_const\'.\'Значени" +
                        "е\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 178
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Cluster_SINT_const\'.\'Значение" +
                        "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 179
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Cluster_INT_const\'.\'Значение\'" +
                        "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 180
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Cluster_DINT_const\'.\'Значение" +
                        "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 181
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Cluster_LINT_const\'.\'Значение" +
                        "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 182
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Cluster_USINT_const\'.\'Значени" +
                        "е\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 183
 testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Cluster_UINT_const\'.\'Значение" +
                        "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 184
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Cluster_UDINT_const\'.\'Значени" +
                        "е\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 185
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Cluster_ULINT_const\'.\'Значени" +
                        "е\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 186
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Cluster_REAL_const\'.\'Значение" +
                        "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 187
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Cluster_LREAL_const\'.\'Значени" +
                        "е\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 188
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Cluster_TIME_const\'.\'Значение" +
                        "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 189
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu715_Cluster_DATE_const\'.\'Значение" +
                        "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("MbTcpSlave.cpu715_Clust_ReadWrite")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("StoryModbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_Modbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteРазрешенные_переменные")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void MbTcpSlave_Cpu715_Clust_ReadWrite()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "StoryModbus_TCP_Slave",
                    "parentSuite2_ExchUtils_Modbus_TCP_Slave",
                    "suiteЧтение_Запись",
                    "subSuiteРазрешенные_переменные",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("MbTcpSlave.cpu715_Clust_ReadWrite", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 195
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 196
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 197
 testRunner.Given("Связь с устройством \'cpu715_Cluster\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 198
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 199
 testRunner.Given("Связь с устройством \'ModbusTcp_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 200
 testRunner.Then("Проверка чтения и записи значений \'BOOL Values\' в \'cpu715_Cluster_BOOL_external\'." +
                        "\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 201
 testRunner.Then("Проверка чтения и записи значений \'BYTE AnyValues\' в \'cpu715_Cluster_BYTE_externa" +
                        "l\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 202
 testRunner.Then("Проверка чтения и записи значений \'WORD AnyValues\' в \'cpu715_Cluster_WORD_externa" +
                        "l\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 203
 testRunner.Then("Проверка чтения и записи значений \'DWORD AnyValues\' в \'cpu715_Cluster_DWORD_exter" +
                        "nal\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 204
 testRunner.Then("Проверка чтения и записи значений \'DWORD AnyValues\' в \'cpu715_Cluster_LWORD_exter" +
                        "nal\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 205
 testRunner.Then("Проверка чтения и записи значений \'SINT AnyValues\' в \'cpu715_Cluster_SINT_externa" +
                        "l\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 206
 testRunner.Then("Проверка чтения и записи значений \'INT AnyValues\' в \'cpu715_Cluster_INT_external\'" +
                        ".\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 207
 testRunner.Then("Проверка чтения и записи значений \'DINT AnyValues\' в \'cpu715_Cluster_DINT_externa" +
                        "l\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 208
 testRunner.Then("Проверка чтения и записи значений \'DINT AnyValues\' в \'cpu715_Cluster_LINT_externa" +
                        "l\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 209
 testRunner.Then("Проверка чтения и записи значений \'USINT AnyValues\' в \'cpu715_Cluster_USINT_exter" +
                        "nal\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 210
 testRunner.Then("Проверка чтения и записи значений \'UINT AnyValues\' в \'cpu715_Cluster_UINT_externa" +
                        "l\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 211
 testRunner.Then("Проверка чтения и записи значений \'UDINT AnyValues\' в \'cpu715_Cluster_UDINT_exter" +
                        "nal\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 212
 testRunner.Then("Проверка чтения и записи значений \'UDINT AnyValues\' в \'cpu715_Cluster_ULINT_exter" +
                        "nal\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 213
 testRunner.Then("Проверка чтения и записи значений \'REAL AnyValues\' в \'cpu715_Cluster_REAL_externa" +
                        "l\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 214
 testRunner.Then("Проверка чтения и записи значений \'LREAL AnyValues\' в \'cpu715_Cluster_LREAL_exter" +
                        "nal\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 215
 testRunner.Then("Проверка чтения и записи значений \'TIME AnyValues\' в \'cpu715_Cluster_TIME_externa" +
                        "l\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 216
 testRunner.Then("Проверка чтения и записи значений \'DATE AnyValues\' в \'cpu715_Cluster_DATE_externa" +
                        "l\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("MbTcpSlave.cpu715_Clust_WiteList")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("StoryModbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_Modbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteЗапись_запрещена")]
        public void MbTcpSlave_Cpu715_Clust_WiteList()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "StoryModbus_TCP_Slave",
                    "parentSuite2_ExchUtils_Modbus_TCP_Slave",
                    "suiteЧтение_Запись",
                    "subSuiteЗапись_запрещена"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("MbTcpSlave.cpu715_Clust_WiteList", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 221
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 222
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 223
 testRunner.Given("Связь с устройством \'cpu715_Cluster\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 224
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 225
 testRunner.Given("Связь с устройством \'ModbusTcp_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 226
 testRunner.Then("Проверка записи \'cpu715_Cluster_BOOL_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 227
 testRunner.Then("Проверка записи \'cpu715_Cluster_BYTE_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 228
 testRunner.Then("Проверка записи \'cpu715_Cluster_WORD_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 229
 testRunner.Then("Проверка записи \'cpu715_Cluster_DWORD_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 230
 testRunner.Then("Проверка записи \'cpu715_Cluster_LWORD_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 231
 testRunner.Then("Проверка записи \'cpu715_Cluster_SINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 232
 testRunner.Then("Проверка записи \'cpu715_Cluster_INT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 233
 testRunner.Then("Проверка записи \'cpu715_Cluster_DINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 234
 testRunner.Then("Проверка записи \'cpu715_Cluster_LINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 235
 testRunner.Then("Проверка записи \'cpu715_Cluster_USINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 236
 testRunner.Then("Проверка записи \'cpu715_Cluster_UINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 237
 testRunner.Then("Проверка записи \'cpu715_Cluster_UDINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 238
 testRunner.Then("Проверка записи \'cpu715_Cluster_ULINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 239
 testRunner.Then("Проверка записи \'cpu715_Cluster_REAL_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 240
 testRunner.Then("Проверка записи \'cpu715_Cluster_LREAL_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 241
 testRunner.Then("Проверка записи \'cpu715_Cluster_TIME_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 242
 testRunner.Then("Проверка записи \'cpu715_Cluster_DATE_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("MbTcpSlave.cpu850_Red_GoodQual")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("StoryModbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_Modbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void MbTcpSlave_Cpu850_Red_GoodQual()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicПроверка_Quality",
                    "StoryModbus_TCP_Slave",
                    "parentSuite2_ExchUtils_Modbus_TCP_Slave",
                    "suiteПроверка_Quality",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("MbTcpSlave.cpu850_Red_GoodQual", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 248
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 249
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 250
 testRunner.Given("Связь с устройством \'CPU850_RED\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 251
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 252
 testRunner.Given("Связь с устройством \'ModbusTcp_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 253
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu850_Red_BOOL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 254
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu850_Red_BYTE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 255
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu850_Red_WORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 256
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu850_Red_DWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 257
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu850_Red_LWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 258
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu850_Red_SINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 259
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu850_Red_INT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 260
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu850_Red_DINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 261
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu850_Red_LINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 262
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu850_Red_USINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 263
 testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu850_Red_UINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 264
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu850_Red_UDINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 265
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu850_Red_ULINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 266
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu850_Red_REAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 267
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu850_Red_LREAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 268
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu850_Red_TIME_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 269
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'cpu850_Red_DATE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("MbTcpSlave.cpu850_Red_ReadWrite")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("StoryModbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_Modbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteРазрешенные_переменные")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void MbTcpSlave_Cpu850_Red_ReadWrite()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "StoryModbus_TCP_Slave",
                    "parentSuite2_ExchUtils_Modbus_TCP_Slave",
                    "suiteЧтение_Запись",
                    "subSuiteРазрешенные_переменные",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("MbTcpSlave.cpu850_Red_ReadWrite", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 275
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 276
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 277
 testRunner.Given("Связь с устройством \'CPU850_RED\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 278
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 279
 testRunner.Given("Связь с устройством \'ModbusTcp_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 280
 testRunner.Then("Проверка чтения и записи значений \'BOOL Values\' в \'cpu850_Red_BOOL_external\'.\'Зна" +
                        "чение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 281
 testRunner.Then("Проверка чтения и записи значений \'BYTE AnyValues\' в \'cpu850_Red_BYTE_external\'.\'" +
                        "Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 282
 testRunner.Then("Проверка чтения и записи значений \'WORD AnyValues\' в \'cpu850_Red_WORD_external\'.\'" +
                        "Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 283
 testRunner.Then("Проверка чтения и записи значений \'DWORD AnyValues\' в \'cpu850_Red_DWORD_external\'" +
                        ".\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 284
 testRunner.Then("Проверка чтения и записи значений \'DWORD AnyValues\' в \'cpu850_Red_LWORD_external\'" +
                        ".\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 285
 testRunner.Then("Проверка чтения и записи значений \'SINT AnyValues\' в \'cpu850_Red_SINT_external\'.\'" +
                        "Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 286
 testRunner.Then("Проверка чтения и записи значений \'INT AnyValues\' в \'cpu850_Red_INT_external\'.\'Зн" +
                        "ачение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 287
 testRunner.Then("Проверка чтения и записи значений \'DINT AnyValues\' в \'cpu850_Red_DINT_external\'.\'" +
                        "Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 288
 testRunner.Then("Проверка чтения и записи значений \'DINT AnyValues\' в \'cpu850_Red_LINT_external\'.\'" +
                        "Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 289
 testRunner.Then("Проверка чтения и записи значений \'USINT AnyValues\' в \'cpu850_Red_USINT_external\'" +
                        ".\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 290
 testRunner.Then("Проверка чтения и записи значений \'UINT AnyValues\' в \'cpu850_Red_UINT_external\'.\'" +
                        "Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 291
 testRunner.Then("Проверка чтения и записи значений \'UDINT AnyValues\' в \'cpu850_Red_UDINT_external\'" +
                        ".\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 292
 testRunner.Then("Проверка чтения и записи значений \'UDINT AnyValues\' в \'cpu850_Red_ULINT_external\'" +
                        ".\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 293
 testRunner.Then("Проверка чтения и записи значений \'REAL AnyValues\' в \'cpu850_Red_REAL_external\'.\'" +
                        "Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 294
 testRunner.Then("Проверка чтения и записи значений \'LREAL AnyValues\' в \'cpu850_Red_LREAL_external\'" +
                        ".\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 295
 testRunner.Then("Проверка чтения и записи значений \'TIME AnyValues\' в \'cpu850_Red_TIME_external\'.\'" +
                        "Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 296
 testRunner.Then("Проверка чтения и записи значений \'DATE AnyValues\' в \'cpu850_Red_DATE_external\'.\'" +
                        "Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("MbTcpSlave.cpu850_Red_WiteList")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("StoryModbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_Modbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteЗапись_запрещена")]
        public void MbTcpSlave_Cpu850_Red_WiteList()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "StoryModbus_TCP_Slave",
                    "parentSuite2_ExchUtils_Modbus_TCP_Slave",
                    "suiteЧтение_Запись",
                    "subSuiteЗапись_запрещена"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("MbTcpSlave.cpu850_Red_WiteList", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 301
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 302
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 303
 testRunner.Given("Связь с устройством \'CPU850_RED\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 304
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 305
 testRunner.Given("Связь с устройством \'ModbusTcp_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 306
 testRunner.Then("Проверка записи \'cpu850_Red_BOOL_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 307
 testRunner.Then("Проверка записи \'cpu850_Red_BYTE_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 308
 testRunner.Then("Проверка записи \'cpu850_Red_WORD_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 309
 testRunner.Then("Проверка записи \'cpu850_Red_DWORD_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 310
 testRunner.Then("Проверка записи \'cpu850_Red_LWORD_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 311
 testRunner.Then("Проверка записи \'cpu850_Red_SINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 312
 testRunner.Then("Проверка записи \'cpu850_Red_INT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 313
 testRunner.Then("Проверка записи \'cpu850_Red_DINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 314
 testRunner.Then("Проверка записи \'cpu850_Red_LINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 315
 testRunner.Then("Проверка записи \'cpu850_Red_USINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 316
 testRunner.Then("Проверка записи \'cpu850_Red_UINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 317
 testRunner.Then("Проверка записи \'cpu850_Red_UDINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 318
 testRunner.Then("Проверка записи \'cpu850_Red_ULINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 319
 testRunner.Then("Проверка записи \'cpu850_Red_REAL_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 320
 testRunner.Then("Проверка записи \'cpu850_Red_LREAL_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 321
 testRunner.Then("Проверка записи \'cpu850_Red_TIME_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 322
 testRunner.Then("Проверка записи \'cpu850_Red_DATE_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("MbTcpSlave.GwEx_GoodQual")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("StoryModbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_Modbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void MbTcpSlave_GwEx_GoodQual()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicПроверка_Quality",
                    "StoryModbus_TCP_Slave",
                    "parentSuite2_ExchUtils_Modbus_TCP_Slave",
                    "suiteПроверка_Quality",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("MbTcpSlave.GwEx_GoodQual", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 328
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 329
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 330
 testRunner.Given("Связь с устройством \'GwExch_v1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 331
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 332
 testRunner.Given("Связь с устройством \'ModbusTcp_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 333
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE_BOOL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 334
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE_BYTE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 335
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE_WORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 336
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE_DWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 337
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE_LWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 338
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE_SINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 339
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE_INT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 340
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE_DINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 341
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE_LINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 342
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE_USINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 343
 testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE_UINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 344
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE_UDINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 345
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE_ULINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 346
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE_REAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 347
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE_LREAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 348
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE_TIME_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 349
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE_DATE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("MbTcpSlave.GwEx_ReadWrite")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("StoryModbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_Modbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteРазрешенные_переменные")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void MbTcpSlave_GwEx_ReadWrite()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "StoryModbus_TCP_Slave",
                    "parentSuite2_ExchUtils_Modbus_TCP_Slave",
                    "suiteЧтение_Запись",
                    "subSuiteРазрешенные_переменные",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("MbTcpSlave.GwEx_ReadWrite", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 355
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 356
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 357
 testRunner.Given("Связь с устройством \'GwExch_v1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 358
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 359
 testRunner.Given("Связь с устройством \'ModbusTcp_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 360
 testRunner.Then("Проверка чтения и записи значений \'BOOL Values\' в \'GwE_BOOL_external\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 361
 testRunner.Then("Проверка чтения и записи значений \'BYTE AnyValues\' в \'GwE_BYTE_external\'.\'Значени" +
                        "е\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 362
 testRunner.Then("Проверка чтения и записи значений \'WORD AnyValues\' в \'GwE_WORD_external\'.\'Значени" +
                        "е\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 363
 testRunner.Then("Проверка чтения и записи значений \'DWORD AnyValues\' в \'GwE_DWORD_external\'.\'Значе" +
                        "ние\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 364
 testRunner.Then("Проверка чтения и записи значений \'DWORD AnyValues\' в \'GwE_LWORD_external\'.\'Значе" +
                        "ние\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 365
 testRunner.Then("Проверка чтения и записи значений \'SINT AnyValues\' в \'GwE_SINT_external\'.\'Значени" +
                        "е\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 366
 testRunner.Then("Проверка чтения и записи значений \'INT AnyValues\' в \'GwE_INT_external\'.\'Значение\'" +
                        "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 367
 testRunner.Then("Проверка чтения и записи значений \'DINT AnyValues\' в \'GwE_DINT_external\'.\'Значени" +
                        "е\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 368
 testRunner.Then("Проверка чтения и записи значений \'DINT AnyValues\' в \'GwE_LINT_external\'.\'Значени" +
                        "е\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 369
 testRunner.Then("Проверка чтения и записи значений \'USINT AnyValues\' в \'GwE_USINT_external\'.\'Значе" +
                        "ние\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 370
 testRunner.Then("Проверка чтения и записи значений \'UINT AnyValues\' в \'GwE_UINT_external\'.\'Значени" +
                        "е\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 371
 testRunner.Then("Проверка чтения и записи значений \'UDINT AnyValues\' в \'GwE_UDINT_external\'.\'Значе" +
                        "ние\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 372
 testRunner.Then("Проверка чтения и записи значений \'UDINT AnyValues\' в \'GwE_ULINT_external\'.\'Значе" +
                        "ние\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 373
 testRunner.Then("Проверка чтения и записи значений \'REAL AnyValues\' в \'GwE_REAL_external\'.\'Значени" +
                        "е\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 374
 testRunner.Then("Проверка чтения и записи значений \'LREAL AnyValues\' в \'GwE_LREAL_external\'.\'Значе" +
                        "ние\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 375
 testRunner.Then("Проверка чтения и записи значений \'TIME AnyValues\' в \'GwE_TIME_external\'.\'Значени" +
                        "е\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 376
 testRunner.Then("Проверка чтения и записи значений \'DATE AnyValues\' в \'GwE_DATE_external\'.\'Значени" +
                        "е\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("MbTcpSlave.GwEx_WiteList")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("StoryModbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_Modbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteЗапись_запрещена")]
        public void MbTcpSlave_GwEx_WiteList()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "StoryModbus_TCP_Slave",
                    "parentSuite2_ExchUtils_Modbus_TCP_Slave",
                    "suiteЧтение_Запись",
                    "subSuiteЗапись_запрещена"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("MbTcpSlave.GwEx_WiteList", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 381
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 382
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 383
 testRunner.Given("Связь с устройством \'GwExch_v1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 384
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 385
 testRunner.Given("Связь с устройством \'ModbusTcp_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 386
 testRunner.Then("Проверка записи \'GwE_BOOL_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 387
 testRunner.Then("Проверка записи \'GwE_BYTE_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 388
 testRunner.Then("Проверка записи \'GwE_WORD_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 389
 testRunner.Then("Проверка записи \'GwE_DWORD_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 390
 testRunner.Then("Проверка записи \'GwE_LWORD_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 391
 testRunner.Then("Проверка записи \'GwE_SINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 392
 testRunner.Then("Проверка записи \'GwE_INT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 393
 testRunner.Then("Проверка записи \'GwE_DINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 394
 testRunner.Then("Проверка записи \'GwE_LINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 395
 testRunner.Then("Проверка записи \'GwE_USINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 396
 testRunner.Then("Проверка записи \'GwE_UINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 397
 testRunner.Then("Проверка записи \'GwE_UDINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 398
 testRunner.Then("Проверка записи \'GwE_ULINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 399
 testRunner.Then("Проверка записи \'GwE_REAL_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 400
 testRunner.Then("Проверка записи \'GwE_LREAL_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 401
 testRunner.Then("Проверка записи \'GwE_TIME_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 402
 testRunner.Then("Проверка записи \'GwE_DATE_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("MbTcpSlave.GwEx2_GoodQual")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("StoryModbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_Modbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void MbTcpSlave_GwEx2_GoodQual()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicПроверка_Quality",
                    "StoryModbus_TCP_Slave",
                    "parentSuite2_ExchUtils_Modbus_TCP_Slave",
                    "suiteПроверка_Quality",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("MbTcpSlave.GwEx2_GoodQual", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 408
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 409
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 410
 testRunner.Given("Связь с устройством \'GwExch_2_v1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 411
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 412
 testRunner.Given("Связь с устройством \'ModbusTcp_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 413
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_BOOL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 414
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_BYTE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 415
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_WORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 416
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_DWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 417
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_LWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 418
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_SINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 419
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_INT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 420
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_DINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 421
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_LINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 422
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_USINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 423
 testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_UINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 424
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_UDINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 425
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_ULINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 426
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_REAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 427
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_LREAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 428
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_TIME_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 429
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_DATE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("MbTcpSlave.GwEx2_ReadWrite")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("StoryModbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_Modbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteРазрешенные_переменные")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void MbTcpSlave_GwEx2_ReadWrite()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "StoryModbus_TCP_Slave",
                    "parentSuite2_ExchUtils_Modbus_TCP_Slave",
                    "suiteЧтение_Запись",
                    "subSuiteРазрешенные_переменные",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("MbTcpSlave.GwEx2_ReadWrite", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 435
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 436
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 437
 testRunner.Given("Связь с устройством \'GwExch_2_v1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 438
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 439
 testRunner.Given("Связь с устройством \'ModbusTcp_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 440
 testRunner.Then("Проверка чтения и записи значений \'BOOL Values\' в \'GwE2_BOOL_external\'.\'Значение\'" +
                        "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 441
 testRunner.Then("Проверка чтения и записи значений \'BYTE AnyValues\' в \'GwE2_BYTE_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 442
 testRunner.Then("Проверка чтения и записи значений \'WORD AnyValues\' в \'GwE2_WORD_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 443
 testRunner.Then("Проверка чтения и записи значений \'DWORD AnyValues\' в \'GwE2_DWORD_external\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 444
 testRunner.Then("Проверка чтения и записи значений \'DWORD AnyValues\' в \'GwE2_LWORD_external\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 445
 testRunner.Then("Проверка чтения и записи значений \'SINT AnyValues\' в \'GwE2_SINT_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 446
 testRunner.Then("Проверка чтения и записи значений \'INT AnyValues\' в \'GwE2_INT_external\'.\'Значение" +
                        "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 447
 testRunner.Then("Проверка чтения и записи значений \'DINT AnyValues\' в \'GwE2_DINT_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 448
 testRunner.Then("Проверка чтения и записи значений \'DINT AnyValues\' в \'GwE2_LINT_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 449
 testRunner.Then("Проверка чтения и записи значений \'USINT AnyValues\' в \'GwE2_USINT_external\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 450
 testRunner.Then("Проверка чтения и записи значений \'UINT AnyValues\' в \'GwE2_UINT_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 451
 testRunner.Then("Проверка чтения и записи значений \'UDINT AnyValues\' в \'GwE2_UDINT_external\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 452
 testRunner.Then("Проверка чтения и записи значений \'UDINT AnyValues\' в \'GwE2_ULINT_external\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 453
 testRunner.Then("Проверка чтения и записи значений \'REAL AnyValues\' в \'GwE2_REAL_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 454
 testRunner.Then("Проверка чтения и записи значений \'LREAL AnyValues\' в \'GwE2_LREAL_external\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 455
 testRunner.Then("Проверка чтения и записи значений \'TIME AnyValues\' в \'GwE2_TIME_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 456
 testRunner.Then("Проверка чтения и записи значений \'DATE AnyValues\' в \'GwE2_DATE_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("MbTcpSlave.GwEx2_WiteList")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("StoryModbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_Modbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteЗапись_запрещена")]
        public void MbTcpSlave_GwEx2_WiteList()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "StoryModbus_TCP_Slave",
                    "parentSuite2_ExchUtils_Modbus_TCP_Slave",
                    "suiteЧтение_Запись",
                    "subSuiteЗапись_запрещена"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("MbTcpSlave.GwEx2_WiteList", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 461
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 462
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 463
 testRunner.Given("Связь с устройством \'GwExch_2_v1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 464
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 465
 testRunner.Given("Связь с устройством \'ModbusTcp_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 466
 testRunner.Then("Проверка записи \'GwE2_BOOL_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 467
 testRunner.Then("Проверка записи \'GwE2_BYTE_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 468
 testRunner.Then("Проверка записи \'GwE2_WORD_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 469
 testRunner.Then("Проверка записи \'GwE2_DWORD_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 470
 testRunner.Then("Проверка записи \'GwE2_LWORD_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 471
 testRunner.Then("Проверка записи \'GwE2_SINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 472
 testRunner.Then("Проверка записи \'GwE2_INT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 473
 testRunner.Then("Проверка записи \'GwE2_DINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 474
 testRunner.Then("Проверка записи \'GwE2_LINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 475
 testRunner.Then("Проверка записи \'GwE2_USINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 476
 testRunner.Then("Проверка записи \'GwE2_UINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 477
 testRunner.Then("Проверка записи \'GwE2_UDINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 478
 testRunner.Then("Проверка записи \'GwE2_ULINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 479
 testRunner.Then("Проверка записи \'GwE2_REAL_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 480
 testRunner.Then("Проверка записи \'GwE2_LREAL_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 481
 testRunner.Then("Проверка записи \'GwE2_TIME_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 482
 testRunner.Then("Проверка записи \'GwE2_DATE_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("MbTcpSlave.OpcDa_GoodQual")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("StoryModbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_Modbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void MbTcpSlave_OpcDa_GoodQual()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicПроверка_Quality",
                    "StoryModbus_TCP_Slave",
                    "parentSuite2_ExchUtils_Modbus_TCP_Slave",
                    "suiteПроверка_Quality",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("MbTcpSlave.OpcDa_GoodQual", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 488
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 489
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 490
 testRunner.Given("Связь с устройством \'OpcDa_Subs\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 491
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 492
 testRunner.Given("Связь с устройством \'ModbusTcp_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 493
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcDa_BOOL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 494
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcDa_BYTE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 495
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcDa_WORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 496
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcDa_DWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 497
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcDa_LWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 498
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcDa_SINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 499
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcDa_INT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 500
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcDa_DINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 501
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcDa_LINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 502
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcDa_USINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 503
 testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcDa_UINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 504
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcDa_UDINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 505
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcDa_ULINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 506
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcDa_REAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 507
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcDa_LREAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 508
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcDa_TIME_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 509
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcDa_DATE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("MbTcpSlave.OpcDa_ReadWrite")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("StoryModbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_Modbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteРазрешенные_переменные")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void MbTcpSlave_OpcDa_ReadWrite()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "StoryModbus_TCP_Slave",
                    "parentSuite2_ExchUtils_Modbus_TCP_Slave",
                    "suiteЧтение_Запись",
                    "subSuiteРазрешенные_переменные",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("MbTcpSlave.OpcDa_ReadWrite", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 515
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 516
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 517
 testRunner.Given("Связь с устройством \'OpcDa_Subs\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 518
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 519
 testRunner.Given("Связь с устройством \'ModbusTcp_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 520
 testRunner.Then("Проверка чтения и записи значений \'BOOL Values\' в \'OpcDa_BOOL_external\'.\'Значение" +
                        "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 521
 testRunner.Then("Проверка чтения и записи значений \'BYTE AnyValues\' в \'OpcDa_BYTE_external\'.\'Значе" +
                        "ние\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 522
 testRunner.Then("Проверка чтения и записи значений \'WORD AnyValues\' в \'OpcDa_WORD_external\'.\'Значе" +
                        "ние\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 523
 testRunner.Then("Проверка чтения и записи значений \'DWORD AnyValues\' в \'OpcDa_DWORD_external\'.\'Зна" +
                        "чение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 524
 testRunner.Then("Проверка чтения и записи значений \'DWORD AnyValues\' в \'OpcDa_LWORD_external\'.\'Зна" +
                        "чение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 525
 testRunner.Then("Проверка чтения и записи значений \'SINT AnyValues\' в \'OpcDa_SINT_external\'.\'Значе" +
                        "ние\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 526
 testRunner.Then("Проверка чтения и записи значений \'INT AnyValues\' в \'OpcDa_INT_external\'.\'Значени" +
                        "е\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 527
 testRunner.Then("Проверка чтения и записи значений \'DINT AnyValues\' в \'OpcDa_DINT_external\'.\'Значе" +
                        "ние\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 528
 testRunner.Then("Проверка чтения и записи значений \'DINT AnyValues\' в \'OpcDa_LINT_external\'.\'Значе" +
                        "ние\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 529
 testRunner.Then("Проверка чтения и записи значений \'USINT AnyValues\' в \'OpcDa_USINT_external\'.\'Зна" +
                        "чение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 530
 testRunner.Then("Проверка чтения и записи значений \'UINT AnyValues\' в \'OpcDa_UINT_external\'.\'Значе" +
                        "ние\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 531
 testRunner.Then("Проверка чтения и записи значений \'UDINT AnyValues\' в \'OpcDa_UDINT_external\'.\'Зна" +
                        "чение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 532
 testRunner.Then("Проверка чтения и записи значений \'UDINT AnyValues\' в \'OpcDa_ULINT_external\'.\'Зна" +
                        "чение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 533
 testRunner.Then("Проверка чтения и записи значений \'REAL AnyValues\' в \'OpcDa_REAL_external\'.\'Значе" +
                        "ние\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 534
 testRunner.Then("Проверка чтения и записи значений \'LREAL AnyValues\' в \'OpcDa_LREAL_external\'.\'Зна" +
                        "чение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 535
 testRunner.Then("Проверка чтения и записи значений \'TIME AnyValues\' в \'OpcDa_TIME_external\'.\'Значе" +
                        "ние\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 536
 testRunner.Then("Проверка чтения и записи значений \'DATE AnyValues\' в \'OpcDa_DATE_external\'.\'Значе" +
                        "ние\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("MbTcpSlave.OpcDa_WiteList")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("StoryModbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_Modbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteЗапись_запрещена")]
        public void MbTcpSlave_OpcDa_WiteList()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "StoryModbus_TCP_Slave",
                    "parentSuite2_ExchUtils_Modbus_TCP_Slave",
                    "suiteЧтение_Запись",
                    "subSuiteЗапись_запрещена"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("MbTcpSlave.OpcDa_WiteList", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 541
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 542
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 543
 testRunner.Given("Связь с устройством \'OpcDa_Subs\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 544
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 545
 testRunner.Given("Связь с устройством \'ModbusTcp_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 546
 testRunner.Then("Проверка записи \'OpcDa_BOOL_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 547
 testRunner.Then("Проверка записи \'OpcDa_BYTE_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 548
 testRunner.Then("Проверка записи \'OpcDa_WORD_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 549
 testRunner.Then("Проверка записи \'OpcDa_DWORD_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 550
 testRunner.Then("Проверка записи \'OpcDa_LWORD_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 551
 testRunner.Then("Проверка записи \'OpcDa_SINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 552
 testRunner.Then("Проверка записи \'OpcDa_INT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 553
 testRunner.Then("Проверка записи \'OpcDa_DINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 554
 testRunner.Then("Проверка записи \'OpcDa_LINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 555
 testRunner.Then("Проверка записи \'OpcDa_USINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 556
 testRunner.Then("Проверка записи \'OpcDa_UINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 557
 testRunner.Then("Проверка записи \'OpcDa_UDINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 558
 testRunner.Then("Проверка записи \'OpcDa_ULINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 559
 testRunner.Then("Проверка записи \'OpcDa_REAL_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 560
 testRunner.Then("Проверка записи \'OpcDa_LREAL_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 561
 testRunner.Then("Проверка записи \'OpcDa_TIME_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 562
 testRunner.Then("Проверка записи \'OpcDa_DATE_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("MbTcpSlave.OpcProxy_GoodQual")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("StoryModbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_Modbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void MbTcpSlave_OpcProxy_GoodQual()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicПроверка_Quality",
                    "StoryModbus_TCP_Slave",
                    "parentSuite2_ExchUtils_Modbus_TCP_Slave",
                    "suiteПроверка_Quality",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("MbTcpSlave.OpcProxy_GoodQual", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 568
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 569
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 570
 testRunner.Given("Связь с устройством \'OpcDaProxy_Subs\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 571
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 572
 testRunner.Given("Связь с устройством \'ModbusTcp_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 573
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcProxy_BOOL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 574
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcProxy_BYTE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 575
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcProxy_WORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 576
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcProxy_DWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 577
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcProxy_LWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 578
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcProxy_SINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 579
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcProxy_INT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 580
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcProxy_DINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 581
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcProxy_LINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 582
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcProxy_USINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 583
 testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcProxy_UINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 584
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcProxy_UDINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 585
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcProxy_ULINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 586
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcProxy_REAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 587
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcProxy_LREAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 588
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcProxy_TIME_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 589
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcProxy_DATE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("MbTcpSlave.OpcProxy_ReadWrite")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("StoryModbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_Modbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteРазрешенные_переменные")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void MbTcpSlave_OpcProxy_ReadWrite()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "StoryModbus_TCP_Slave",
                    "parentSuite2_ExchUtils_Modbus_TCP_Slave",
                    "suiteЧтение_Запись",
                    "subSuiteРазрешенные_переменные",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("MbTcpSlave.OpcProxy_ReadWrite", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 595
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 596
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 597
 testRunner.Given("Связь с устройством \'OpcDaProxy_Subs\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 598
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 599
 testRunner.Given("Связь с устройством \'ModbusTcp_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 600
 testRunner.Then("Проверка чтения и записи значений \'BOOL Values\' в \'OpcProxy_BOOL_external\'.\'Значе" +
                        "ние\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 601
 testRunner.Then("Проверка чтения и записи значений \'BYTE AnyValues\' в \'OpcProxy_BYTE_external\'.\'Зн" +
                        "ачение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 602
 testRunner.Then("Проверка чтения и записи значений \'WORD AnyValues\' в \'OpcProxy_WORD_external\'.\'Зн" +
                        "ачение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 603
 testRunner.Then("Проверка чтения и записи значений \'DWORD AnyValues\' в \'OpcProxy_DWORD_external\'.\'" +
                        "Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 604
 testRunner.Then("Проверка чтения и записи значений \'DWORD AnyValues\' в \'OpcProxy_LWORD_external\'.\'" +
                        "Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 605
 testRunner.Then("Проверка чтения и записи значений \'SINT AnyValues\' в \'OpcProxy_SINT_external\'.\'Зн" +
                        "ачение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 606
 testRunner.Then("Проверка чтения и записи значений \'INT AnyValues\' в \'OpcProxy_INT_external\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 607
 testRunner.Then("Проверка чтения и записи значений \'DINT AnyValues\' в \'OpcProxy_DINT_external\'.\'Зн" +
                        "ачение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 608
 testRunner.Then("Проверка чтения и записи значений \'DINT AnyValues\' в \'OpcProxy_LINT_external\'.\'Зн" +
                        "ачение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 609
 testRunner.Then("Проверка чтения и записи значений \'USINT AnyValues\' в \'OpcProxy_USINT_external\'.\'" +
                        "Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 610
 testRunner.Then("Проверка чтения и записи значений \'UINT AnyValues\' в \'OpcProxy_UINT_external\'.\'Зн" +
                        "ачение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 611
 testRunner.Then("Проверка чтения и записи значений \'UDINT AnyValues\' в \'OpcProxy_UDINT_external\'.\'" +
                        "Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 612
 testRunner.Then("Проверка чтения и записи значений \'UDINT AnyValues\' в \'OpcProxy_ULINT_external\'.\'" +
                        "Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 613
 testRunner.Then("Проверка чтения и записи значений \'REAL AnyValues\' в \'OpcProxy_REAL_external\'.\'Зн" +
                        "ачение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 614
 testRunner.Then("Проверка чтения и записи значений \'LREAL AnyValues\' в \'OpcProxy_LREAL_external\'.\'" +
                        "Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 615
 testRunner.Then("Проверка чтения и записи значений \'TIME AnyValues\' в \'OpcProxy_TIME_external\'.\'Зн" +
                        "ачение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 616
 testRunner.Then("Проверка чтения и записи значений \'DATE AnyValues\' в \'OpcProxy_DATE_external\'.\'Зн" +
                        "ачение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("MbTcpSlave.OpcProxy_WiteList")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("StoryModbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_Modbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteЗапись_запрещена")]
        public void MbTcpSlave_OpcProxy_WiteList()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "StoryModbus_TCP_Slave",
                    "parentSuite2_ExchUtils_Modbus_TCP_Slave",
                    "suiteЧтение_Запись",
                    "subSuiteЗапись_запрещена"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("MbTcpSlave.OpcProxy_WiteList", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 621
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 622
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 623
 testRunner.Given("Связь с устройством \'OpcDaProxy_Subs\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 624
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 625
 testRunner.Given("Связь с устройством \'ModbusTcp_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 626
 testRunner.Then("Проверка записи \'OpcProxy_BOOL_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 627
 testRunner.Then("Проверка записи \'OpcProxy_BYTE_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 628
 testRunner.Then("Проверка записи \'OpcProxy_WORD_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 629
 testRunner.Then("Проверка записи \'OpcProxy_DWORD_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 630
 testRunner.Then("Проверка записи \'OpcProxy_LWORD_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 631
 testRunner.Then("Проверка записи \'OpcProxy_SINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 632
 testRunner.Then("Проверка записи \'OpcProxy_INT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 633
 testRunner.Then("Проверка записи \'OpcProxy_DINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 634
 testRunner.Then("Проверка записи \'OpcProxy_LINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 635
 testRunner.Then("Проверка записи \'OpcProxy_USINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 636
 testRunner.Then("Проверка записи \'OpcProxy_UINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 637
 testRunner.Then("Проверка записи \'OpcProxy_UDINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 638
 testRunner.Then("Проверка записи \'OpcProxy_ULINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 639
 testRunner.Then("Проверка записи \'OpcProxy_REAL_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 640
 testRunner.Then("Проверка записи \'OpcProxy_LREAL_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 641
 testRunner.Then("Проверка записи \'OpcProxy_TIME_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 642
 testRunner.Then("Проверка записи \'OpcProxy_DATE_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("MbTcpSlave.OpcUA_Params_GoodQual")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("StoryModbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_Modbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void MbTcpSlave_OpcUA_Params_GoodQual()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicПроверка_Quality",
                    "StoryModbus_TCP_Slave",
                    "parentSuite2_ExchUtils_Modbus_TCP_Slave",
                    "suiteПроверка_Quality",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("MbTcpSlave.OpcUA_Params_GoodQual", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 648
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 649
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 650
 testRunner.Given("Связь с устройством \'OpcUa_ASt5000_Lin\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 651
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 652
 testRunner.Given("Связь с устройством \'ModbusTcp_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 653
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcUa_PARAM_BOOL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 654
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcUa_PARAM_BYTE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 655
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcUa_PARAM_WORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 656
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcUa_PARAM_DWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 657
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcUa_PARAM_LWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 658
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcUa_PARAM_SINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 659
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcUa_PARAM_INT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 660
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcUa_PARAM_DINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 661
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcUa_PARAM_LINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 662
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcUa_PARAM_USINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 663
 testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcUa_PARAM_UINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 664
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcUa_PARAM_UDINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 665
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcUa_PARAM_ULINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 666
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcUa_PARAM_REAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 667
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcUa_PARAM_LREAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 668
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'OpcUa_PARAM_TIME_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("MbTcpSlave.OpcUA_Params_ReadWrite")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("StoryModbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_Modbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteРазрешенные_переменные")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void MbTcpSlave_OpcUA_Params_ReadWrite()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "StoryModbus_TCP_Slave",
                    "parentSuite2_ExchUtils_Modbus_TCP_Slave",
                    "suiteЧтение_Запись",
                    "subSuiteРазрешенные_переменные",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("MbTcpSlave.OpcUA_Params_ReadWrite", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 675
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 676
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 677
 testRunner.Given("Связь с устройством \'OpcUa_ASt5000_Lin\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 678
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 679
 testRunner.Given("Связь с устройством \'ModbusTcp_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 680
 testRunner.Then("Проверка чтения и записи значений \'BOOL Values\' в \'OpcUa_PARAM_BOOL_external\'.\'Зн" +
                        "ачение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 681
 testRunner.Then("Проверка чтения и записи значений \'BYTE AnyValues\' в \'OpcUa_PARAM_BYTE_external\'." +
                        "\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 682
 testRunner.Then("Проверка чтения и записи значений \'WORD AnyValues\' в \'OpcUa_PARAM_WORD_external\'." +
                        "\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 683
 testRunner.Then("Проверка чтения и записи значений \'DWORD AnyValues\' в \'OpcUa_PARAM_DWORD_external" +
                        "\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 684
 testRunner.Then("Проверка чтения и записи значений \'DWORD AnyValues\' в \'OpcUa_PARAM_LWORD_external" +
                        "\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 685
 testRunner.Then("Проверка чтения и записи значений \'SINT AnyValues\' в \'OpcUa_PARAM_SINT_external\'." +
                        "\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 686
 testRunner.Then("Проверка чтения и записи значений \'INT AnyValues\' в \'OpcUa_PARAM_INT_external\'.\'З" +
                        "начение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 687
 testRunner.Then("Проверка чтения и записи значений \'DINT AnyValues\' в \'OpcUa_PARAM_DINT_external\'." +
                        "\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 688
 testRunner.Then("Проверка чтения и записи значений \'DINT AnyValues\' в \'OpcUa_PARAM_LINT_external\'." +
                        "\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 689
 testRunner.Then("Проверка чтения и записи значений \'USINT AnyValues\' в \'OpcUa_PARAM_USINT_external" +
                        "\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 690
 testRunner.Then("Проверка чтения и записи значений \'UINT AnyValues\' в \'OpcUa_PARAM_UINT_external\'." +
                        "\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 691
 testRunner.Then("Проверка чтения и записи значений \'UDINT AnyValues\' в \'OpcUa_PARAM_UDINT_external" +
                        "\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 692
 testRunner.Then("Проверка чтения и записи значений \'UDINT AnyValues\' в \'OpcUa_PARAM_ULINT_external" +
                        "\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 693
 testRunner.Then("Проверка чтения и записи значений \'REAL AnyValues\' в \'OpcUa_PARAM_REAL_external\'." +
                        "\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 694
 testRunner.Then("Проверка чтения и записи значений \'LREAL AnyValues\' в \'OpcUa_PARAM_LREAL_external" +
                        "\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 695
 testRunner.Then("Проверка чтения и записи значений \'TIME AnyValues\' в \'OpcUa_PARAM_TIME_external\'." +
                        "\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("MbTcpSlave.OpcUA_Params_WiteList")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("StoryModbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_Modbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteЗапись_запрещена")]
        public void MbTcpSlave_OpcUA_Params_WiteList()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "StoryModbus_TCP_Slave",
                    "parentSuite2_ExchUtils_Modbus_TCP_Slave",
                    "suiteЧтение_Запись",
                    "subSuiteЗапись_запрещена"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("MbTcpSlave.OpcUA_Params_WiteList", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 701
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 702
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 703
 testRunner.Given("Связь с устройством \'OpcUa_ASt5000_Lin\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 704
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 705
 testRunner.Given("Связь с устройством \'ModbusTcp_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 706
 testRunner.Then("Проверка записи \'OpcUa_PARAM_BOOL_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 707
 testRunner.Then("Проверка записи \'OpcUa_PARAM_BYTE_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 708
 testRunner.Then("Проверка записи \'OpcUa_PARAM_WORD_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 709
 testRunner.Then("Проверка записи \'OpcUa_PARAM_DWORD_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 710
 testRunner.Then("Проверка записи \'OpcUa_PARAM_LWORD_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 711
 testRunner.Then("Проверка записи \'OpcUa_PARAM_SINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 712
 testRunner.Then("Проверка записи \'OpcUa_PARAM_INT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 713
 testRunner.Then("Проверка записи \'OpcUa_PARAM_DINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 714
 testRunner.Then("Проверка записи \'OpcUa_PARAM_LINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 715
 testRunner.Then("Проверка записи \'OpcUa_PARAM_USINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 716
 testRunner.Then("Проверка записи \'OpcUa_PARAM_UINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 717
 testRunner.Then("Проверка записи \'OpcUa_PARAM_UDINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 718
 testRunner.Then("Проверка записи \'OpcUa_PARAM_ULINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 719
 testRunner.Then("Проверка записи \'OpcUa_PARAM_REAL_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 720
 testRunner.Then("Проверка записи \'OpcUa_PARAM_LREAL_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 721
 testRunner.Then("Проверка записи \'OpcUa_PARAM_TIME_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("MbTcpSlave.Snmp_GoodQual")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("StoryModbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_Modbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void MbTcpSlave_Snmp_GoodQual()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicПроверка_Quality",
                    "StoryModbus_TCP_Slave",
                    "parentSuite2_ExchUtils_Modbus_TCP_Slave",
                    "suiteПроверка_Quality",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("MbTcpSlave.Snmp_GoodQual", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 728
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 729
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 730
 testRunner.Given("Связь с устройством \'Snmp_v2_NetSw28\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 731
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 732
 testRunner.Given("Связь с устройством \'ModbusTcp_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 736
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'SnmpV2_UpTime\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 737
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'SnmpV2_Speed_09\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 738
 testRunner.Then("Проверка Runtime качества \'Good\' переменной \'SnmpV2_InOctets_09\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 739
 testRunner.Then("Проверка Runtime качества \'Good\' переменной \'SnmpV2_OutOctets_09\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 740
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'SnmpV2_OpStat_09\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 741
 testRunner.Then("Проверка Runtime качества \'Good\' переменной \'SnmpV2_Speed_10\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 742
 testRunner.Then("Проверка Runtime качества \'Good\' переменной \'SnmpV2_InOctets_10\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 743
 testRunner.Then("Проверка Runtime качества \'Good\' переменной \'SnmpV2_OutOctets_10\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 744
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'SnmpV2_OpStat_10\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
