// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ExchangeUtils.Tests.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("DeviceEvents")]
    [NUnit.Framework.IgnoreAttribute("Ignored feature")]
    public partial class DeviceEventsFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = new string[] {
                "ignore"};
        
#line 1 "SystemEvents.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "DeviceEvents", null, ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("SysEvents")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("EpicДиагностика_Связи")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_События_Диагностики")]
        [NUnit.Framework.CategoryAttribute("suiteSysEvents")]
        [NUnit.Framework.CategoryAttribute("package_Зеркало_Системеные_События_Последн")]
        [NUnit.Framework.TestCaseAttribute("cpu715_Mono", null)]
        [NUnit.Framework.TestCaseAttribute("cpu715_Red", null)]
        [NUnit.Framework.TestCaseAttribute("cpu715_Cluster", null)]
        [NUnit.Framework.TestCaseAttribute("CPU850_RED", null)]
        [NUnit.Framework.TestCaseAttribute("GwExch_v1", null)]
        [NUnit.Framework.TestCaseAttribute("GwExch_v2", null)]
        [NUnit.Framework.TestCaseAttribute("GwExch_2_v1", null)]
        [NUnit.Framework.TestCaseAttribute("GwExch_2_v2", null)]
        [NUnit.Framework.TestCaseAttribute("VerProxy52_GE_v1", null)]
        [NUnit.Framework.TestCaseAttribute("VerProxy52_GE_v2", null)]
        [NUnit.Framework.TestCaseAttribute("VerProxy52_GE_2_v1", null)]
        [NUnit.Framework.TestCaseAttribute("VerProxy52_GE_2_v2", null)]
        [NUnit.Framework.TestCaseAttribute("Mb_Rtu11_1", null)]
        [NUnit.Framework.TestCaseAttribute("Mb_Rtu11_211", null)]
        [NUnit.Framework.TestCaseAttribute("Mb_Rtu12_1", null)]
        [NUnit.Framework.TestCaseAttribute("Mb_RoT40115_1", null)]
        [NUnit.Framework.TestCaseAttribute("Mb_RoT40115_211", null)]
        [NUnit.Framework.TestCaseAttribute("Mb_RoT40116_1", null)]
        [NUnit.Framework.TestCaseAttribute("Mb_Tcp502_1", null)]
        [NUnit.Framework.TestCaseAttribute("Mb_Tcp502_211", null)]
        [NUnit.Framework.TestCaseAttribute("Mb_Tcp552_1", null)]
        [NUnit.Framework.TestCaseAttribute("Mb_Udp602_1", null)]
        [NUnit.Framework.TestCaseAttribute("Mb_Udp602_211", null)]
        [NUnit.Framework.TestCaseAttribute("Mb_Udp662_1", null)]
        [NUnit.Framework.TestCaseAttribute("Mb2_Rtu21_1", null)]
        [NUnit.Framework.TestCaseAttribute("Mb2_Rtu21_211", null)]
        [NUnit.Framework.TestCaseAttribute("Mb2_Rtu22_1", null)]
        [NUnit.Framework.TestCaseAttribute("Mb2_RoT40215_1", null)]
        [NUnit.Framework.TestCaseAttribute("Mb2_RoT40215_211", null)]
        [NUnit.Framework.TestCaseAttribute("Mb2_RoT40216_1", null)]
        [NUnit.Framework.TestCaseAttribute("Mb2_Tcp522_1", null)]
        [NUnit.Framework.TestCaseAttribute("Mb2_Tcp522_2", null)]
        [NUnit.Framework.TestCaseAttribute("Mb2_Tcp522_211", null)]
        [NUnit.Framework.TestCaseAttribute("Mb2_Udp622_1", null)]
        [NUnit.Framework.TestCaseAttribute("Mb2_Udp622_2", null)]
        [NUnit.Framework.TestCaseAttribute("Mb2_Udp622_211", null)]
        [NUnit.Framework.TestCaseAttribute("OpcDa_Subs", null)]
        [NUnit.Framework.TestCaseAttribute("OpcDa_Async", null)]
        [NUnit.Framework.TestCaseAttribute("OpcDaProxy_Subs", null)]
        [NUnit.Framework.TestCaseAttribute("OpcDaProxy_Async", null)]
        [NUnit.Framework.TestCaseAttribute("OpcUa_ASt5000_Lin", null)]
        [NUnit.Framework.TestCaseAttribute("OpcUa_ASt5000_Red", null)]
        [NUnit.Framework.TestCaseAttribute("AA1E1Q05A1", null)]
        [NUnit.Framework.TestCaseAttribute("RzaTecon300", null)]
        [NUnit.Framework.TestCaseAttribute("iec104_sporadic", null)]
        [NUnit.Framework.TestCaseAttribute("Snmp_v1_NetSw27", null)]
        [NUnit.Framework.TestCaseAttribute("Snmp_v2_NetSw28", null)]
        [NUnit.Framework.TestCaseAttribute("Snmp_v3_NetSw27", null)]
        public void SysEvents(string dev, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "fromMirror",
                    "EpicДиагностика_Связи",
                    "parentSuite2_ExchUtils_События_Диагностики",
                    "suiteSysEvents",
                    "package_Зеркало_Системеные_События_Последн"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Dev", dev);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SysEvents", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 8
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 9
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 10
 testRunner.Given("Зеркало Шлюза \'MirrorWork\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 11
 testRunner.Given("Связь с устройством \'MirrorWork\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 12
 testRunner.Then(string.Format("Поверка Системных событий \'{0}\'", dev), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("DiagEvents_00")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("EpicДиагностика_Связи")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_События_Диагностики")]
        [NUnit.Framework.CategoryAttribute("suiteСобытия")]
        public void DiagEvents_00()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "EpicДиагностика_Связи",
                    "parentSuite2_ExchUtils_События_Диагностики",
                    "suiteСобытия"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("DiagEvents_00", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 67
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 68
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 69
 testRunner.Given("Зеркало Шлюза \'MirrorWork\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 70
 testRunner.Given("Связь с устройством \'MirrorWork\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 71
 testRunner.When("Получаю события группы \'Системные\' в новый буфер", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 72
 testRunner.When("Получаю события группы \'Аппаратные\' в буфер", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 73
 testRunner.When("Получаю события группы \'Диагностика ПТК\' в буфер", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("DiagEvents_01")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("EpicДиагностика_Связи")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_События_Диагностики")]
        [NUnit.Framework.CategoryAttribute("suiteСобытияНорм")]
        [NUnit.Framework.CategoryAttribute("package_Зеркало_Системеные_События_Все")]
        [NUnit.Framework.TestCaseAttribute("work", "Системные СОБЫТИЯ", "10001", null)]
        [NUnit.Framework.TestCaseAttribute("work", "Системные СОБЫТИЯ", "10002", null)]
        [NUnit.Framework.TestCaseAttribute("work", "Системные СОБЫТИЯ", "10012", null)]
        [NUnit.Framework.TestCaseAttribute("work", "Системные СОБЫТИЯ", "10013", null)]
        [NUnit.Framework.TestCaseAttribute("work", "Системные СОБЫТИЯ", "10014", null)]
        [NUnit.Framework.TestCaseAttribute("OpcUa_ASt5000_Lin", "Системные СОБЫТИЯ", "2", null)]
        [NUnit.Framework.TestCaseAttribute("OpcUa_ASt5000_Lin", "Состояние Data сервера 1", "0", null)]
        [NUnit.Framework.TestCaseAttribute("OpcUa_ASt5000_Lin", "Состояние Data сервера 2", "0", null)]
        [NUnit.Framework.TestCaseAttribute("OpcUa_ASt5000_Red", "Системные СОБЫТИЯ", "2", null)]
        [NUnit.Framework.TestCaseAttribute("OpcUa_ASt5000_Red", "Состояние Data сервера 1", "0", null)]
        [NUnit.Framework.TestCaseAttribute("OpcUa_ASt5000_Red", "Состояние Data сервера 2", "0", null)]
        [NUnit.Framework.TestCaseAttribute("cpu715_Mono", "Ошибки связи", "48", null)]
        [NUnit.Framework.TestCaseAttribute("cpu715_Red", "Ошибки связи", "240", null)]
        [NUnit.Framework.TestCaseAttribute("cpu715_Cluster", "Ошибки связи", "240", null)]
        [NUnit.Framework.TestCaseAttribute("CPU850_RED", "Состояние", "0", null)]
        [NUnit.Framework.TestCaseAttribute("GwExch_v1", "Системные события", "10002", null)]
        [NUnit.Framework.TestCaseAttribute("GwExch_v2", "Системные события", "10002", null)]
        [NUnit.Framework.TestCaseAttribute("GwExch_2_v1", "Системные события", "10002", null)]
        [NUnit.Framework.TestCaseAttribute("GwExch_2_v2", "Системные события", "10002", null)]
        [NUnit.Framework.TestCaseAttribute("VerProxy52_GE_v1", "Системные события", "10002", null)]
        [NUnit.Framework.TestCaseAttribute("VerProxy52_GE_v2", "Системные события", "10002", null)]
        [NUnit.Framework.TestCaseAttribute("VerProxy52_GE_2_v1", "Системные события", "10002", null)]
        [NUnit.Framework.TestCaseAttribute("VerProxy52_GE_2_v2", "Системные события", "10002", null)]
        [NUnit.Framework.TestCaseAttribute("Mb_Rtu11_1", "Системные СОБЫТИЯ", "2", null)]
        [NUnit.Framework.TestCaseAttribute("Mb_Rtu11_211", "Системные СОБЫТИЯ", "2", null)]
        [NUnit.Framework.TestCaseAttribute("Mb_Rtu12_1", "Системные СОБЫТИЯ", "2", null)]
        [NUnit.Framework.TestCaseAttribute("Mb_RoT40115_1", "Системные СОБЫТИЯ", "2", null)]
        [NUnit.Framework.TestCaseAttribute("Mb_RoT40115_211", "Системные СОБЫТИЯ", "2", null)]
        [NUnit.Framework.TestCaseAttribute("Mb_RoT40116_1", "Системные СОБЫТИЯ", "2", null)]
        [NUnit.Framework.TestCaseAttribute("Mb_Tcp502_1", "Системные СОБЫТИЯ", "2", null)]
        [NUnit.Framework.TestCaseAttribute("Mb_Tcp502_211", "Системные СОБЫТИЯ", "2", null)]
        [NUnit.Framework.TestCaseAttribute("Mb_Tcp552_1", "Системные СОБЫТИЯ", "2", null)]
        [NUnit.Framework.TestCaseAttribute("Mb_Udp602_1", "Системные СОБЫТИЯ", "2", null)]
        [NUnit.Framework.TestCaseAttribute("Mb_Udp602_211", "Системные СОБЫТИЯ", "2", null)]
        [NUnit.Framework.TestCaseAttribute("Mb_Udp662_1", "Системные СОБЫТИЯ", "2", null)]
        [NUnit.Framework.TestCaseAttribute("Mb2_Rtu21_1", "Системные СОБЫТИЯ", "2", null)]
        [NUnit.Framework.TestCaseAttribute("Mb2_Rtu21_211", "Системные СОБЫТИЯ", "2", null)]
        [NUnit.Framework.TestCaseAttribute("Mb2_Rtu22_1", "Системные СОБЫТИЯ", "2", null)]
        [NUnit.Framework.TestCaseAttribute("Mb2_RoT40215_1", "Системные СОБЫТИЯ", "2", null)]
        [NUnit.Framework.TestCaseAttribute("Mb2_RoT40215_211", "Системные СОБЫТИЯ", "2", null)]
        [NUnit.Framework.TestCaseAttribute("Mb2_RoT40216_1", "Системные СОБЫТИЯ", "2", null)]
        [NUnit.Framework.TestCaseAttribute("Mb2_Tcp522_1", "Системные СОБЫТИЯ", "2", null)]
        [NUnit.Framework.TestCaseAttribute("Mb2_Tcp522_2", "Системные СОБЫТИЯ", "2", null)]
        [NUnit.Framework.TestCaseAttribute("Mb2_Tcp522_211", "Системные СОБЫТИЯ", "2", null)]
        [NUnit.Framework.TestCaseAttribute("Mb2_Udp622_1", "Системные СОБЫТИЯ", "2", null)]
        [NUnit.Framework.TestCaseAttribute("Mb2_Udp622_2", "Системные СОБЫТИЯ", "2", null)]
        [NUnit.Framework.TestCaseAttribute("Mb2_Udp622_211", "Системные СОБЫТИЯ", "2", null)]
        [NUnit.Framework.TestCaseAttribute("OpcDa_Subs", "Системные СОБЫТИЯ", "2", null)]
        [NUnit.Framework.TestCaseAttribute("OpcDa_Async", "Системные СОБЫТИЯ", "2", null)]
        [NUnit.Framework.TestCaseAttribute("OpcDaProxy_Subs", "Системные СОБЫТИЯ", "2", null)]
        [NUnit.Framework.TestCaseAttribute("OpcDaProxy_Async", "Системные СОБЫТИЯ", "2", null)]
        [NUnit.Framework.TestCaseAttribute("AA1E1Q05A1", "Системные СОБЫТИЯ", "14", null)]
        [NUnit.Framework.TestCaseAttribute("AA1E1Q05A1", "Системные СОБЫТИЯ", "13", null)]
        [NUnit.Framework.TestCaseAttribute("AA1E1Q05A1", "Системные СОБЫТИЯ", "12", null)]
        [NUnit.Framework.TestCaseAttribute("iec104_sporadic", "Системные СОБЫТИЯ", "2", null)]
        [NUnit.Framework.TestCaseAttribute("Snmp_v1_NetSw27", "Состояние связи", "2", null)]
        [NUnit.Framework.TestCaseAttribute("Snmp_v2_NetSw28", "Состояние связи", "2", null)]
        [NUnit.Framework.TestCaseAttribute("Snmp_v3_NetSw27", "Состояние связи", "2", null)]
        [NUnit.Framework.TestCaseAttribute("Scada2_at02", "Системные СОБЫТИЯ (SDK)", "10025", null)]
        [NUnit.Framework.TestCaseAttribute("Scada2_at06", "Системные СОБЫТИЯ (SDK)", "10025", null)]
        [NUnit.Framework.TestCaseAttribute("Scada2_at04", "Системные СОБЫТИЯ (SDK)", "10025", null)]
        public void DiagEvents_01(string dev, string chan, string val, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "fromMirror",
                    "EpicДиагностика_Связи",
                    "parentSuite2_ExchUtils_События_Диагностики",
                    "suiteСобытияНорм",
                    "package_Зеркало_Системеные_События_Все"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Dev", dev);
            argumentsOfScenario.Add("Chan", chan);
            argumentsOfScenario.Add("val", val);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("DiagEvents_01", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 79
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 80
 testRunner.Then(string.Format("Проверяю в буфере событие {0} по параметру \'{1}\'.\'{2}\'.\'\'", val, dev, chan), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
