// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ExchangeUtils.Tests.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("GwEx2")]
    public partial class GwEx2Feature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "GwEx2.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "GwEx2", null, ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("GwEx2ex.GwE2_TimeStamp")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicTimeStamp")]
        [NUnit.Framework.CategoryAttribute("StoryGwEx2ex")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_GwEx2ex")]
        [NUnit.Framework.CategoryAttribute("suiteTimeStamp")]
        public void GwEx2Ex_GwE2_TimeStamp()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicTimeStamp",
                    "StoryGwEx2ex",
                    "parentSuite2_ExchUtils_GwEx2ex",
                    "suiteTimeStamp"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GwEx2ex.GwE2_TimeStamp", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 7
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 8
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 9
    testRunner.Given("Архив \'ArcWork\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 10
 testRunner.Given("Связь с 1 устройством \'GwExch_2_v1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 11
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 12
    testRunner.Given("Архив \'ArcReciv\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 13
 testRunner.Given("Связь с 2 устройством \'GwEx2_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 14
 testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_BOOL\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 15
    testRunner.Then("Сравнение архивных данных \'GwE2_BOOL\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 16
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_BYTE\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 17
    testRunner.Then("Сравнение архивных данных \'GwE2_BYTE\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 18
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_WORD\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 19
    testRunner.Then("Сравнение архивных данных \'GwE2_WORD\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 20
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_DWORD\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 21
    testRunner.Then("Сравнение архивных данных \'GwE2_DWORD\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 22
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_LWORD\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 23
    testRunner.Then("Сравнение архивных данных \'GwE2_LWORD\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 24
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_SINT\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 25
    testRunner.Then("Сравнение архивных данных \'GwE2_SINT\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 26
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_INT\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 27
    testRunner.Then("Сравнение архивных данных \'GwE2_INT\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 28
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_DINT\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 29
    testRunner.Then("Сравнение архивных данных \'GwE2_DINT\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 30
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_LINT\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 31
    testRunner.Then("Сравнение архивных данных \'GwE2_LINT\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 32
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_USINT\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 33
    testRunner.Then("Сравнение архивных данных \'GwE2_USINT\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 34
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_UINT\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 35
    testRunner.Then("Сравнение архивных данных \'GwE2_UINT\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 36
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_UDINT\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 37
    testRunner.Then("Сравнение архивных данных \'GwE2_UDINT\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 38
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_ULINT\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 39
    testRunner.Then("Сравнение архивных данных \'GwE2_ULINT\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 40
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_REAL\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 41
    testRunner.Then("Сравнение архивных данных \'GwE2_REAL\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 42
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_LREAL\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 43
    testRunner.Then("Сравнение архивных данных \'GwE2_LREAL\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 44
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_TIME\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 45
    testRunner.Then("Сравнение архивных данных \'GwE2_TIME\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 46
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_DATE\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 47
    testRunner.Then("Сравнение архивных данных \'GwE2_DATE\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("GwEx2ex.GwE2_GoodQual")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("StoryGwEx2ex")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_GwEx2ex")]
        [NUnit.Framework.CategoryAttribute("suiteПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void GwEx2Ex_GwE2_GoodQual()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicПроверка_Quality",
                    "StoryGwEx2ex",
                    "parentSuite2_ExchUtils_GwEx2ex",
                    "suiteПроверка_Quality",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GwEx2ex.GwE2_GoodQual", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 53
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 54
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 55
 testRunner.Given("Связь с устройством \'GwExch_2_v1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 56
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 57
 testRunner.Given("Связь с устройством \'GwEx2_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 58
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_BOOL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 59
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_BYTE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 60
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_WORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 61
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_DWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 62
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_LWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 63
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_SINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 64
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_INT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 65
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_DINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 66
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_LINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 67
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_USINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 68
 testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_UINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 69
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_UDINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 70
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_ULINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 71
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_REAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 72
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_LREAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 73
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_TIME_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 74
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_DATE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("GwEx2ex.GwE2_ReadWrite")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("StoryGwEx2ex")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_GwEx2ex")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteРазрешенные_переменные")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void GwEx2Ex_GwE2_ReadWrite()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "StoryGwEx2ex",
                    "parentSuite2_ExchUtils_GwEx2ex",
                    "suiteЧтение_Запись",
                    "subSuiteРазрешенные_переменные",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GwEx2ex.GwE2_ReadWrite", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 80
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 81
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 82
 testRunner.Given("Связь с устройством \'GwExch_2_v1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 83
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 84
 testRunner.Given("Связь с устройством \'GwEx2_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 85
 testRunner.Then("Проверка чтения и записи значений \'TRUE; FALSE\' в \'GwE2_BOOL_external\'.\'Значение\'" +
                        "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 86
 testRunner.Then("Проверка чтения и записи значений \'BYTE AnyValues\' в \'GwE2_BYTE_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 87
 testRunner.Then("Проверка чтения и записи значений \'WORD AnyValues\' в \'GwE2_WORD_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 88
 testRunner.Then("Проверка чтения и записи значений \'DWORD AnyValues\' в \'GwE2_DWORD_external\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 89
 testRunner.Then("Проверка чтения и записи значений \'LWORD AnyValues\' в \'GwE2_LWORD_external\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 90
 testRunner.Then("Проверка чтения и записи значений \'SINT AnyValues\' в \'GwE2_SINT_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 91
 testRunner.Then("Проверка чтения и записи значений \'INT AnyValues\' в \'GwE2_INT_external\'.\'Значение" +
                        "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 92
 testRunner.Then("Проверка чтения и записи значений \'DINT AnyValues\' в \'GwE2_DINT_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 93
 testRunner.Then("Проверка чтения и записи значений \'LINT AnyValues\' в \'GwE2_LINT_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 94
 testRunner.Then("Проверка чтения и записи значений \'USINT AnyValues\' в \'GwE2_USINT_external\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 95
 testRunner.Then("Проверка чтения и записи значений \'UINT AnyValues\' в \'GwE2_UINT_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 96
 testRunner.Then("Проверка чтения и записи значений \'UDINT AnyValues\' в \'GwE2_UDINT_external\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 97
 testRunner.Then("Проверка чтения и записи значений \'ULINT AnyValues\' в \'GwE2_ULINT_external\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 98
 testRunner.Then("Проверка чтения и записи значений \'REAL AnyValues\' в \'GwE2_REAL_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 99
 testRunner.Then("Проверка чтения и записи значений \'LREAL AnyValues\' в \'GwE2_LREAL_external\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 100
 testRunner.Then("Проверка чтения и записи значений \'TIME AnyValues\' в \'GwE2_TIME_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 101
 testRunner.Then("Проверка чтения и записи значений \'DATE AnyValues\' в \'GwE2_DATE_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("GwEx2ex.GwE2_WiteList")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("StoryGwEx2ex")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_GwEx2ex")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteЗапись_запрещена")]
        public void GwEx2Ex_GwE2_WiteList()
        {
            string[] tagsOfScenario = new string[] {
                    "ignore",
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "StoryGwEx2ex",
                    "parentSuite2_ExchUtils_GwEx2ex",
                    "suiteЧтение_Запись",
                    "subSuiteЗапись_запрещена"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GwEx2ex.GwE2_WiteList", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 107
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 108
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 109
 testRunner.Given("Связь с устройством \'GwExch_2_v1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 110
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 111
 testRunner.Given("Связь с устройством \'GwEx2_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 112
 testRunner.Then("Проверка записи \'GwE2_BOOL_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 113
 testRunner.Then("Проверка записи \'GwE2_BYTE_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 114
 testRunner.Then("Проверка записи \'GwE2_WORD_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 115
 testRunner.Then("Проверка записи \'GwE2_DWORD_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 116
 testRunner.Then("Проверка записи \'GwE2_LWORD_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 117
 testRunner.Then("Проверка записи \'GwE2_SINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 118
 testRunner.Then("Проверка записи \'GwE2_INT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 119
 testRunner.Then("Проверка записи \'GwE2_DINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 120
 testRunner.Then("Проверка записи \'GwE2_LINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 121
 testRunner.Then("Проверка записи \'GwE2_USINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 122
 testRunner.Then("Проверка записи \'GwE2_UINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 123
 testRunner.Then("Проверка записи \'GwE2_UDINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 124
 testRunner.Then("Проверка записи \'GwE2_ULINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 125
 testRunner.Then("Проверка записи \'GwE2_REAL_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 126
 testRunner.Then("Проверка записи \'GwE2_LREAL_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 127
 testRunner.Then("Проверка записи \'GwE2_TIME_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 128
 testRunner.Then("Проверка записи \'GwE2_DATE_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("GwEx1ex.GwE2_TimeStamp")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicTimeStamp")]
        [NUnit.Framework.CategoryAttribute("StoryGwEx1ex")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_GwEx1ex")]
        [NUnit.Framework.CategoryAttribute("suiteTimeStamp")]
        public void GwEx1Ex_GwE2_TimeStamp()
        {
            string[] tagsOfScenario = new string[] {
                    "ignore",
                    "fromMirror",
                    "fromGate",
                    "EpicTimeStamp",
                    "StoryGwEx1ex",
                    "parentSuite2_ExchUtils_GwEx1ex",
                    "suiteTimeStamp"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GwEx1ex.GwE2_TimeStamp", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 134
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 135
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 136
    testRunner.Given("Архив \'ArcWork\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 137
 testRunner.Given("Связь с 1 устройством \'GwExch_2_v1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 138
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 139
    testRunner.Given("Архив \'ArcReciv\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 140
 testRunner.Given("Связь с 2 устройством \'GwEx_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 141
 testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_BOOL\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 142
    testRunner.Then("Сравнение архивных данных \'GwE2_BOOL\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 143
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_BYTE\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 144
    testRunner.Then("Сравнение архивных данных \'GwE2_BYTE\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 145
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_WORD\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 146
    testRunner.Then("Сравнение архивных данных \'GwE2_WORD\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 147
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_DWORD\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 148
    testRunner.Then("Сравнение архивных данных \'GwE2_DWORD\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 149
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_LWORD\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 150
    testRunner.Then("Сравнение архивных данных \'GwE2_LWORD\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 151
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_SINT\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 152
    testRunner.Then("Сравнение архивных данных \'GwE2_SINT\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 153
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_INT\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 154
    testRunner.Then("Сравнение архивных данных \'GwE2_INT\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 155
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_DINT\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 156
    testRunner.Then("Сравнение архивных данных \'GwE2_DINT\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 157
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_LINT\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 158
    testRunner.Then("Сравнение архивных данных \'GwE2_LINT\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 159
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_USINT\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 160
    testRunner.Then("Сравнение архивных данных \'GwE2_USINT\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 161
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_UINT\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 162
    testRunner.Then("Сравнение архивных данных \'GwE2_UINT\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 163
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_UDINT\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 164
    testRunner.Then("Сравнение архивных данных \'GwE2_UDINT\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 165
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_ULINT\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 166
    testRunner.Then("Сравнение архивных данных \'GwE2_ULINT\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 167
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_REAL\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 168
    testRunner.Then("Сравнение архивных данных \'GwE2_REAL\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 169
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_LREAL\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 170
    testRunner.Then("Сравнение архивных данных \'GwE2_LREAL\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 171
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_TIME\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 172
    testRunner.Then("Сравнение архивных данных \'GwE2_TIME\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 173
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_DATE\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 174
    testRunner.Then("Сравнение архивных данных \'GwE2_DATE\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("GwEx1ex.GwE2_GoodQual")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("StoryGwEx1ex")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_GwEx1ex")]
        [NUnit.Framework.CategoryAttribute("suiteПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void GwEx1Ex_GwE2_GoodQual()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicПроверка_Quality",
                    "StoryGwEx1ex",
                    "parentSuite2_ExchUtils_GwEx1ex",
                    "suiteПроверка_Quality",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GwEx1ex.GwE2_GoodQual", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 180
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 181
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 182
 testRunner.Given("Связь с устройством \'GwExch_2_v1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 183
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 184
 testRunner.Given("Связь с устройством \'GwEx_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 185
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_BOOL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 186
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_BYTE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 187
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_WORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 188
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_DWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 189
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_LWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 190
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_SINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 191
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_INT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 192
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_DINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 193
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_LINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 194
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_USINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 195
 testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_UINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 196
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_UDINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 197
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_ULINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 198
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_REAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 199
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_LREAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 200
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_TIME_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 201
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_DATE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("GwEx1ex.GwE2_ReadWrite")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("StoryGwEx1ex")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_GwEx1ex")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteРазрешенные_переменные")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void GwEx1Ex_GwE2_ReadWrite()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "StoryGwEx1ex",
                    "parentSuite2_ExchUtils_GwEx1ex",
                    "suiteЧтение_Запись",
                    "subSuiteРазрешенные_переменные",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GwEx1ex.GwE2_ReadWrite", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 207
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 208
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 209
 testRunner.Given("Связь с устройством \'GwExch_2_v1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 210
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 211
 testRunner.Given("Связь с устройством \'GwEx_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 212
 testRunner.Then("Проверка чтения и записи значений \'TRUE; FALSE\' в \'GwE2_BOOL_external\'.\'Значение\'" +
                        "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 213
 testRunner.Then("Проверка чтения и записи значений \'BYTE AnyValues\' в \'GwE2_BYTE_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 214
 testRunner.Then("Проверка чтения и записи значений \'WORD AnyValues\' в \'GwE2_WORD_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 215
 testRunner.Then("Проверка чтения и записи значений \'DWORD AnyValues\' в \'GwE2_DWORD_external\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 216
 testRunner.Then("Проверка чтения и записи значений \'LWORD AnyValues\' в \'GwE2_LWORD_external\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 217
 testRunner.Then("Проверка чтения и записи значений \'SINT AnyValues\' в \'GwE2_SINT_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 218
 testRunner.Then("Проверка чтения и записи значений \'INT AnyValues\' в \'GwE2_INT_external\'.\'Значение" +
                        "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 219
 testRunner.Then("Проверка чтения и записи значений \'DINT AnyValues\' в \'GwE2_DINT_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 220
 testRunner.Then("Проверка чтения и записи значений \'LINT AnyValues\' в \'GwE2_LINT_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 221
 testRunner.Then("Проверка чтения и записи значений \'USINT AnyValues\' в \'GwE2_USINT_external\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 222
 testRunner.Then("Проверка чтения и записи значений \'UINT AnyValues\' в \'GwE2_UINT_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 223
 testRunner.Then("Проверка чтения и записи значений \'UDINT AnyValues\' в \'GwE2_UDINT_external\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 224
 testRunner.Then("Проверка чтения и записи значений \'ULINT AnyValues\' в \'GwE2_ULINT_external\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 225
 testRunner.Then("Проверка чтения и записи значений \'REAL AnyValues\' в \'GwE2_REAL_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 226
 testRunner.Then("Проверка чтения и записи значений \'LREAL AnyValues\' в \'GwE2_LREAL_external\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 227
 testRunner.Then("Проверка чтения и записи значений \'TIME AnyValues\' в \'GwE2_TIME_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 228
 testRunner.Then("Проверка чтения и записи значений \'DATE AnyValues\' в \'GwE2_DATE_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("GwEx1ex.GwE2_WiteList")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("StoryGwEx1ex")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_GwEx1ex")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteЗапись_запрещена")]
        public void GwEx1Ex_GwE2_WiteList()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "StoryGwEx1ex",
                    "parentSuite2_ExchUtils_GwEx1ex",
                    "suiteЧтение_Запись",
                    "subSuiteЗапись_запрещена"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GwEx1ex.GwE2_WiteList", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 233
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 234
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 235
 testRunner.Given("Связь с устройством \'GwExch_2_v1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 236
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 237
 testRunner.Given("Связь с устройством \'GwEx_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 238
 testRunner.Then("Проверка записи \'GwE2_BOOL_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 239
 testRunner.Then("Проверка записи \'GwE2_BYTE_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 240
 testRunner.Then("Проверка записи \'GwE2_WORD_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 241
 testRunner.Then("Проверка записи \'GwE2_DWORD_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 242
 testRunner.Then("Проверка записи \'GwE2_LWORD_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 243
 testRunner.Then("Проверка записи \'GwE2_SINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 244
 testRunner.Then("Проверка записи \'GwE2_INT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 245
 testRunner.Then("Проверка записи \'GwE2_DINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 246
 testRunner.Then("Проверка записи \'GwE2_LINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 247
 testRunner.Then("Проверка записи \'GwE2_USINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 248
 testRunner.Then("Проверка записи \'GwE2_UINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 249
 testRunner.Then("Проверка записи \'GwE2_UDINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 250
 testRunner.Then("Проверка записи \'GwE2_ULINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 251
 testRunner.Then("Проверка записи \'GwE2_REAL_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 252
 testRunner.Then("Проверка записи \'GwE2_LREAL_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 253
 testRunner.Then("Проверка записи \'GwE2_TIME_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 254
 testRunner.Then("Проверка записи \'GwE2_DATE_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("MbTcpSlave.GwE2_GoodQual")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("StoryModbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_Modbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void MbTcpSlave_GwE2_GoodQual()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicПроверка_Quality",
                    "StoryModbus_TCP_Slave",
                    "parentSuite2_ExchUtils_Modbus_TCP_Slave",
                    "suiteПроверка_Quality",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("MbTcpSlave.GwE2_GoodQual", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 260
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 261
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 262
 testRunner.Given("Связь с устройством \'GwExch_2_v1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 263
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 264
 testRunner.Given("Связь с устройством \'ModbusTcp_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 265
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_BOOL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 266
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_BYTE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 267
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_WORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 268
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_DWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 269
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_LWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 270
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_SINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 271
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_INT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 272
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_DINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 273
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_LINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 274
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_USINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 275
 testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_UINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 276
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_UDINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 277
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_ULINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 278
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_REAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 279
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_LREAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 280
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_TIME_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 281
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_DATE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("MbTcpSlave.GwE2_ReadWrite")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("StoryModbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_Modbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteРазрешенные_переменные")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void MbTcpSlave_GwE2_ReadWrite()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "StoryModbus_TCP_Slave",
                    "parentSuite2_ExchUtils_Modbus_TCP_Slave",
                    "suiteЧтение_Запись",
                    "subSuiteРазрешенные_переменные",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("MbTcpSlave.GwE2_ReadWrite", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 288
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 289
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 290
 testRunner.Given("Связь с устройством \'GwExch_2_v1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 291
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 292
 testRunner.Given("Связь с устройством \'ModbusTcp_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 293
 testRunner.Then("Проверка чтения и записи значений \'BOOL Values\' в \'GwE2_BOOL_external\'.\'Значение\'" +
                        "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 294
 testRunner.Then("Проверка чтения и записи значений \'BYTE AnyValues\' в \'GwE2_BYTE_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 295
 testRunner.Then("Проверка чтения и записи значений \'WORD AnyValues\' в \'GwE2_WORD_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 296
 testRunner.Then("Проверка чтения и записи значений \'DWORD AnyValues\' в \'GwE2_DWORD_external\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 297
 testRunner.Then("Проверка чтения и записи значений \'LWORD AnyValues\' в \'GwE2_LWORD_external\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 298
 testRunner.Then("Проверка чтения и записи значений \'SINT AnyValues\' в \'GwE2_SINT_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 299
 testRunner.Then("Проверка чтения и записи значений \'INT AnyValues\' в \'GwE2_INT_external\'.\'Значение" +
                        "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 300
 testRunner.Then("Проверка чтения и записи значений \'DINT AnyValues\' в \'GwE2_DINT_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 301
 testRunner.Then("Проверка чтения и записи значений \'DINT AnyValues\' в \'GwE2_LINT_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 302
 testRunner.Then("Проверка чтения и записи значений \'USINT AnyValues\' в \'GwE2_USINT_external\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 303
 testRunner.Then("Проверка чтения и записи значений \'UINT AnyValues\' в \'GwE2_UINT_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 304
 testRunner.Then("Проверка чтения и записи значений \'UDINT AnyValues\' в \'GwE2_UDINT_external\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 305
 testRunner.Then("Проверка чтения и записи значений \'UDINT AnyValues\' в \'GwE2_ULINT_external\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 306
 testRunner.Then("Проверка чтения и записи значений \'REAL AnyValues\' в \'GwE2_REAL_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 307
 testRunner.Then("Проверка чтения и записи значений \'LREAL AnyValues\' в \'GwE2_LREAL_external\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 308
 testRunner.Then("Проверка чтения и записи значений \'TIME AnyValues\' в \'GwE2_TIME_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 309
 testRunner.Then("Проверка чтения и записи значений \'DATE AnyValues\' в \'GwE2_DATE_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("MbTcpSlave.GwE2_WiteList")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("StoryModbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_Modbus_TCP_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteЗапись_запрещена")]
        public void MbTcpSlave_GwE2_WiteList()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "StoryModbus_TCP_Slave",
                    "parentSuite2_ExchUtils_Modbus_TCP_Slave",
                    "suiteЧтение_Запись",
                    "subSuiteЗапись_запрещена"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("MbTcpSlave.GwE2_WiteList", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 314
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 315
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 316
 testRunner.Given("Связь с устройством \'GwExch_2_v1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 317
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 318
 testRunner.Given("Связь с устройством \'ModbusTcp_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 319
 testRunner.Then("Проверка записи \'GwE2_BOOL_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 320
 testRunner.Then("Проверка записи \'GwE2_BYTE_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 321
 testRunner.Then("Проверка записи \'GwE2_WORD_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 322
 testRunner.Then("Проверка записи \'GwE2_DWORD_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 323
 testRunner.Then("Проверка записи \'GwE2_LWORD_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 324
 testRunner.Then("Проверка записи \'GwE2_SINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 325
 testRunner.Then("Проверка записи \'GwE2_INT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 326
 testRunner.Then("Проверка записи \'GwE2_DINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 327
 testRunner.Then("Проверка записи \'GwE2_LINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 328
 testRunner.Then("Проверка записи \'GwE2_USINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 329
 testRunner.Then("Проверка записи \'GwE2_UINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 330
 testRunner.Then("Проверка записи \'GwE2_UDINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 331
 testRunner.Then("Проверка записи \'GwE2_ULINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 332
 testRunner.Then("Проверка записи \'GwE2_REAL_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 333
 testRunner.Then("Проверка записи \'GwE2_LREAL_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 334
 testRunner.Then("Проверка записи \'GwE2_TIME_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 335
 testRunner.Then("Проверка записи \'GwE2_DATE_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Slave104.GwE2_TimeStamp")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicTimeStamp")]
        [NUnit.Framework.CategoryAttribute("Storyiec104_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_iec104_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteTimeStamp")]
        public void Slave104_GwE2_TimeStamp()
        {
            string[] tagsOfScenario = new string[] {
                    "ignore",
                    "fromMirror",
                    "fromGate",
                    "EpicTimeStamp",
                    "Storyiec104_Slave",
                    "parentSuite2_ExchUtils_iec104_Slave",
                    "suiteTimeStamp"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Slave104.GwE2_TimeStamp", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 341
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 342
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 343
    testRunner.Given("Архив \'ArcWork\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 344
 testRunner.Given("Связь с 1 устройством \'GwExch_2_v1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 345
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 346
    testRunner.Given("Архив \'ArcReciv\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 347
 testRunner.Given("Связь с 2 устройством \'Iec104_Sp\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 348
 testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_BOOL\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 349
    testRunner.Then("Сравнение архивных данных \'GwE2_BOOL\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 350
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_BYTE\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 351
    testRunner.Then("Сравнение архивных данных \'GwE2_BYTE\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 352
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_WORD\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 353
    testRunner.Then("Сравнение архивных данных \'GwE2_WORD\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 354
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_DWORD\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 355
    testRunner.Then("Сравнение архивных данных \'GwE2_DWORD\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 356
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_LWORD\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 357
    testRunner.Then("Сравнение архивных данных \'GwE2_LWORD\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 358
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_SINT\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 359
    testRunner.Then("Сравнение архивных данных \'GwE2_SINT\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 360
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_INT\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 361
    testRunner.Then("Сравнение архивных данных \'GwE2_INT\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 362
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_DINT\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 363
    testRunner.Then("Сравнение архивных данных \'GwE2_DINT\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 364
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_LINT\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 365
    testRunner.Then("Сравнение архивных данных \'GwE2_LINT\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 366
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_USINT\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 367
    testRunner.Then("Сравнение архивных данных \'GwE2_USINT\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 368
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_UINT\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 369
    testRunner.Then("Сравнение архивных данных \'GwE2_UINT\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 370
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_UDINT\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 371
    testRunner.Then("Сравнение архивных данных \'GwE2_UDINT\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 372
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_ULINT\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 373
    testRunner.Then("Сравнение архивных данных \'GwE2_ULINT\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 374
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_REAL\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 375
    testRunner.Then("Сравнение архивных данных \'GwE2_REAL\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 376
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_LREAL\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 377
    testRunner.Then("Сравнение архивных данных \'GwE2_LREAL\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 378
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_TIME\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 379
    testRunner.Then("Сравнение архивных данных \'GwE2_TIME\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 380
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_DATE\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 381
    testRunner.Then("Сравнение архивных данных \'GwE2_DATE\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Slave104.GwE2_GoodQual")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("Storyiec104_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_iec104_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void Slave104_GwE2_GoodQual()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicПроверка_Quality",
                    "Storyiec104_Slave",
                    "parentSuite2_ExchUtils_iec104_Slave",
                    "suiteПроверка_Quality",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Slave104.GwE2_GoodQual", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 387
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 388
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 389
 testRunner.Given("Связь с устройством \'GwExch_2_v1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 390
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 391
 testRunner.Given("Связь с устройством \'Iec104_Sp\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 392
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_BOOL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 393
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_BYTE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 394
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_WORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 395
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_DWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 396
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_LWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 397
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_SINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 398
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_INT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 399
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_DINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 400
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_LINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 401
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_USINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 402
 testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_UINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 403
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_UDINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 404
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_ULINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 405
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_REAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 406
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_LREAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 407
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_TIME_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 408
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_DATE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Slave104.GwE2_ReadWrite")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("Storyiec104_Slave")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_iec104_Slave")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteРазрешенные_переменные")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void Slave104_GwE2_ReadWrite()
        {
            string[] tagsOfScenario = new string[] {
                    "ignore",
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "Storyiec104_Slave",
                    "parentSuite2_ExchUtils_iec104_Slave",
                    "suiteЧтение_Запись",
                    "subSuiteРазрешенные_переменные",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Slave104.GwE2_ReadWrite", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 415
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 416
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 417
 testRunner.Given("Связь с устройством \'GwExch_2_v1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 418
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 419
 testRunner.Given("Связь с устройством \'Iec104_Sp\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 422
 testRunner.Then("Проверка запись значений \'1; 0x7F00; 0x7FFF\' в \'GwE2_WORD_ext_wr\'.\'Значение\' Чтен" +
                        "ие из \'GwE2_WORD_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 423
 testRunner.Then("Проверка запись значений \'FLOAT Like UINT\' в \'GwE2_DWORD_ext_wr\'.\'Значение\' Чтени" +
                        "е из \'GwE2_DWORD_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 425
 testRunner.Then("Проверка запись значений \'SINT AnyValues\' в \'GwE2_SINT_ext_wr\'.\'Значение\' Чтение " +
                        "из \'GwE2_SINT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 426
 testRunner.Then("Проверка запись значений \'INT AnyValues\' в \'GwE2_INT_ext_wr\'.\'Значение\' Чтение из" +
                        " \'GwE2_INT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 427
 testRunner.Then("Проверка запись значений \'FLOAT Like INT\' в \'GwE2_DINT_ext_wr\'.\'Значение\' Чтение " +
                        "из \'GwE2_DINT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 429
 testRunner.Then("Проверка запись значений \'USINT AnyValues\' в \'GwE2_USINT_ext_wr\'.\'Значение\' Чтени" +
                        "е из \'GwE2_USINT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 430
 testRunner.Then("Проверка запись значений \'UINT AnyValues\' в \'GwE2_UINT_ext_wr\'.\'Значение\' Чтение " +
                        "из \'GwE2_UINT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 431
 testRunner.Then("Проверка запись значений \'FLOAT Like UINT\' в \'GwE2_UDINT_ext_wr\'.\'Значение\' Чтени" +
                        "е из \'GwE2_UDINT_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 433
 testRunner.Then("Проверка запись значений \'REAL AnyValues\' в \'GwE2_REAL_ext_wr\'.\'Значение\' Чтение " +
                        "из \'GwE2_REAL_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 434
 testRunner.Then("Проверка запись значений \'REAL AnyValues\' в \'GwE2_LREAL_ext_wr\'.\'Значение\' Чтение" +
                        " из \'GwE2_LREAL_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 435
 testRunner.Then("Проверка запись значений \'FLOAT Like UINT\' в \'GwE2_TIME_ext_wr\'.\'Значение\' Чтение" +
                        " из \'GwE2_TIME_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 436
 testRunner.Then("Проверка запись значений \'FLOAT Like UINT\' в \'GwE2_DATE_ext_wr\'.\'Значение\' Чтение" +
                        " из \'GwE2_DATE_external\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("GwEx1Proxy.GwE2_GoodQual")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("StoryGwEx1Proxy")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_GwEx1Proxy")]
        [NUnit.Framework.CategoryAttribute("suiteПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void GwEx1Proxy_GwE2_GoodQual()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicПроверка_Quality",
                    "StoryGwEx1Proxy",
                    "parentSuite2_ExchUtils_GwEx1Proxy",
                    "suiteПроверка_Quality",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GwEx1Proxy.GwE2_GoodQual", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 442
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 443
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 444
 testRunner.Given("Связь с устройством \'VerProxyGwEx25_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 445
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_BOOL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 446
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_BYTE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 447
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_WORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 448
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_DWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 449
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_LWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 450
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_SINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 451
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_INT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 452
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_DINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 453
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_LINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 454
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_USINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 455
 testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_UINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 456
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_UDINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 457
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_ULINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 458
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_REAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 459
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_LREAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 460
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_TIME_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 461
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_DATE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("GwEx1Proxy.GwE2_ReadWrite")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("StoryGwEx1Proxy")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_GwEx1Proxy")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteРазрешенные_переменные")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void GwEx1Proxy_GwE2_ReadWrite()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "StoryGwEx1Proxy",
                    "parentSuite2_ExchUtils_GwEx1Proxy",
                    "suiteЧтение_Запись",
                    "subSuiteРазрешенные_переменные",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GwEx1Proxy.GwE2_ReadWrite", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 467
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 468
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 469
 testRunner.Given("Связь с устройством \'VerProxyGwEx25_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 470
 testRunner.Then("Проверка чтения и записи значений \'TRUE; FALSE\' в \'GwE2_BOOL_external\'.\'Значение\'" +
                        "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 471
 testRunner.Then("Проверка чтения и записи значений \'BYTE AnyValues\' в \'GwE2_BYTE_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 472
 testRunner.Then("Проверка чтения и записи значений \'WORD AnyValues\' в \'GwE2_WORD_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 473
 testRunner.Then("Проверка чтения и записи значений \'DWORD AnyValues\' в \'GwE2_DWORD_external\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 474
 testRunner.Then("Проверка чтения и записи значений \'LWORD AnyValues\' в \'GwE2_LWORD_external\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 475
 testRunner.Then("Проверка чтения и записи значений \'SINT AnyValues\' в \'GwE2_SINT_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 476
 testRunner.Then("Проверка чтения и записи значений \'INT AnyValues\' в \'GwE2_INT_external\'.\'Значение" +
                        "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 477
 testRunner.Then("Проверка чтения и записи значений \'DINT AnyValues\' в \'GwE2_DINT_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 478
 testRunner.Then("Проверка чтения и записи значений \'LINT AnyValues\' в \'GwE2_LINT_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 479
 testRunner.Then("Проверка чтения и записи значений \'USINT AnyValues\' в \'GwE2_USINT_external\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 480
 testRunner.Then("Проверка чтения и записи значений \'UINT AnyValues\' в \'GwE2_UINT_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 481
 testRunner.Then("Проверка чтения и записи значений \'UDINT AnyValues\' в \'GwE2_UDINT_external\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 482
 testRunner.Then("Проверка чтения и записи значений \'ULINT AnyValues\' в \'GwE2_ULINT_external\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 483
 testRunner.Then("Проверка чтения и записи значений \'REAL AnyValues\' в \'GwE2_REAL_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 484
 testRunner.Then("Проверка чтения и записи значений \'LREAL AnyValues\' в \'GwE2_LREAL_external\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 485
 testRunner.Then("Проверка чтения и записи значений \'TIME AnyValues\' в \'GwE2_TIME_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 486
 testRunner.Then("Проверка чтения и записи значений \'DATE AnyValues\' в \'GwE2_DATE_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("GwEx1Proxy.GwE2_WiteList")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("StoryGwEx1Proxy")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_GwEx1Proxy")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteЗапись_запрещена")]
        public void GwEx1Proxy_GwE2_WiteList()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "StoryGwEx1Proxy",
                    "parentSuite2_ExchUtils_GwEx1Proxy",
                    "suiteЧтение_Запись",
                    "subSuiteЗапись_запрещена"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GwEx1Proxy.GwE2_WiteList", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 491
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 492
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 493
 testRunner.Given("Связь с устройством \'VerProxyGwEx25_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 494
 testRunner.Then("Проверка записи \'GwE2_BOOL_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 495
 testRunner.Then("Проверка записи \'GwE2_BYTE_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 496
 testRunner.Then("Проверка записи \'GwE2_WORD_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 497
 testRunner.Then("Проверка записи \'GwE2_DWORD_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 498
 testRunner.Then("Проверка записи \'GwE2_LWORD_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 499
 testRunner.Then("Проверка записи \'GwE2_SINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 500
 testRunner.Then("Проверка записи \'GwE2_INT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 501
 testRunner.Then("Проверка записи \'GwE2_DINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 502
 testRunner.Then("Проверка записи \'GwE2_LINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 503
 testRunner.Then("Проверка записи \'GwE2_USINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 504
 testRunner.Then("Проверка записи \'GwE2_UINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 505
 testRunner.Then("Проверка записи \'GwE2_UDINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 506
 testRunner.Then("Проверка записи \'GwE2_ULINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 507
 testRunner.Then("Проверка записи \'GwE2_REAL_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 508
 testRunner.Then("Проверка записи \'GwE2_LREAL_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 509
 testRunner.Then("Проверка записи \'GwE2_TIME_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 510
 testRunner.Then("Проверка записи \'GwE2_DATE_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("GwEx2Proxy.GwE2_GoodQual")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("StoryGwEx2Proxy")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_GwEx2Proxy")]
        [NUnit.Framework.CategoryAttribute("suiteПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void GwEx2Proxy_GwE2_GoodQual()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicПроверка_Quality",
                    "StoryGwEx2Proxy",
                    "parentSuite2_ExchUtils_GwEx2Proxy",
                    "suiteПроверка_Quality",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GwEx2Proxy.GwE2_GoodQual", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 517
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 518
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 519
 testRunner.Given("Связь с устройством \'VerProxy2GwEx25_2\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 520
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_BOOL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 521
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_BYTE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 522
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_WORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 523
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_DWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 524
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_LWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 525
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_SINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 526
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_INT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 527
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_DINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 528
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_LINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 529
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_USINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 530
 testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_UINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 531
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_UDINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 532
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_ULINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 533
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_REAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 534
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_LREAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 535
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_TIME_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 536
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_DATE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("GwEx2Proxy.GwE2_ReadWrite")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("StoryGwEx2Proxy")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_GwEx2Proxy")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteРазрешенные_переменные")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void GwEx2Proxy_GwE2_ReadWrite()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "StoryGwEx2Proxy",
                    "parentSuite2_ExchUtils_GwEx2Proxy",
                    "suiteЧтение_Запись",
                    "subSuiteРазрешенные_переменные",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GwEx2Proxy.GwE2_ReadWrite", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 542
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 543
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 544
 testRunner.Given("Связь с устройством \'VerProxy2GwEx25_2\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 545
 testRunner.Then("Проверка чтения и записи значений \'TRUE; FALSE\' в \'GwE2_BOOL_external\'.\'Значение\'" +
                        "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 546
 testRunner.Then("Проверка чтения и записи значений \'BYTE AnyValues\' в \'GwE2_BYTE_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 547
 testRunner.Then("Проверка чтения и записи значений \'WORD AnyValues\' в \'GwE2_WORD_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 548
 testRunner.Then("Проверка чтения и записи значений \'DWORD AnyValues\' в \'GwE2_DWORD_external\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 549
 testRunner.Then("Проверка чтения и записи значений \'LWORD AnyValues\' в \'GwE2_LWORD_external\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 550
 testRunner.Then("Проверка чтения и записи значений \'SINT AnyValues\' в \'GwE2_SINT_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 551
 testRunner.Then("Проверка чтения и записи значений \'INT AnyValues\' в \'GwE2_INT_external\'.\'Значение" +
                        "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 552
 testRunner.Then("Проверка чтения и записи значений \'DINT AnyValues\' в \'GwE2_DINT_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 553
 testRunner.Then("Проверка чтения и записи значений \'LINT AnyValues\' в \'GwE2_LINT_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 554
 testRunner.Then("Проверка чтения и записи значений \'USINT AnyValues\' в \'GwE2_USINT_external\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 555
 testRunner.Then("Проверка чтения и записи значений \'UINT AnyValues\' в \'GwE2_UINT_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 556
 testRunner.Then("Проверка чтения и записи значений \'UDINT AnyValues\' в \'GwE2_UDINT_external\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 557
 testRunner.Then("Проверка чтения и записи значений \'ULINT AnyValues\' в \'GwE2_ULINT_external\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 558
 testRunner.Then("Проверка чтения и записи значений \'REAL AnyValues\' в \'GwE2_REAL_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 559
 testRunner.Then("Проверка чтения и записи значений \'LREAL AnyValues\' в \'GwE2_LREAL_external\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 560
 testRunner.Then("Проверка чтения и записи значений \'TIME AnyValues\' в \'GwE2_TIME_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 561
 testRunner.Then("Проверка чтения и записи значений \'DATE AnyValues\' в \'GwE2_DATE_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("GwEx2Proxy.GwE2_WiteList")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("StoryGwEx2Proxy")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_GwEx2Proxy")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteЗапись_запрещена")]
        public void GwEx2Proxy_GwE2_WiteList()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "StoryGwEx2Proxy",
                    "parentSuite2_ExchUtils_GwEx2Proxy",
                    "suiteЧтение_Запись",
                    "subSuiteЗапись_запрещена"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GwEx2Proxy.GwE2_WiteList", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 566
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 567
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 568
 testRunner.Given("Связь с устройством \'VerProxy2GwEx25_2\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 569
 testRunner.Then("Проверка записи \'GwE2_BOOL_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 570
 testRunner.Then("Проверка записи \'GwE2_BYTE_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 571
 testRunner.Then("Проверка записи \'GwE2_WORD_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 572
 testRunner.Then("Проверка записи \'GwE2_DWORD_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 573
 testRunner.Then("Проверка записи \'GwE2_LWORD_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 574
 testRunner.Then("Проверка записи \'GwE2_SINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 575
 testRunner.Then("Проверка записи \'GwE2_INT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 576
 testRunner.Then("Проверка записи \'GwE2_DINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 577
 testRunner.Then("Проверка записи \'GwE2_LINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 578
 testRunner.Then("Проверка записи \'GwE2_USINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 579
 testRunner.Then("Проверка записи \'GwE2_UINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 580
 testRunner.Then("Проверка записи \'GwE2_UDINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 581
 testRunner.Then("Проверка записи \'GwE2_ULINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 582
 testRunner.Then("Проверка записи \'GwE2_REAL_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 583
 testRunner.Then("Проверка записи \'GwE2_LREAL_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 584
 testRunner.Then("Проверка записи \'GwE2_TIME_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 585
 testRunner.Then("Проверка записи \'GwE2_DATE_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("OpcUAServer.GwE2_TimeStamp")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicTimeStamp")]
        [NUnit.Framework.CategoryAttribute("StoryOpcUAServer")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_OpcUAServer")]
        [NUnit.Framework.CategoryAttribute("suiteTimeStamp")]
        public void OpcUAServer_GwE2_TimeStamp()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicTimeStamp",
                    "StoryOpcUAServer",
                    "parentSuite2_ExchUtils_OpcUAServer",
                    "suiteTimeStamp"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("OpcUAServer.GwE2_TimeStamp", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 590
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 591
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 592
    testRunner.Given("Архив \'ArcWork\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 593
 testRunner.Given("Связь с 1 устройством \'GwExch_2_v1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 594
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 595
    testRunner.Given("Архив \'ArcReciv\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 596
 testRunner.Given("Связь с 2 устройством \'OPC_UA_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 597
 testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_BOOL\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 598
    testRunner.Then("Сравнение архивных данных \'GwE2_BOOL\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 599
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_BYTE\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 600
    testRunner.Then("Сравнение архивных данных \'GwE2_BYTE\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 601
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_WORD\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 602
    testRunner.Then("Сравнение архивных данных \'GwE2_WORD\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 603
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_DWORD\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 604
    testRunner.Then("Сравнение архивных данных \'GwE2_DWORD\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 605
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_LWORD\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 606
    testRunner.Then("Сравнение архивных данных \'GwE2_LWORD\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 607
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_SINT\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 608
    testRunner.Then("Сравнение архивных данных \'GwE2_SINT\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 609
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_INT\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 610
    testRunner.Then("Сравнение архивных данных \'GwE2_INT\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 611
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_DINT\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 612
    testRunner.Then("Сравнение архивных данных \'GwE2_DINT\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 613
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_LINT\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 614
    testRunner.Then("Сравнение архивных данных \'GwE2_LINT\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 615
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_USINT\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 616
    testRunner.Then("Сравнение архивных данных \'GwE2_USINT\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 617
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_UINT\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 618
    testRunner.Then("Сравнение архивных данных \'GwE2_UINT\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 619
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_UDINT\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 620
    testRunner.Then("Сравнение архивных данных \'GwE2_UDINT\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 621
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_ULINT\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 622
    testRunner.Then("Сравнение архивных данных \'GwE2_ULINT\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 623
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_REAL\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 624
    testRunner.Then("Сравнение архивных данных \'GwE2_REAL\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 625
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_LREAL\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 626
    testRunner.Then("Сравнение архивных данных \'GwE2_LREAL\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 627
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_TIME\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 628
    testRunner.Then("Сравнение архивных данных \'GwE2_TIME\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 629
    testRunner.When("Чтение исходных архивных данных \'GwE2v1_Var_DATE\'.\'Значение\' из \'ArcWork\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 630
    testRunner.Then("Сравнение архивных данных \'GwE2_DATE\'.\'Значение\' из \'ArcReciv\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("OpcUAServer.GwE2_GoodQual")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("StoryOpcUAServer")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_OpcUAServer")]
        [NUnit.Framework.CategoryAttribute("suiteПроверка_Quality")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void OpcUAServer_GwE2_GoodQual()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicПроверка_Quality",
                    "StoryOpcUAServer",
                    "parentSuite2_ExchUtils_OpcUAServer",
                    "suiteПроверка_Quality",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("OpcUAServer.GwE2_GoodQual", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 636
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 637
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 638
 testRunner.Given("Связь с устройством \'GwExch_2_v1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 639
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 640
 testRunner.Given("Связь с устройством \'OPC_UA_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 641
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_BOOL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 642
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_BYTE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 643
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_WORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 644
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_DWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 645
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_LWORD_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 646
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_SINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 647
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_INT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 648
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_DINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 649
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_LINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 650
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_USINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 651
 testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_UINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 652
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_UDINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 653
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_ULINT_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 654
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_REAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 655
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_LREAL_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 656
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_TIME_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 657
    testRunner.Then("Проверка Runtime качества \'Good\' переменной \'GwE2_DATE_const\'.\'Значение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("OpcUAServer.GwE2_ReadWrite")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("StoryOpcUAServer")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_OpcUAServer")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteРазрешенные_переменные")]
        [NUnit.Framework.CategoryAttribute("critical")]
        public void OpcUAServer_GwE2_ReadWrite()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "StoryOpcUAServer",
                    "parentSuite2_ExchUtils_OpcUAServer",
                    "suiteЧтение_Запись",
                    "subSuiteРазрешенные_переменные",
                    "critical"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("OpcUAServer.GwE2_ReadWrite", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 663
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 664
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 665
 testRunner.Given("Связь с устройством \'GwExch_2_v1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 666
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 667
 testRunner.Given("Связь с устройством \'OPC_UA_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 668
 testRunner.Then("Проверка чтения и записи значений \'TRUE; FALSE\' в \'GwE2_BOOL_external\'.\'Значение\'" +
                        "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 669
 testRunner.Then("Проверка чтения и записи значений \'BYTE AnyValues\' в \'GwE2_BYTE_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 670
 testRunner.Then("Проверка чтения и записи значений \'WORD AnyValues\' в \'GwE2_WORD_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 671
 testRunner.Then("Проверка чтения и записи значений \'DWORD AnyValues\' в \'GwE2_DWORD_external\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 672
 testRunner.Then("Проверка чтения и записи значений \'LWORD AnyValues\' в \'GwE2_LWORD_external\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 673
 testRunner.Then("Проверка чтения и записи значений \'SINT AnyValues\' в \'GwE2_SINT_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 674
 testRunner.Then("Проверка чтения и записи значений \'INT AnyValues\' в \'GwE2_INT_external\'.\'Значение" +
                        "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 675
 testRunner.Then("Проверка чтения и записи значений \'DINT AnyValues\' в \'GwE2_DINT_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 676
 testRunner.Then("Проверка чтения и записи значений \'LINT AnyValues\' в \'GwE2_LINT_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 677
 testRunner.Then("Проверка чтения и записи значений \'USINT AnyValues\' в \'GwE2_USINT_external\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 678
 testRunner.Then("Проверка чтения и записи значений \'UINT AnyValues\' в \'GwE2_UINT_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 679
 testRunner.Then("Проверка чтения и записи значений \'UDINT AnyValues\' в \'GwE2_UDINT_external\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 680
 testRunner.Then("Проверка чтения и записи значений \'ULINT AnyValues\' в \'GwE2_ULINT_external\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 681
 testRunner.Then("Проверка чтения и записи значений \'REAL AnyValues\' в \'GwE2_REAL_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 682
 testRunner.Then("Проверка чтения и записи значений \'LREAL AnyValues\' в \'GwE2_LREAL_external\'.\'Знач" +
                        "ение\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 683
 testRunner.Then("Проверка чтения и записи значений \'TIME AnyValues\' в \'GwE2_TIME_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 684
 testRunner.Then("Проверка чтения и записи значений \'DATE AnyValues\' в \'GwE2_DATE_external\'.\'Значен" +
                        "ие\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("OpcUAServer.GwE2_WiteList")]
        [NUnit.Framework.CategoryAttribute("fromMirror")]
        [NUnit.Framework.CategoryAttribute("fromGate")]
        [NUnit.Framework.CategoryAttribute("EpicЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("StoryOpcUAServer")]
        [NUnit.Framework.CategoryAttribute("parentSuite2_ExchUtils_OpcUAServer")]
        [NUnit.Framework.CategoryAttribute("suiteЧтение_Запись")]
        [NUnit.Framework.CategoryAttribute("subSuiteЗапись_запрещена")]
        public void OpcUAServer_GwE2_WiteList()
        {
            string[] tagsOfScenario = new string[] {
                    "fromMirror",
                    "fromGate",
                    "EpicЧтение_Запись",
                    "StoryOpcUAServer",
                    "parentSuite2_ExchUtils_OpcUAServer",
                    "suiteЧтение_Запись",
                    "subSuiteЗапись_запрещена"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("OpcUAServer.GwE2_WiteList", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 689
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 690
 testRunner.Given("Шлюзы \'work\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 691
 testRunner.Given("Связь с устройством \'GwExch_2_v1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 692
    testRunner.Given("Шлюз \'DataReceiver\' в работе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 693
 testRunner.Given("Связь с устройством \'OPC_UA_1\' в норме", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 694
 testRunner.Then("Проверка записи \'GwE2_BOOL_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 695
 testRunner.Then("Проверка записи \'GwE2_BYTE_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 696
 testRunner.Then("Проверка записи \'GwE2_WORD_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 697
 testRunner.Then("Проверка записи \'GwE2_DWORD_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 698
 testRunner.Then("Проверка записи \'GwE2_LWORD_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 699
 testRunner.Then("Проверка записи \'GwE2_SINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 700
 testRunner.Then("Проверка записи \'GwE2_INT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 701
 testRunner.Then("Проверка записи \'GwE2_DINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 702
 testRunner.Then("Проверка записи \'GwE2_LINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 703
 testRunner.Then("Проверка записи \'GwE2_USINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 704
 testRunner.Then("Проверка записи \'GwE2_UINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 705
 testRunner.Then("Проверка записи \'GwE2_UDINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 706
 testRunner.Then("Проверка записи \'GwE2_ULINT_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 707
 testRunner.Then("Проверка записи \'GwE2_REAL_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 708
 testRunner.Then("Проверка записи \'GwE2_LREAL_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 709
 testRunner.Then("Проверка записи \'GwE2_TIME_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 710
 testRunner.Then("Проверка записи \'GwE2_DATE_wr\'.\'Значение\' не в белом списке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
